
ver2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000406  00800100  00008aba  00008b4e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00008aba  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000004bd  00800506  00800506  00008f54  2**0
                  ALLOC
  3 .debug_aranges 00000200  00000000  00000000  00008f54  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000009d7  00000000  00000000  00009154  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000727e  00000000  00000000  00009b2b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001af4  00000000  00000000  00010da9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00006396  00000000  00000000  0001289d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000870  00000000  00000000  00018c34  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000100b  00000000  00000000  000194a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00006902  00000000  00000000  0001a4af  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000430  00000000  00000000  00020db1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
       4:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       8:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
       c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      10:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      14:	0c 94 67 00 	jmp	0xce	; 0xce <__vector_5>
      18:	0c 94 76 00 	jmp	0xec	; 0xec <__vector_6>
      1c:	0c 94 85 00 	jmp	0x10a	; 0x10a <__vector_7>
      20:	0c 94 94 00 	jmp	0x128	; 0x128 <__vector_8>
      24:	0c 94 c8 00 	jmp	0x190	; 0x190 <__vector_9>
      28:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      2c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      30:	0c 94 6e 15 	jmp	0x2adc	; 0x2adc <__vector_12>
      34:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      38:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      3c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__vector_15>
      40:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      44:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      48:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      4c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      50:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      54:	0c 94 2a 01 	jmp	0x254	; 0x254 <__vector_21>
      58:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      5c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      60:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      64:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      68:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      6c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      70:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      74:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      78:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      7c:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      80:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>
      84:	0c 94 89 03 	jmp	0x712	; 0x712 <__vector_33>
      88:	0c 94 65 00 	jmp	0xca	; 0xca <__bad_interrupt>

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	15 e0       	ldi	r17, 0x05	; 5
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	ea eb       	ldi	r30, 0xBA	; 186
      a0:	fa e8       	ldi	r31, 0x8A	; 138
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a6 30       	cpi	r26, 0x06	; 6
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	19 e0       	ldi	r17, 0x09	; 9
      b4:	a6 e0       	ldi	r26, 0x06	; 6
      b6:	b5 e0       	ldi	r27, 0x05	; 5
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a3 3c       	cpi	r26, 0xC3	; 195
      be:	b1 07       	cpc	r27, r17
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 63 13 	call	0x26c6	; 0x26c6 <main>
      c6:	0c 94 5b 45 	jmp	0x8ab6	; 0x8ab6 <_exit>

000000ca <__bad_interrupt>:
      ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ce <__vector_5>:



/////////////////////////////////////////////////////////////////////////   
ISR(INT4_vect)
{
      ce:	1f 92       	push	r1
      d0:	0f 92       	push	r0
      d2:	0f b6       	in	r0, 0x3f	; 63
      d4:	0f 92       	push	r0
      d6:	11 24       	eor	r1, r1
      d8:	8f 93       	push	r24
	SET_SW_FLAG = 1;
      da:	81 e0       	ldi	r24, 0x01	; 1
      dc:	80 93 1a 05 	sts	0x051A, r24
	//TIM_PUL_MODE_FLAG = 1;
}
      e0:	8f 91       	pop	r24
      e2:	0f 90       	pop	r0
      e4:	0f be       	out	0x3f, r0	; 63
      e6:	0f 90       	pop	r0
      e8:	1f 90       	pop	r1
      ea:	18 95       	reti

000000ec <__vector_6>:
ISR(INT5_vect)
{
      ec:	1f 92       	push	r1
      ee:	0f 92       	push	r0
      f0:	0f b6       	in	r0, 0x3f	; 63
      f2:	0f 92       	push	r0
      f4:	11 24       	eor	r1, r1
      f6:	8f 93       	push	r24
	UP_SW_FLAG = 1;
      f8:	81 e0       	ldi	r24, 0x01	; 1
      fa:	80 93 1b 05 	sts	0x051B, r24
}
      fe:	8f 91       	pop	r24
     100:	0f 90       	pop	r0
     102:	0f be       	out	0x3f, r0	; 63
     104:	0f 90       	pop	r0
     106:	1f 90       	pop	r1
     108:	18 95       	reti

0000010a <__vector_7>:
ISR(INT6_vect)
{
     10a:	1f 92       	push	r1
     10c:	0f 92       	push	r0
     10e:	0f b6       	in	r0, 0x3f	; 63
     110:	0f 92       	push	r0
     112:	11 24       	eor	r1, r1
     114:	8f 93       	push	r24
	OK_SW_FLAG = 1;
     116:	81 e0       	ldi	r24, 0x01	; 1
     118:	80 93 1c 05 	sts	0x051C, r24
}
     11c:	8f 91       	pop	r24
     11e:	0f 90       	pop	r0
     120:	0f be       	out	0x3f, r0	; 63
     122:	0f 90       	pop	r0
     124:	1f 90       	pop	r1
     126:	18 95       	reti

00000128 <__vector_8>:
ISR(INT7_vect)
{
     128:	1f 92       	push	r1
     12a:	0f 92       	push	r0
     12c:	0f b6       	in	r0, 0x3f	; 63
     12e:	0f 92       	push	r0
     130:	11 24       	eor	r1, r1
     132:	8f 93       	push	r24
	DOWN_SW_FLAG = 1;
     134:	81 e0       	ldi	r24, 0x01	; 1
     136:	80 93 1d 05 	sts	0x051D, r24
}
     13a:	8f 91       	pop	r24
     13c:	0f 90       	pop	r0
     13e:	0f be       	out	0x3f, r0	; 63
     140:	0f 90       	pop	r0
     142:	1f 90       	pop	r1
     144:	18 95       	reti

00000146 <__vector_15>:


ISR(TIMER0_COMP_vect)			//for Watch Dog
{
     146:	1f 92       	push	r1
     148:	0f 92       	push	r0
     14a:	0f b6       	in	r0, 0x3f	; 63
     14c:	0f 92       	push	r0
     14e:	11 24       	eor	r1, r1
     150:	8f 93       	push	r24
    if((++SEC_CNT)==125)
     152:	80 91 24 05 	lds	r24, 0x0524
     156:	8f 5f       	subi	r24, 0xFF	; 255
     158:	80 93 24 05 	sts	0x0524, r24
     15c:	80 91 24 05 	lds	r24, 0x0524
     160:	8d 37       	cpi	r24, 0x7D	; 125
     162:	39 f4       	brne	.+14     	; 0x172 <__vector_15+0x2c>
    {
        SEC_CNT = 0;
     164:	10 92 24 05 	sts	0x0524, r1
        WD_SEC++;			//1sec
     168:	80 91 25 05 	lds	r24, 0x0525
     16c:	8f 5f       	subi	r24, 0xFF	; 255
     16e:	80 93 25 05 	sts	0x0525, r24
    }
    if(WD_SEC == WD_TIM_SET)
     172:	80 91 25 05 	lds	r24, 0x0525
     176:	85 30       	cpi	r24, 0x05	; 5
     178:	29 f4       	brne	.+10     	; 0x184 <__vector_15+0x3e>
    {
        WD_SEC = 0;
     17a:	10 92 25 05 	sts	0x0525, r1
        WD_FLAG = 1;
     17e:	81 e0       	ldi	r24, 0x01	; 1
     180:	80 93 26 05 	sts	0x0526, r24
    }    
}
     184:	8f 91       	pop	r24
     186:	0f 90       	pop	r0
     188:	0f be       	out	0x3f, r0	; 63
     18a:	0f 90       	pop	r0
     18c:	1f 90       	pop	r1
     18e:	18 95       	reti

00000190 <__vector_9>:
}

//Question 1) When exactly TIMER2_COMP_INTERRUPT occur?
//				=> TIMER2_COMP_INTERRUPT occur every 3.2msec
ISR(TIMER2_COMP_vect)
{	
     190:	1f 92       	push	r1
     192:	0f 92       	push	r0
     194:	0f b6       	in	r0, 0x3f	; 63
     196:	0f 92       	push	r0
     198:	11 24       	eor	r1, r1
     19a:	8f 93       	push	r24

	
	//_delay_ms(5);

		//FND_BLINK_FLAG가 1이 아니거나 BLINK_CNT가 30이하라면 
    if((!FND_BLINK_FLAG)||(BLINK_CNT<30))							//FND_BLINK_FLAG
     19c:	80 91 23 05 	lds	r24, 0x0523
     1a0:	88 23       	and	r24, r24
     1a2:	21 f0       	breq	.+8      	; 0x1ac <__vector_9+0x1c>
     1a4:	80 91 31 05 	lds	r24, 0x0531
     1a8:	8e 31       	cpi	r24, 0x1E	; 30
     1aa:	a8 f5       	brcc	.+106    	; 0x216 <__vector_9+0x86>
    {
        switch(FND_INDEX++)					//FND_INDEX 
     1ac:	80 91 32 05 	lds	r24, 0x0532
     1b0:	8f 5f       	subi	r24, 0xFF	; 255
     1b2:	80 93 32 05 	sts	0x0532, r24
     1b6:	81 50       	subi	r24, 0x01	; 1
     1b8:	81 30       	cpi	r24, 0x01	; 1
     1ba:	81 f0       	breq	.+32     	; 0x1dc <__vector_9+0x4c>
     1bc:	81 30       	cpi	r24, 0x01	; 1
     1be:	28 f0       	brcs	.+10     	; 0x1ca <__vector_9+0x3a>
     1c0:	82 30       	cpi	r24, 0x02	; 2
     1c2:	a9 f0       	breq	.+42     	; 0x1ee <__vector_9+0x5e>
     1c4:	83 30       	cpi	r24, 0x03	; 3
     1c6:	69 f5       	brne	.+90     	; 0x222 <__vector_9+0x92>
     1c8:	1e c0       	rjmp	.+60     	; 0x206 <__vector_9+0x76>
        {
            case 0:
                FND = FND_D0;
     1ca:	80 91 da 03 	lds	r24, 0x03DA
     1ce:	85 bb       	out	0x15, r24	; 21
				FND_C = (FND_C&0x0f)| FND_C0;
     1d0:	88 b3       	in	r24, 0x18	; 24
     1d2:	8f ee       	ldi	r24, 0xEF	; 239
     1d4:	88 bb       	out	0x18, r24	; 24
                if(FND_DOT0)
     1d6:	80 91 17 05 	lds	r24, 0x0517
     1da:	11 c0       	rjmp	.+34     	; 0x1fe <__vector_9+0x6e>
                    DOT_ON;
                else
                    DOT_OFF;            
                break;
            case 1:
                FND = FND_D1;
     1dc:	80 91 db 03 	lds	r24, 0x03DB
     1e0:	85 bb       	out	0x15, r24	; 21
				FND_C = (FND_C&0x0f)|FND_C1;
     1e2:	88 b3       	in	r24, 0x18	; 24
     1e4:	8f ed       	ldi	r24, 0xDF	; 223
     1e6:	88 bb       	out	0x18, r24	; 24
                if(FND_DOT1)
     1e8:	80 91 18 05 	lds	r24, 0x0518
     1ec:	08 c0       	rjmp	.+16     	; 0x1fe <__vector_9+0x6e>
                    DOT_ON;
                else
                    DOT_OFF;
                break;
            case 2:
                FND = FND_D2;
     1ee:	80 91 dc 03 	lds	r24, 0x03DC
     1f2:	85 bb       	out	0x15, r24	; 21
				FND_C = (FND_C&0x0f)|FND_C2;
     1f4:	88 b3       	in	r24, 0x18	; 24
     1f6:	8f eb       	ldi	r24, 0xBF	; 191
     1f8:	88 bb       	out	0x18, r24	; 24
                if(FND_DOT2)
     1fa:	80 91 19 05 	lds	r24, 0x0519
     1fe:	88 23       	and	r24, r24
     200:	41 f0       	breq	.+16     	; 0x212 <__vector_9+0x82>
                    DOT_ON;
     202:	af 9a       	sbi	0x15, 7	; 21
     204:	0e c0       	rjmp	.+28     	; 0x222 <__vector_9+0x92>
                else
                    DOT_OFF;
                break;
            case 3:
                FND = FND_D3;
     206:	80 91 dd 03 	lds	r24, 0x03DD
     20a:	85 bb       	out	0x15, r24	; 21
				FND_C = (FND_C&0x0f)| FND_C3;
     20c:	88 b3       	in	r24, 0x18	; 24
     20e:	8f e7       	ldi	r24, 0x7F	; 127
     210:	88 bb       	out	0x18, r24	; 24
                DOT_OFF;        
     212:	af 98       	cbi	0x15, 7	; 21
     214:	06 c0       	rjmp	.+12     	; 0x222 <__vector_9+0x92>
                break;
        }
    }
    else
    {
        FND_INDEX++; 
     216:	80 91 32 05 	lds	r24, 0x0532
     21a:	8f 5f       	subi	r24, 0xFF	; 255
     21c:	80 93 32 05 	sts	0x0532, r24
        ALL_FND_OFF;
     220:	15 ba       	out	0x15, r1	; 21
    }

    if(FND_INDEX == 4)					//if(FND_INDEX == 4)
     222:	80 91 32 05 	lds	r24, 0x0532
     226:	84 30       	cpi	r24, 0x04	; 4
     228:	79 f4       	brne	.+30     	; 0x248 <__vector_9+0xb8>
    {										//if((!FND_BLINK_FLAG)||(BLINK_CNT<30))  ==> Without condition
        if(FND_BLINK_FLAG)		
     22a:	80 91 23 05 	lds	r24, 0x0523
     22e:	88 23       	and	r24, r24
     230:	39 f0       	breq	.+14     	; 0x240 <__vector_9+0xb0>
        {			
			//FND_OP(4000+BLINK_CNT);	//minuk				보류
			//_delay_ms(50);//minuk				//BLINK_CNT	보류 		
						
            BLINK_CNT++;
     232:	80 91 31 05 	lds	r24, 0x0531
     236:	8f 5f       	subi	r24, 0xFF	; 255
     238:	80 93 31 05 	sts	0x0531, r24

            if(BLINK_CNT==40)
     23c:	88 32       	cpi	r24, 0x28	; 40
     23e:	11 f4       	brne	.+4      	; 0x244 <__vector_9+0xb4>
                BLINK_CNT = 0;              
        }
        else
            BLINK_CNT = 0;           
     240:	10 92 31 05 	sts	0x0531, r1
        
		FND_INDEX = 0;				
     244:	10 92 32 05 	sts	0x0532, r1
										
    }
}
     248:	8f 91       	pop	r24
     24a:	0f 90       	pop	r0
     24c:	0f be       	out	0x3f, r0	; 63
     24e:	0f 90       	pop	r0
     250:	1f 90       	pop	r1
     252:	18 95       	reti

00000254 <__vector_21>:



ISR(ADC_vect)
{
     254:	1f 92       	push	r1
     256:	0f 92       	push	r0
     258:	0f b6       	in	r0, 0x3f	; 63
     25a:	0f 92       	push	r0
     25c:	11 24       	eor	r1, r1
     25e:	8f 93       	push	r24
    ADC_FLAG = 1;
     260:	81 e0       	ldi	r24, 0x01	; 1
     262:	80 93 16 05 	sts	0x0516, r24
	
}
     266:	8f 91       	pop	r24
     268:	0f 90       	pop	r0
     26a:	0f be       	out	0x3f, r0	; 63
     26c:	0f 90       	pop	r0
     26e:	1f 90       	pop	r1
     270:	18 95       	reti

00000272 <TWI_INIT>:
}
/////////////////////////////////////////////////////////////////////////

void TWI_INIT(void)
{
	TWBR = 0x72;
     272:	82 e7       	ldi	r24, 0x72	; 114
     274:	80 93 70 00 	sts	0x0070, r24
	TWSR = 0x00;
     278:	10 92 71 00 	sts	0x0071, r1
}
     27c:	08 95       	ret

0000027e <TWI_ERROR>:

void TWI_ERROR(void)
{
	TWCR=((1<<TWINT)|(1<<TWEN)|(1<<TWSTO)); 	//TWI - Stop 
     27e:	e4 e7       	ldi	r30, 0x74	; 116
     280:	f0 e0       	ldi	r31, 0x00	; 0
     282:	84 e9       	ldi	r24, 0x94	; 148
     284:	80 83       	st	Z, r24
	TWCR=(0<<TWEN); 							//TWI - Aus
     286:	10 82       	st	Z, r1

	return ;
}
     288:	08 95       	ret

0000028a <twi_master_read>:
        TWCR = 0xc4;
        return dat;
}

unsigned char twi_master_read(unsigned char addr)
{
     28a:	98 2f       	mov	r25, r24
        unsigned char dat;
        
        TWCR = 0xa4;                    // START
     28c:	84 ea       	ldi	r24, 0xA4	; 164
     28e:	80 93 74 00 	sts	0x0074, r24
        
		while(((TWCR & 0x80) == 0x00) || ((TWSR & 0xf8) != 0x08));
     292:	80 91 74 00 	lds	r24, 0x0074
     296:	87 ff       	sbrs	r24, 7
     298:	fc cf       	rjmp	.-8      	; 0x292 <twi_master_read+0x8>
     29a:	80 91 71 00 	lds	r24, 0x0071
     29e:	88 7f       	andi	r24, 0xF8	; 248
     2a0:	88 30       	cpi	r24, 0x08	; 8
     2a2:	b9 f7       	brne	.-18     	; 0x292 <twi_master_read+0x8>
        TWDR = (addr << 1) | 1;
     2a4:	99 0f       	add	r25, r25
     2a6:	91 60       	ori	r25, 0x01	; 1
     2a8:	90 93 73 00 	sts	0x0073, r25
        TWCR = 0x84;
     2ac:	84 e8       	ldi	r24, 0x84	; 132
     2ae:	80 93 74 00 	sts	0x0074, r24
		while(((TWCR & 0x80) == 0x00) || ((TWSR & 0xf8) != 0x40));
     2b2:	80 91 74 00 	lds	r24, 0x0074
     2b6:	87 ff       	sbrs	r24, 7
     2b8:	fc cf       	rjmp	.-8      	; 0x2b2 <twi_master_read+0x28>
     2ba:	80 91 71 00 	lds	r24, 0x0071
     2be:	88 7f       	andi	r24, 0xF8	; 248
     2c0:	80 34       	cpi	r24, 0x40	; 64
     2c2:	b9 f7       	brne	.-18     	; 0x2b2 <twi_master_read+0x28>
		TWCR = 0x84;
     2c4:	84 e8       	ldi	r24, 0x84	; 132
     2c6:	80 93 74 00 	sts	0x0074, r24
        while(((TWCR & 0x80) == 0x00) || ((TWSR & 0xf8) != 0x58));
     2ca:	80 91 74 00 	lds	r24, 0x0074
     2ce:	87 ff       	sbrs	r24, 7
     2d0:	fc cf       	rjmp	.-8      	; 0x2ca <twi_master_read+0x40>
     2d2:	80 91 71 00 	lds	r24, 0x0071
     2d6:	88 7f       	andi	r24, 0xF8	; 248
     2d8:	88 35       	cpi	r24, 0x58	; 88
     2da:	b9 f7       	brne	.-18     	; 0x2ca <twi_master_read+0x40>
        dat = TWDR;
     2dc:	80 91 73 00 	lds	r24, 0x0073
        TWCR = 0x94;
     2e0:	94 e9       	ldi	r25, 0x94	; 148
     2e2:	90 93 74 00 	sts	0x0074, r25
        return dat;
}
     2e6:	08 95       	ret

000002e8 <twi_master_write>:

void twi_master_write(unsigned char addr, unsigned char dat)
{
     2e8:	98 2f       	mov	r25, r24
        TWCR = 0xa4;                    // STAR
     2ea:	84 ea       	ldi	r24, 0xA4	; 164
     2ec:	80 93 74 00 	sts	0x0074, r24
		while(((TWCR & 0x80) == 0x00) || ((TWSR & 0xf8) != 0x08));
     2f0:	80 91 74 00 	lds	r24, 0x0074
     2f4:	87 ff       	sbrs	r24, 7
     2f6:	fc cf       	rjmp	.-8      	; 0x2f0 <twi_master_write+0x8>
     2f8:	80 91 71 00 	lds	r24, 0x0071
     2fc:	88 7f       	andi	r24, 0xF8	; 248
     2fe:	88 30       	cpi	r24, 0x08	; 8
     300:	b9 f7       	brne	.-18     	; 0x2f0 <twi_master_write+0x8>
        TWDR = addr << 1;               // ADDRESS
     302:	99 0f       	add	r25, r25
     304:	90 93 73 00 	sts	0x0073, r25
        TWCR = 0x84;
     308:	84 e8       	ldi	r24, 0x84	; 132
     30a:	80 93 74 00 	sts	0x0074, r24
		while(((TWCR & 0x80) == 0x00) || ((TWSR & 0xf8) != 0x18));
     30e:	80 91 74 00 	lds	r24, 0x0074
     312:	87 ff       	sbrs	r24, 7
     314:	fc cf       	rjmp	.-8      	; 0x30e <twi_master_write+0x26>
     316:	80 91 71 00 	lds	r24, 0x0071
     31a:	88 7f       	andi	r24, 0xF8	; 248
     31c:	88 31       	cpi	r24, 0x18	; 24
     31e:	b9 f7       	brne	.-18     	; 0x30e <twi_master_write+0x26>
        TWDR = dat;                     // WRITE
     320:	60 93 73 00 	sts	0x0073, r22
        TWCR = 0x84;
     324:	84 e8       	ldi	r24, 0x84	; 132
     326:	80 93 74 00 	sts	0x0074, r24
 
		while(((TWCR & 0x80) == 0x00) || ((TWSR & 0xf8) != 0x28));
     32a:	80 91 74 00 	lds	r24, 0x0074
     32e:	87 ff       	sbrs	r24, 7
     330:	fc cf       	rjmp	.-8      	; 0x32a <twi_master_write+0x42>
     332:	80 91 71 00 	lds	r24, 0x0071
     336:	88 7f       	andi	r24, 0xF8	; 248
     338:	88 32       	cpi	r24, 0x28	; 40
     33a:	b9 f7       	brne	.-18     	; 0x32a <twi_master_write+0x42>
        TWCR = 0x94;
     33c:	84 e9       	ldi	r24, 0x94	; 148
     33e:	80 93 74 00 	sts	0x0074, r24
}
     342:	08 95       	ret

00000344 <twi_slave_read>:

unsigned char twi_slave_read(unsigned char addr)
{
        unsigned char dat;
        
        TWAR = addr << 1;
     344:	88 0f       	add	r24, r24
     346:	80 93 72 00 	sts	0x0072, r24
        TWCR = 0x44;                    // SLAVE
     34a:	84 e4       	ldi	r24, 0x44	; 68
     34c:	80 93 74 00 	sts	0x0074, r24
        
		while(((TWCR & 0x80) == 0x00) || ((TWSR & 0xf8) != 0x60));
     350:	80 91 74 00 	lds	r24, 0x0074
     354:	87 ff       	sbrs	r24, 7
     356:	fc cf       	rjmp	.-8      	; 0x350 <twi_slave_read+0xc>
     358:	80 91 71 00 	lds	r24, 0x0071
     35c:	88 7f       	andi	r24, 0xF8	; 248
     35e:	80 36       	cpi	r24, 0x60	; 96
     360:	b9 f7       	brne	.-18     	; 0x350 <twi_slave_read+0xc>
        TWCR = 0xc4;
     362:	84 ec       	ldi	r24, 0xC4	; 196
     364:	80 93 74 00 	sts	0x0074, r24
		while(((TWCR & 0x80) == 0x00) || ((TWSR & 0xf8) != 0x80));
     368:	80 91 74 00 	lds	r24, 0x0074
     36c:	87 ff       	sbrs	r24, 7
     36e:	fc cf       	rjmp	.-8      	; 0x368 <twi_slave_read+0x24>
     370:	80 91 71 00 	lds	r24, 0x0071
     374:	88 7f       	andi	r24, 0xF8	; 248
     376:	80 38       	cpi	r24, 0x80	; 128
     378:	b9 f7       	brne	.-18     	; 0x368 <twi_slave_read+0x24>
        dat = TWDR;                     // READ
     37a:	90 91 73 00 	lds	r25, 0x0073
        TWCR = 0xc4;
     37e:	84 ec       	ldi	r24, 0xC4	; 196
     380:	80 93 74 00 	sts	0x0074, r24
		while(((TWCR & 0x80) == 0x00) || ((TWSR & 0xf8) != 0xa0));
     384:	80 91 74 00 	lds	r24, 0x0074
     388:	87 ff       	sbrs	r24, 7
     38a:	fc cf       	rjmp	.-8      	; 0x384 <twi_slave_read+0x40>
     38c:	80 91 71 00 	lds	r24, 0x0071
     390:	88 7f       	andi	r24, 0xF8	; 248
     392:	80 3a       	cpi	r24, 0xA0	; 160
     394:	b9 f7       	brne	.-18     	; 0x384 <twi_slave_read+0x40>
        TWCR = 0xc4;
     396:	84 ec       	ldi	r24, 0xC4	; 196
     398:	80 93 74 00 	sts	0x0074, r24
        return dat;
}
     39c:	89 2f       	mov	r24, r25
     39e:	08 95       	ret

000003a0 <twi_slave_write>:
void twi_slave_write(unsigned char addr, unsigned char dat)
{
        TWAR = addr << 1;
     3a0:	88 0f       	add	r24, r24
     3a2:	80 93 72 00 	sts	0x0072, r24
        TWCR = 0x44;                    // SLAVE
     3a6:	84 e4       	ldi	r24, 0x44	; 68
     3a8:	80 93 74 00 	sts	0x0074, r24
		while(((TWCR & 0x80) == 0x00) || ((TWSR & 0xf8) != 0xa8));
     3ac:	80 91 74 00 	lds	r24, 0x0074
     3b0:	87 ff       	sbrs	r24, 7
     3b2:	fc cf       	rjmp	.-8      	; 0x3ac <twi_slave_write+0xc>
     3b4:	80 91 71 00 	lds	r24, 0x0071
     3b8:	88 7f       	andi	r24, 0xF8	; 248
     3ba:	88 3a       	cpi	r24, 0xA8	; 168
     3bc:	b9 f7       	brne	.-18     	; 0x3ac <twi_slave_write+0xc>
        TWDR = dat;
     3be:	60 93 73 00 	sts	0x0073, r22
        TWCR = 0xc4;
     3c2:	84 ec       	ldi	r24, 0xC4	; 196
     3c4:	80 93 74 00 	sts	0x0074, r24
        while(((TWCR & 0x80) == 0x00) || ((TWSR & 0xf8) != 0xc0));
     3c8:	80 91 74 00 	lds	r24, 0x0074
     3cc:	87 ff       	sbrs	r24, 7
     3ce:	fc cf       	rjmp	.-8      	; 0x3c8 <twi_slave_write+0x28>
     3d0:	80 91 71 00 	lds	r24, 0x0071
     3d4:	88 7f       	andi	r24, 0xF8	; 248
     3d6:	80 3c       	cpi	r24, 0xC0	; 192
     3d8:	b9 f7       	brne	.-18     	; 0x3c8 <twi_slave_write+0x28>
        TWCR = 0xc4;
     3da:	84 ec       	ldi	r24, 0xC4	; 196
     3dc:	80 93 74 00 	sts	0x0074, r24
}
     3e0:	08 95       	ret

000003e2 <IO_INIT>:
	return I2C_ADDR;		
}
/////////////////////////////////////////////////////////////////////////
void IO_INIT(void)
{
    DDRA = 0xff;
     3e2:	9f ef       	ldi	r25, 0xFF	; 255
     3e4:	9a bb       	out	0x1a, r25	; 26
    PORTA = 0xFF;   //ALL_VALVE_OFF
     3e6:	9b bb       	out	0x1b, r25	; 27
               
    DDRB =	0xf7;
     3e8:	87 ef       	ldi	r24, 0xF7	; 247
     3ea:	87 bb       	out	0x17, r24	; 23
    PORTB = 0x00;
     3ec:	18 ba       	out	0x18, r1	; 24
    
    DDRC = 0xff;
     3ee:	94 bb       	out	0x14, r25	; 20
    PORTC = FND_N;
     3f0:	15 ba       	out	0x15, r1	; 21
    
    DDRD &= 0x0f;
     3f2:	81 b3       	in	r24, 0x11	; 17
     3f4:	8f 70       	andi	r24, 0x0F	; 15
     3f6:	81 bb       	out	0x11, r24	; 17
    
    DDRE = 0x04;
     3f8:	84 e0       	ldi	r24, 0x04	; 4
     3fa:	82 b9       	out	0x02, r24	; 2
    PORTE = PORTE|0x04;
     3fc:	1a 9a       	sbi	0x03, 2	; 3
    
    DDRG = 0xff;
     3fe:	90 93 64 00 	sts	0x0064, r25
    PORTG = 0x18;
     402:	88 e1       	ldi	r24, 0x18	; 24
     404:	80 93 65 00 	sts	0x0065, r24
}
     408:	08 95       	ret

0000040a <INT_INIT>:
/////////////////////////////////////////////////////////////////////////
void INT_INIT(void)
{
    EICRB = 0xAA;
     40a:	8a ea       	ldi	r24, 0xAA	; 170
     40c:	8a bf       	out	0x3a, r24	; 58
    EIMSK = 0xF0;
     40e:	80 ef       	ldi	r24, 0xF0	; 240
     410:	89 bf       	out	0x39, r24	; 57
}
     412:	08 95       	ret

00000414 <ADC_INIT>:
/////////////////////////////////////////////////////////////////////////
void ADC_INIT(void)
{
    ADMUX = 0x2f;   //아트메가 differential 사용
     414:	8f e2       	ldi	r24, 0x2F	; 47
     416:	87 b9       	out	0x07, r24	; 7
    //ADMUX = 0x00;  
    ADCSRA = (1<<ADEN)|(1<<ADIE)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
     418:	8f e8       	ldi	r24, 0x8F	; 143
     41a:	86 b9       	out	0x06, r24	; 6
}
     41c:	08 95       	ret

0000041e <TIM_INIT>:

/////////////////////////////////////////////////////////////////////////
void TIM_INIT(void)
{
    OCR2 = 25;
     41e:	89 e1       	ldi	r24, 0x19	; 25
     420:	83 bd       	out	0x23, r24	; 35
    TIMSK = (1<<OCIE2);
     422:	80 e8       	ldi	r24, 0x80	; 128
     424:	87 bf       	out	0x37, r24	; 55
    TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);
     426:	8d e0       	ldi	r24, 0x0D	; 13
     428:	85 bd       	out	0x25, r24	; 37
}
     42a:	08 95       	ret

0000042c <FND_PARSING>:
    FND_D3 = FND_PARSING(buf);
}
/////////////////////////////////////////////////////////////////////////
unsigned char FND_PARSING(int num)
{
	switch(num)
     42c:	84 30       	cpi	r24, 0x04	; 4
     42e:	91 05       	cpc	r25, r1
     430:	31 f1       	breq	.+76     	; 0x47e <FND_PARSING+0x52>
     432:	85 30       	cpi	r24, 0x05	; 5
     434:	91 05       	cpc	r25, r1
     436:	7c f4       	brge	.+30     	; 0x456 <FND_PARSING+0x2a>
     438:	81 30       	cpi	r24, 0x01	; 1
     43a:	91 05       	cpc	r25, r1
     43c:	c1 f0       	breq	.+48     	; 0x46e <FND_PARSING+0x42>
     43e:	82 30       	cpi	r24, 0x02	; 2
     440:	91 05       	cpc	r25, r1
     442:	1c f4       	brge	.+6      	; 0x44a <FND_PARSING+0x1e>
     444:	89 2b       	or	r24, r25
     446:	a9 f0       	breq	.+42     	; 0x472 <FND_PARSING+0x46>
     448:	24 c0       	rjmp	.+72     	; 0x492 <FND_PARSING+0x66>
     44a:	82 30       	cpi	r24, 0x02	; 2
     44c:	91 05       	cpc	r25, r1
     44e:	99 f0       	breq	.+38     	; 0x476 <FND_PARSING+0x4a>
     450:	03 97       	sbiw	r24, 0x03	; 3
     452:	f9 f4       	brne	.+62     	; 0x492 <FND_PARSING+0x66>
     454:	12 c0       	rjmp	.+36     	; 0x47a <FND_PARSING+0x4e>
     456:	86 30       	cpi	r24, 0x06	; 6
     458:	91 05       	cpc	r25, r1
     45a:	a9 f0       	breq	.+42     	; 0x486 <FND_PARSING+0x5a>
     45c:	86 30       	cpi	r24, 0x06	; 6
     45e:	91 05       	cpc	r25, r1
     460:	84 f0       	brlt	.+32     	; 0x482 <FND_PARSING+0x56>
     462:	87 30       	cpi	r24, 0x07	; 7
     464:	91 05       	cpc	r25, r1
     466:	89 f0       	breq	.+34     	; 0x48a <FND_PARSING+0x5e>
     468:	08 97       	sbiw	r24, 0x08	; 8
     46a:	99 f4       	brne	.+38     	; 0x492 <FND_PARSING+0x66>
     46c:	10 c0       	rjmp	.+32     	; 0x48e <FND_PARSING+0x62>
     46e:	86 e0       	ldi	r24, 0x06	; 6
     470:	08 95       	ret
     472:	8f e3       	ldi	r24, 0x3F	; 63
     474:	08 95       	ret
     476:	8b e5       	ldi	r24, 0x5B	; 91
     478:	08 95       	ret
			
		case 1:
			return FND_1;
		
		case 2:
			return FND_2;
     47a:	8f e4       	ldi	r24, 0x4F	; 79
     47c:	08 95       	ret
		
		case 3:
			return FND_3;
     47e:	86 e6       	ldi	r24, 0x66	; 102
     480:	08 95       	ret
		
		case 4:
			return FND_4;
     482:	8d e6       	ldi	r24, 0x6D	; 109
     484:	08 95       	ret
		
		case 5:
			return FND_5;
     486:	8d e7       	ldi	r24, 0x7D	; 125
     488:	08 95       	ret
		
		case 6:
			return FND_6;
     48a:	87 e2       	ldi	r24, 0x27	; 39
     48c:	08 95       	ret
		
		case 7:
			return FND_7;
     48e:	8f e7       	ldi	r24, 0x7F	; 127
     490:	08 95       	ret
		
		case 8:
			return FND_8;
     492:	87 e6       	ldi	r24, 0x67	; 103
		
		default:
			return FND_9;
			
	}
}
     494:	08 95       	ret

00000496 <FND_OP>:
	else	FAULT_LED_OFF;
    _delay_ms(500);   
}
/////////////////////////////////////////////////////////////////////////
void FND_OP(int num)
{
     496:	0f 93       	push	r16
     498:	1f 93       	push	r17
     49a:	8c 01       	movw	r16, r24
    int buf=num;
    
    FND_D0 = FND_PARSING(buf/1000);
     49c:	68 ee       	ldi	r22, 0xE8	; 232
     49e:	73 e0       	ldi	r23, 0x03	; 3
     4a0:	0e 94 f1 40 	call	0x81e2	; 0x81e2 <__divmodhi4>
     4a4:	cb 01       	movw	r24, r22
     4a6:	0e 94 16 02 	call	0x42c	; 0x42c <FND_PARSING>
     4aa:	80 93 da 03 	sts	0x03DA, r24
    
    if(buf<0)
     4ae:	17 fd       	sbrc	r17, 7
     4b0:	02 c0       	rjmp	.+4      	; 0x4b6 <FND_OP+0x20>
     4b2:	c8 01       	movw	r24, r16
     4b4:	07 c0       	rjmp	.+14     	; 0x4c4 <FND_OP+0x2e>
    {
        FND_D0 = FND_M;
     4b6:	80 e4       	ldi	r24, 0x40	; 64
     4b8:	80 93 da 03 	sts	0x03DA, r24
        buf = -buf;  
     4bc:	88 27       	eor	r24, r24
     4be:	99 27       	eor	r25, r25
     4c0:	80 1b       	sub	r24, r16
     4c2:	91 0b       	sbc	r25, r17
    }        
      
    buf %= 1000;    
     4c4:	68 ee       	ldi	r22, 0xE8	; 232
     4c6:	73 e0       	ldi	r23, 0x03	; 3
     4c8:	0e 94 f1 40 	call	0x81e2	; 0x81e2 <__divmodhi4>
     4cc:	18 2f       	mov	r17, r24
     4ce:	09 2f       	mov	r16, r25
    FND_D1 = FND_PARSING(buf/100);
     4d0:	64 e6       	ldi	r22, 0x64	; 100
     4d2:	70 e0       	ldi	r23, 0x00	; 0
     4d4:	0e 94 f1 40 	call	0x81e2	; 0x81e2 <__divmodhi4>
     4d8:	cb 01       	movw	r24, r22
     4da:	0e 94 16 02 	call	0x42c	; 0x42c <FND_PARSING>
     4de:	80 93 db 03 	sts	0x03DB, r24
    
    buf %= 100;    
     4e2:	81 2f       	mov	r24, r17
     4e4:	90 2f       	mov	r25, r16
     4e6:	64 e6       	ldi	r22, 0x64	; 100
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	0e 94 f1 40 	call	0x81e2	; 0x81e2 <__divmodhi4>
     4ee:	18 2f       	mov	r17, r24
     4f0:	09 2f       	mov	r16, r25
    FND_D2 = FND_PARSING(buf/10);
     4f2:	6a e0       	ldi	r22, 0x0A	; 10
     4f4:	70 e0       	ldi	r23, 0x00	; 0
     4f6:	0e 94 f1 40 	call	0x81e2	; 0x81e2 <__divmodhi4>
     4fa:	cb 01       	movw	r24, r22
     4fc:	0e 94 16 02 	call	0x42c	; 0x42c <FND_PARSING>
     500:	80 93 dc 03 	sts	0x03DC, r24
    
    buf %= 10;    
    FND_D3 = FND_PARSING(buf);
     504:	81 2f       	mov	r24, r17
     506:	90 2f       	mov	r25, r16
     508:	6a e0       	ldi	r22, 0x0A	; 10
     50a:	70 e0       	ldi	r23, 0x00	; 0
     50c:	0e 94 f1 40 	call	0x81e2	; 0x81e2 <__divmodhi4>
     510:	0e 94 16 02 	call	0x42c	; 0x42c <FND_PARSING>
     514:	80 93 dd 03 	sts	0x03DD, r24
}
     518:	1f 91       	pop	r17
     51a:	0f 91       	pop	r16
     51c:	08 95       	ret

0000051e <SENSOR_CHECK>:
	return 1;
	
}
/////////////////////////////////////////////////////////////////////////
void SENSOR_CHECK(unsigned char fnd_on)
{    
     51e:	1f 93       	push	r17
     520:	18 2f       	mov	r17, r24
    unsigned int index = 0;  
	int adc_off_cal;  

    ADC_SUM=0;
     522:	10 92 0a 05 	sts	0x050A, r1
     526:	10 92 0b 05 	sts	0x050B, r1
     52a:	10 92 0c 05 	sts	0x050C, r1
     52e:	10 92 0d 05 	sts	0x050D, r1
     532:	60 e0       	ldi	r22, 0x00	; 0
     534:	70 e0       	ldi	r23, 0x00	; 0
    for(index=0; index<300; index++)
    {
        ADCSRA |= (1<<ADSC) ;
     536:	36 9a       	sbi	0x06, 6	; 6
        while(!ADC_FLAG);
     538:	80 91 16 05 	lds	r24, 0x0516
     53c:	88 23       	and	r24, r24
     53e:	e1 f3       	breq	.-8      	; 0x538 <SENSOR_CHECK+0x1a>
		ADC_FLAG = 0;
     540:	10 92 16 05 	sts	0x0516, r1
        if((ADCW&0x8000))
     544:	84 b1       	in	r24, 0x04	; 4
     546:	95 b1       	in	r25, 0x05	; 5
     548:	97 ff       	sbrs	r25, 7
     54a:	15 c0       	rjmp	.+42     	; 0x576 <SENSOR_CHECK+0x58>
            ADC_SUM += (0xfffffc00|(ADCW>>6));
     54c:	20 91 0a 05 	lds	r18, 0x050A
     550:	30 91 0b 05 	lds	r19, 0x050B
     554:	40 91 0c 05 	lds	r20, 0x050C
     558:	50 91 0d 05 	lds	r21, 0x050D
     55c:	84 b1       	in	r24, 0x04	; 4
     55e:	95 b1       	in	r25, 0x05	; 5
     560:	f6 e0       	ldi	r31, 0x06	; 6
     562:	96 95       	lsr	r25
     564:	87 95       	ror	r24
     566:	fa 95       	dec	r31
     568:	e1 f7       	brne	.-8      	; 0x562 <SENSOR_CHECK+0x44>
     56a:	a0 e0       	ldi	r26, 0x00	; 0
     56c:	b0 e0       	ldi	r27, 0x00	; 0
     56e:	9c 6f       	ori	r25, 0xFC	; 252
     570:	af 6f       	ori	r26, 0xFF	; 255
     572:	bf 6f       	ori	r27, 0xFF	; 255
     574:	11 c0       	rjmp	.+34     	; 0x598 <SENSOR_CHECK+0x7a>
        else
            ADC_SUM += (ADCW>>6);
     576:	20 91 0a 05 	lds	r18, 0x050A
     57a:	30 91 0b 05 	lds	r19, 0x050B
     57e:	40 91 0c 05 	lds	r20, 0x050C
     582:	50 91 0d 05 	lds	r21, 0x050D
     586:	84 b1       	in	r24, 0x04	; 4
     588:	95 b1       	in	r25, 0x05	; 5
     58a:	e6 e0       	ldi	r30, 0x06	; 6
     58c:	96 95       	lsr	r25
     58e:	87 95       	ror	r24
     590:	ea 95       	dec	r30
     592:	e1 f7       	brne	.-8      	; 0x58c <SENSOR_CHECK+0x6e>
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e0       	ldi	r27, 0x00	; 0
     598:	82 0f       	add	r24, r18
     59a:	93 1f       	adc	r25, r19
     59c:	a4 1f       	adc	r26, r20
     59e:	b5 1f       	adc	r27, r21
     5a0:	80 93 0a 05 	sts	0x050A, r24
     5a4:	90 93 0b 05 	sts	0x050B, r25
     5a8:	a0 93 0c 05 	sts	0x050C, r26
     5ac:	b0 93 0d 05 	sts	0x050D, r27
{    
    unsigned int index = 0;  
	int adc_off_cal;  

    ADC_SUM=0;
    for(index=0; index<300; index++)
     5b0:	6f 5f       	subi	r22, 0xFF	; 255
     5b2:	7f 4f       	sbci	r23, 0xFF	; 255
     5b4:	21 e0       	ldi	r18, 0x01	; 1
     5b6:	6c 32       	cpi	r22, 0x2C	; 44
     5b8:	72 07       	cpc	r23, r18
     5ba:	09 f0       	breq	.+2      	; 0x5be <SENSOR_CHECK+0xa0>
     5bc:	bc cf       	rjmp	.-136    	; 0x536 <SENSOR_CHECK+0x18>
            ADC_SUM += (0xfffffc00|(ADCW>>6));
        else
            ADC_SUM += (ADCW>>6);
    }
   
	MMAQ = (ADC_SUM / 300 - 86) * 0.7843971231;		//minuk
     5be:	60 91 0a 05 	lds	r22, 0x050A
     5c2:	70 91 0b 05 	lds	r23, 0x050B
     5c6:	80 91 0c 05 	lds	r24, 0x050C
     5ca:	90 91 0d 05 	lds	r25, 0x050D
     5ce:	2c e2       	ldi	r18, 0x2C	; 44
     5d0:	31 e0       	ldi	r19, 0x01	; 1
     5d2:	40 e0       	ldi	r20, 0x00	; 0
     5d4:	50 e0       	ldi	r21, 0x00	; 0
     5d6:	0e 94 26 41 	call	0x824c	; 0x824c <__divmodsi4>
     5da:	26 55       	subi	r18, 0x56	; 86
     5dc:	30 40       	sbci	r19, 0x00	; 0
     5de:	40 40       	sbci	r20, 0x00	; 0
     5e0:	50 40       	sbci	r21, 0x00	; 0
     5e2:	ca 01       	movw	r24, r20
     5e4:	b9 01       	movw	r22, r18
     5e6:	0e 94 92 3d 	call	0x7b24	; 0x7b24 <__floatsisf>
     5ea:	20 e4       	ldi	r18, 0x40	; 64
     5ec:	3e ec       	ldi	r19, 0xCE	; 206
     5ee:	48 e4       	ldi	r20, 0x48	; 72
     5f0:	5f e3       	ldi	r21, 0x3F	; 63
     5f2:	0e 94 08 3c 	call	0x7810	; 0x7810 <__mulsf3>
     5f6:	0e 94 f0 3d 	call	0x7be0	; 0x7be0 <__fixsfsi>
     5fa:	70 93 0f 05 	sts	0x050F, r23
     5fe:	60 93 0e 05 	sts	0x050E, r22
	
	//parameter	if(SENSOR_CHECK(1) => FND_OP(MMAQ);
    if(fnd_on)
     602:	11 23       	and	r17, r17
     604:	31 f0       	breq	.+12     	; 0x612 <SENSOR_CHECK+0xf4>
        FND_OP(MMAQ);
     606:	80 91 0e 05 	lds	r24, 0x050E
     60a:	90 91 0f 05 	lds	r25, 0x050F
     60e:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>


	if(!TIM_PULSING_FLAG)	//SENSOR_CHECK()에서 차압펄싱모드인경우 
     612:	80 91 1f 05 	lds	r24, 0x051F
     616:	88 23       	and	r24, r24
     618:	91 f4       	brne	.+36     	; 0x63e <SENSOR_CHECK+0x120>
	{
							//타임펄싱모드조건을 충종하면
    	if((MMAQ >= WARNING_HIGH_POINT) || (MMAQ <= WARNING_LOW_POINT))
     61a:	80 91 0e 05 	lds	r24, 0x050E
     61e:	90 91 0f 05 	lds	r25, 0x050F
     622:	88 3c       	cpi	r24, 0xC8	; 200
     624:	91 05       	cpc	r25, r1
     626:	3c f4       	brge	.+14     	; 0x636 <SENSOR_CHECK+0x118>
     628:	80 91 0e 05 	lds	r24, 0x050E
     62c:	90 91 0f 05 	lds	r25, 0x050F
     630:	8d 59       	subi	r24, 0x9D	; 157
     632:	9f 4f       	sbci	r25, 0xFF	; 255
     634:	24 f4       	brge	.+8      	; 0x63e <SENSOR_CHECK+0x120>
		{
        	WARNING_LED_ON;
     636:	1a 98       	cbi	0x03, 2	; 3
    		TIM_PULSING_FLAG = 1;	//타임펄싱플래그를 1로 SET
     638:	81 e0       	ldi	r24, 0x01	; 1
     63a:	80 93 1f 05 	sts	0x051F, r24
		}
	}

	if((MMAQ >= START_OP_POINT)||(TIM_PULSING_FLAG))
     63e:	20 91 0e 05 	lds	r18, 0x050E
     642:	30 91 0f 05 	lds	r19, 0x050F
     646:	80 91 de 03 	lds	r24, 0x03DE
     64a:	90 e0       	ldi	r25, 0x00	; 0
     64c:	28 17       	cp	r18, r24
     64e:	39 07       	cpc	r19, r25
     650:	24 f4       	brge	.+8      	; 0x65a <SENSOR_CHECK+0x13c>
     652:	80 91 1f 05 	lds	r24, 0x051F
     656:	88 23       	and	r24, r24
     658:	41 f0       	breq	.+16     	; 0x66a <SENSOR_CHECK+0x14c>
    {
		STATE = VALVE_ON;
     65a:	84 e0       	ldi	r24, 0x04	; 4
     65c:	80 93 8b 07 	sts	0x078B, r24
		FAULT_LED_ON;
     660:	80 91 65 00 	lds	r24, 0x0065
     664:	8f 70       	andi	r24, 0x0F	; 15
     666:	80 93 65 00 	sts	0x0065, r24
	}
	

	if( (MMAQ >= START_OP_POINT) && (MMAQ < WARNING_HIGH_POINT) && (!TIM_PULSING_FLAG))
     66a:	20 91 0e 05 	lds	r18, 0x050E
     66e:	30 91 0f 05 	lds	r19, 0x050F
     672:	80 91 de 03 	lds	r24, 0x03DE
     676:	90 e0       	ldi	r25, 0x00	; 0
     678:	28 17       	cp	r18, r24
     67a:	39 07       	cpc	r19, r25
     67c:	34 f1       	brlt	.+76     	; 0x6ca <SENSOR_CHECK+0x1ac>
     67e:	80 91 0e 05 	lds	r24, 0x050E
     682:	90 91 0f 05 	lds	r25, 0x050F
     686:	88 3c       	cpi	r24, 0xC8	; 200
     688:	91 05       	cpc	r25, r1
     68a:	fc f4       	brge	.+62     	; 0x6ca <SENSOR_CHECK+0x1ac>
     68c:	80 91 1f 05 	lds	r24, 0x051F
     690:	88 23       	and	r24, r24
     692:	d9 f4       	brne	.+54     	; 0x6ca <SENSOR_CHECK+0x1ac>
	{
		valve_count++;
     694:	80 91 2f 05 	lds	r24, 0x052F
     698:	90 91 30 05 	lds	r25, 0x0530
     69c:	01 96       	adiw	r24, 0x01	; 1
     69e:	90 93 30 05 	sts	0x0530, r25
     6a2:	80 93 2f 05 	sts	0x052F, r24
		FND_OP(1000+valve_count);	//minuk
     6a6:	80 91 2f 05 	lds	r24, 0x052F
     6aa:	90 91 30 05 	lds	r25, 0x0530
     6ae:	88 51       	subi	r24, 0x18	; 24
     6b0:	9c 4f       	sbci	r25, 0xFC	; 252
     6b2:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
     6b6:	88 e8       	ldi	r24, 0x88	; 136
     6b8:	93 e1       	ldi	r25, 0x13	; 19
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     6ba:	28 ec       	ldi	r18, 0xC8	; 200
     6bc:	30 e0       	ldi	r19, 0x00	; 0
     6be:	f9 01       	movw	r30, r18
     6c0:	31 97       	sbiw	r30, 0x01	; 1
     6c2:	f1 f7       	brne	.-4      	; 0x6c0 <SENSOR_CHECK+0x1a2>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6c4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6c6:	d9 f7       	brne	.-10     	; 0x6be <SENSOR_CHECK+0x1a0>
     6c8:	05 c0       	rjmp	.+10     	; 0x6d4 <SENSOR_CHECK+0x1b6>
		_delay_ms(500);
		
	}
	

	else	FAULT_LED_OFF;
     6ca:	80 91 65 00 	lds	r24, 0x0065
     6ce:	80 61       	ori	r24, 0x10	; 16
     6d0:	80 93 65 00 	sts	0x0065, r24
     6d4:	88 e8       	ldi	r24, 0x88	; 136
     6d6:	93 e1       	ldi	r25, 0x13	; 19
     6d8:	28 ec       	ldi	r18, 0xC8	; 200
     6da:	30 e0       	ldi	r19, 0x00	; 0
     6dc:	f9 01       	movw	r30, r18
     6de:	31 97       	sbiw	r30, 0x01	; 1
     6e0:	f1 f7       	brne	.-4      	; 0x6de <SENSOR_CHECK+0x1c0>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6e2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6e4:	d9 f7       	brne	.-10     	; 0x6dc <SENSOR_CHECK+0x1be>
    _delay_ms(500);   
}
     6e6:	1f 91       	pop	r17
     6e8:	08 95       	ret

000006ea <WD_ON>:
	}
}
/////////////////////////////////////////////////////////////////////////
void WD_ON(unsigned char tim_parameter)
{
    SEC_CNT = 0;
     6ea:	10 92 24 05 	sts	0x0524, r1
    WD_SEC = 0;
     6ee:	10 92 25 05 	sts	0x0525, r1
    WD_FLAG = 0;
     6f2:	10 92 26 05 	sts	0x0526, r1

	if(tim_parameter == KEY_WD)
     6f6:	88 23       	and	r24, r24
     6f8:	11 f4       	brne	.+4      	; 0x6fe <WD_ON+0x14>
	{
		OCR0 = 250;	
     6fa:	8a ef       	ldi	r24, 0xFA	; 250
     6fc:	03 c0       	rjmp	.+6      	; 0x704 <WD_ON+0x1a>
	}
	else if(tim_parameter == I2C_WD)
     6fe:	81 30       	cpi	r24, 0x01	; 1
     700:	11 f4       	brne	.+4      	; 0x706 <WD_ON+0x1c>
	{
		OCR0 = 4;	
     702:	84 e0       	ldi	r24, 0x04	; 4
     704:	81 bf       	out	0x31, r24	; 49
	}
    
    TIMSK |= (1<<OCIE0);		//Output Compare Interrupt Enable
     706:	87 b7       	in	r24, 0x37	; 55
     708:	82 60       	ori	r24, 0x02	; 2
     70a:	87 bf       	out	0x37, r24	; 55

    TCCR0 = (1<<WGM01)|(1<<CS02)|(1<<CS01); //31250 count = 1sec    
     70c:	8e e0       	ldi	r24, 0x0E	; 14
     70e:	83 bf       	out	0x33, r24	; 51
			//CTC		//110 // clk/256
}
     710:	08 95       	ret

00000712 <__vector_33>:
    ADC_FLAG = 1;
	
}

ISR(TWI_vect)
{	
     712:	1f 92       	push	r1
     714:	0f 92       	push	r0
     716:	0f b6       	in	r0, 0x3f	; 63
     718:	0f 92       	push	r0
     71a:	0b b6       	in	r0, 0x3b	; 59
     71c:	0f 92       	push	r0
     71e:	11 24       	eor	r1, r1
     720:	2f 93       	push	r18
     722:	3f 93       	push	r19
     724:	4f 93       	push	r20
     726:	5f 93       	push	r21
     728:	6f 93       	push	r22
     72a:	7f 93       	push	r23
     72c:	8f 93       	push	r24
     72e:	9f 93       	push	r25
     730:	af 93       	push	r26
     732:	bf 93       	push	r27
     734:	ef 93       	push	r30
     736:	ff 93       	push	r31
	I2C_FLAG = 1;
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	80 93 15 05 	sts	0x0515, r24

	FND = FND_4;
     73e:	86 e6       	ldi	r24, 0x66	; 102
     740:	85 bb       	out	0x15, r24	; 21
    TWCR = 0x44;
     742:	84 e4       	ldi	r24, 0x44	; 68
     744:	80 93 74 00 	sts	0x0074, r24
	WD_ON(I2C_WD);
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	0e 94 75 03 	call	0x6ea	; 0x6ea <WD_ON>
    while(((TWCR&0x80)==0x00) || ((TWSR&0xf8) != 0x60))

	FND = FND_5;
     74e:	9d e6       	ldi	r25, 0x6D	; 109
     750:	01 c0       	rjmp	.+2      	; 0x754 <__vector_33+0x42>
     752:	95 bb       	out	0x15, r25	; 21
	I2C_FLAG = 1;

	FND = FND_4;
    TWCR = 0x44;
	WD_ON(I2C_WD);
    while(((TWCR&0x80)==0x00) || ((TWSR&0xf8) != 0x60))
     754:	80 91 74 00 	lds	r24, 0x0074
     758:	87 ff       	sbrs	r24, 7
     75a:	fb cf       	rjmp	.-10     	; 0x752 <__vector_33+0x40>
     75c:	80 91 71 00 	lds	r24, 0x0071
     760:	88 7f       	andi	r24, 0xF8	; 248
     762:	80 36       	cpi	r24, 0x60	; 96
     764:	b1 f7       	brne	.-20     	; 0x752 <__vector_33+0x40>

	FND = FND_5;
    TWCR = 0xc4;
     766:	84 ec       	ldi	r24, 0xC4	; 196
     768:	80 93 74 00 	sts	0x0074, r24
    while(((TWCR&0x80) == 0x00) || ((TWSR&0xf8) != 0x80));FND = FND_6;
     76c:	80 91 74 00 	lds	r24, 0x0074
     770:	87 ff       	sbrs	r24, 7
     772:	fc cf       	rjmp	.-8      	; 0x76c <__vector_33+0x5a>
     774:	80 91 71 00 	lds	r24, 0x0071
     778:	88 7f       	andi	r24, 0xF8	; 248
     77a:	80 38       	cpi	r24, 0x80	; 128
     77c:	b9 f7       	brne	.-18     	; 0x76c <__vector_33+0x5a>
     77e:	8d e7       	ldi	r24, 0x7D	; 125
     780:	85 bb       	out	0x15, r24	; 21
    I2C_DAT_BUF = TWDR;
     782:	80 91 73 00 	lds	r24, 0x0073
     786:	80 93 14 05 	sts	0x0514, r24
    TWCR = 0xc4;
     78a:	84 ec       	ldi	r24, 0xC4	; 196
     78c:	80 93 74 00 	sts	0x0074, r24
    while(((TWCR&0x80) == 0x00) || ((TWSR&0xf8) != 0xa0));FND = FND_7;
     790:	80 91 74 00 	lds	r24, 0x0074
     794:	87 ff       	sbrs	r24, 7
     796:	fc cf       	rjmp	.-8      	; 0x790 <__vector_33+0x7e>
     798:	80 91 71 00 	lds	r24, 0x0071
     79c:	88 7f       	andi	r24, 0xF8	; 248
     79e:	80 3a       	cpi	r24, 0xA0	; 160
     7a0:	b9 f7       	brne	.-18     	; 0x790 <__vector_33+0x7e>
     7a2:	87 e2       	ldi	r24, 0x27	; 39
     7a4:	85 bb       	out	0x15, r24	; 21

    TWCR = 0xc4;
     7a6:	84 ec       	ldi	r24, 0xC4	; 196
     7a8:	80 93 74 00 	sts	0x0074, r24
}
     7ac:	ff 91       	pop	r31
     7ae:	ef 91       	pop	r30
     7b0:	bf 91       	pop	r27
     7b2:	af 91       	pop	r26
     7b4:	9f 91       	pop	r25
     7b6:	8f 91       	pop	r24
     7b8:	7f 91       	pop	r23
     7ba:	6f 91       	pop	r22
     7bc:	5f 91       	pop	r21
     7be:	4f 91       	pop	r20
     7c0:	3f 91       	pop	r19
     7c2:	2f 91       	pop	r18
     7c4:	0f 90       	pop	r0
     7c6:	0b be       	out	0x3b, r0	; 59
     7c8:	0f 90       	pop	r0
     7ca:	0f be       	out	0x3f, r0	; 63
     7cc:	0f 90       	pop	r0
     7ce:	1f 90       	pop	r1
     7d0:	18 95       	reti

000007d2 <TWI_SR>:
        return dat;
}

/////////////////////////////////////////////////////////////////////////
unsigned char TWI_SR(unsigned char addr)
{
     7d2:	1f 93       	push	r17
    unsigned char dat;
        
        TWAR = addr << 1;
     7d4:	88 0f       	add	r24, r24
     7d6:	80 93 72 00 	sts	0x0072, r24
        TWCR = 0x44;                    // SLAVE
     7da:	84 e4       	ldi	r24, 0x44	; 68
     7dc:	80 93 74 00 	sts	0x0074, r24
        
		while(((TWCR & 0x80) == 0x00) || ((TWSR & 0xf8) != 0x60));
     7e0:	80 91 74 00 	lds	r24, 0x0074
     7e4:	87 ff       	sbrs	r24, 7
     7e6:	fc cf       	rjmp	.-8      	; 0x7e0 <TWI_SR+0xe>
     7e8:	80 91 71 00 	lds	r24, 0x0071
     7ec:	88 7f       	andi	r24, 0xF8	; 248
     7ee:	80 36       	cpi	r24, 0x60	; 96
     7f0:	b9 f7       	brne	.-18     	; 0x7e0 <TWI_SR+0xe>
        TWCR = 0xc4;
     7f2:	84 ec       	ldi	r24, 0xC4	; 196
     7f4:	80 93 74 00 	sts	0x0074, r24
        WD_ON(I2C_WD);
     7f8:	81 e0       	ldi	r24, 0x01	; 1
     7fa:	0e 94 75 03 	call	0x6ea	; 0x6ea <WD_ON>
     7fe:	04 c0       	rjmp	.+8      	; 0x808 <TWI_SR+0x36>
			//CTC		//110 // clk/256
}
/////////////////////////////////////////////////////////////////////////
char WD_CHECK(void)
{
	if(WD_FLAG)
     800:	80 91 26 05 	lds	r24, 0x0526
     804:	88 23       	and	r24, r24
     806:	b1 f4       	brne	.+44     	; 0x834 <TWI_SR+0x62>
        TWCR = 0x44;                    // SLAVE
        
		while(((TWCR & 0x80) == 0x00) || ((TWSR & 0xf8) != 0x60));
        TWCR = 0xc4;
        WD_ON(I2C_WD);
		while(((TWCR & 0x80) == 0x00) || ((TWSR & 0xf8) != 0x80))
     808:	80 91 74 00 	lds	r24, 0x0074
     80c:	87 ff       	sbrs	r24, 7
     80e:	f8 cf       	rjmp	.-16     	; 0x800 <TWI_SR+0x2e>
     810:	80 91 71 00 	lds	r24, 0x0071
     814:	88 7f       	andi	r24, 0xF8	; 248
     816:	80 38       	cpi	r24, 0x80	; 128
     818:	99 f7       	brne	.-26     	; 0x800 <TWI_SR+0x2e>
			{
				TWI_ERROR();
				return 0;
			}
		}
        dat = TWDR;                     // READ
     81a:	10 91 73 00 	lds	r17, 0x0073
        TWCR = 0xc4;
     81e:	84 ec       	ldi	r24, 0xC4	; 196
     820:	80 93 74 00 	sts	0x0074, r24
        WD_ON(I2C_WD);
     824:	81 e0       	ldi	r24, 0x01	; 1
     826:	0e 94 75 03 	call	0x6ea	; 0x6ea <WD_ON>
     82a:	0f c0       	rjmp	.+30     	; 0x84a <TWI_SR+0x78>
			//CTC		//110 // clk/256
}
/////////////////////////////////////////////////////////////////////////
char WD_CHECK(void)
{
	if(WD_FLAG)
     82c:	80 91 26 05 	lds	r24, 0x0526
     830:	88 23       	and	r24, r24
     832:	59 f0       	breq	.+22     	; 0x84a <TWI_SR+0x78>
    {
        TCCR0 = 0;
     834:	13 be       	out	0x33, r1	; 51
        TCCR2 = 0;
     836:	15 bc       	out	0x25, r1	; 37
        TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);
     838:	8d e0       	ldi	r24, 0x0D	; 13
     83a:	85 bd       	out	0x25, r24	; 37
	TWSR = 0x00;
}

void TWI_ERROR(void)
{
	TWCR=((1<<TWINT)|(1<<TWEN)|(1<<TWSTO)); 	//TWI - Stop 
     83c:	84 e9       	ldi	r24, 0x94	; 148
     83e:	80 93 74 00 	sts	0x0074, r24
	TWCR=(0<<TWEN); 							//TWI - Aus
     842:	10 92 74 00 	sts	0x0074, r1
     846:	10 e0       	ldi	r17, 0x00	; 0
     848:	0c c0       	rjmp	.+24     	; 0x862 <TWI_SR+0x90>
			}
		}
        dat = TWDR;                     // READ
        TWCR = 0xc4;
        WD_ON(I2C_WD);
		while(((TWCR & 0x80) == 0x00) || ((TWSR & 0xf8) != 0xa0))
     84a:	80 91 74 00 	lds	r24, 0x0074
     84e:	87 ff       	sbrs	r24, 7
     850:	ed cf       	rjmp	.-38     	; 0x82c <TWI_SR+0x5a>
     852:	80 91 71 00 	lds	r24, 0x0071
     856:	88 7f       	andi	r24, 0xF8	; 248
     858:	80 3a       	cpi	r24, 0xA0	; 160
     85a:	41 f7       	brne	.-48     	; 0x82c <TWI_SR+0x5a>
			{
				TWI_ERROR();
				return 0;
			}
		}
        TWCR = 0xc4;
     85c:	84 ec       	ldi	r24, 0xC4	; 196
     85e:	80 93 74 00 	sts	0x0074, r24
        return dat;
}
     862:	81 2f       	mov	r24, r17
     864:	1f 91       	pop	r17
     866:	08 95       	ret

00000868 <TWI_MR>:
        TWCR = 0xc4;
}

/////////////////////////////////////////////////////////////////////////
unsigned char TWI_MR(unsigned char addr)
{
     868:	1f 93       	push	r17
     86a:	18 2f       	mov	r17, r24
     unsigned char dat;
        
        TWCR = 0xa4;                    // START
     86c:	84 ea       	ldi	r24, 0xA4	; 164
     86e:	80 93 74 00 	sts	0x0074, r24
        WD_ON(I2C_WD);
     872:	81 e0       	ldi	r24, 0x01	; 1
     874:	0e 94 75 03 	call	0x6ea	; 0x6ea <WD_ON>
     878:	04 c0       	rjmp	.+8      	; 0x882 <TWI_MR+0x1a>
			//CTC		//110 // clk/256
}
/////////////////////////////////////////////////////////////////////////
char WD_CHECK(void)
{
	if(WD_FLAG)
     87a:	80 91 26 05 	lds	r24, 0x0526
     87e:	88 23       	and	r24, r24
     880:	61 f5       	brne	.+88     	; 0x8da <TWI_MR+0x72>
{
     unsigned char dat;
        
        TWCR = 0xa4;                    // START
        WD_ON(I2C_WD);
		while(((TWCR & 0x80) == 0x00) || ((TWSR & 0xf8) != 0x08))
     882:	80 91 74 00 	lds	r24, 0x0074
     886:	87 ff       	sbrs	r24, 7
     888:	f8 cf       	rjmp	.-16     	; 0x87a <TWI_MR+0x12>
     88a:	80 91 71 00 	lds	r24, 0x0071
     88e:	88 7f       	andi	r24, 0xF8	; 248
     890:	88 30       	cpi	r24, 0x08	; 8
     892:	99 f7       	brne	.-26     	; 0x87a <TWI_MR+0x12>
			{
				TWI_ERROR();
				return 0;
			}
		}
        TWDR = (addr << 1) | 1;
     894:	11 0f       	add	r17, r17
     896:	11 60       	ori	r17, 0x01	; 1
     898:	10 93 73 00 	sts	0x0073, r17
        TWCR = 0x84;
     89c:	84 e8       	ldi	r24, 0x84	; 132
     89e:	80 93 74 00 	sts	0x0074, r24
        WD_ON(I2C_WD);
     8a2:	81 e0       	ldi	r24, 0x01	; 1
     8a4:	0e 94 75 03 	call	0x6ea	; 0x6ea <WD_ON>
     8a8:	04 c0       	rjmp	.+8      	; 0x8b2 <TWI_MR+0x4a>
			//CTC		//110 // clk/256
}
/////////////////////////////////////////////////////////////////////////
char WD_CHECK(void)
{
	if(WD_FLAG)
     8aa:	80 91 26 05 	lds	r24, 0x0526
     8ae:	88 23       	and	r24, r24
     8b0:	a1 f4       	brne	.+40     	; 0x8da <TWI_MR+0x72>
			}
		}
        TWDR = (addr << 1) | 1;
        TWCR = 0x84;
        WD_ON(I2C_WD);
		while(((TWCR & 0x80) == 0x00) || ((TWSR & 0xf8) != 0x40))
     8b2:	80 91 74 00 	lds	r24, 0x0074
     8b6:	87 ff       	sbrs	r24, 7
     8b8:	f8 cf       	rjmp	.-16     	; 0x8aa <TWI_MR+0x42>
     8ba:	80 91 71 00 	lds	r24, 0x0071
     8be:	88 7f       	andi	r24, 0xF8	; 248
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	99 f7       	brne	.-26     	; 0x8aa <TWI_MR+0x42>
				TWI_ERROR();
				return 0;
			}
		}
		
		TWCR = 0x84;
     8c4:	84 e8       	ldi	r24, 0x84	; 132
     8c6:	80 93 74 00 	sts	0x0074, r24
		WD_ON(I2C_WD);
     8ca:	81 e0       	ldi	r24, 0x01	; 1
     8cc:	0e 94 75 03 	call	0x6ea	; 0x6ea <WD_ON>
     8d0:	0f c0       	rjmp	.+30     	; 0x8f0 <TWI_MR+0x88>
			//CTC		//110 // clk/256
}
/////////////////////////////////////////////////////////////////////////
char WD_CHECK(void)
{
	if(WD_FLAG)
     8d2:	80 91 26 05 	lds	r24, 0x0526
     8d6:	88 23       	and	r24, r24
     8d8:	59 f0       	breq	.+22     	; 0x8f0 <TWI_MR+0x88>
    {
        TCCR0 = 0;
     8da:	13 be       	out	0x33, r1	; 51
        TCCR2 = 0;
     8dc:	15 bc       	out	0x25, r1	; 37
        TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);
     8de:	8d e0       	ldi	r24, 0x0D	; 13
     8e0:	85 bd       	out	0x25, r24	; 37
	TWSR = 0x00;
}

void TWI_ERROR(void)
{
	TWCR=((1<<TWINT)|(1<<TWEN)|(1<<TWSTO)); 	//TWI - Stop 
     8e2:	84 e9       	ldi	r24, 0x94	; 148
     8e4:	80 93 74 00 	sts	0x0074, r24
	TWCR=(0<<TWEN); 							//TWI - Aus
     8e8:	10 92 74 00 	sts	0x0074, r1
     8ec:	90 e0       	ldi	r25, 0x00	; 0
     8ee:	0e c0       	rjmp	.+28     	; 0x90c <TWI_MR+0xa4>
			}
		}
		
		TWCR = 0x84;
		WD_ON(I2C_WD);
        while(((TWCR & 0x80) == 0x00) || ((TWSR & 0xf8) != 0x58))
     8f0:	80 91 74 00 	lds	r24, 0x0074
     8f4:	87 ff       	sbrs	r24, 7
     8f6:	ed cf       	rjmp	.-38     	; 0x8d2 <TWI_MR+0x6a>
     8f8:	80 91 71 00 	lds	r24, 0x0071
     8fc:	88 7f       	andi	r24, 0xF8	; 248
     8fe:	88 35       	cpi	r24, 0x58	; 88
     900:	41 f7       	brne	.-48     	; 0x8d2 <TWI_MR+0x6a>
			{
				TWI_ERROR();
				return 0;
			}
		}
        dat = TWDR;
     902:	90 91 73 00 	lds	r25, 0x0073
        TWCR = 0x94;
     906:	84 e9       	ldi	r24, 0x94	; 148
     908:	80 93 74 00 	sts	0x0074, r24
        return dat;
}
     90c:	89 2f       	mov	r24, r25
     90e:	1f 91       	pop	r17
     910:	08 95       	ret

00000912 <TWI_SW>:
        TWCR = 0x94;
}
/////////////////////////////////////////////////////////////////////////

void TWI_SW(unsigned char addr, unsigned char dat)
{
     912:	1f 93       	push	r17
     914:	16 2f       	mov	r17, r22
    TWAR = addr << 1;
     916:	88 0f       	add	r24, r24
     918:	80 93 72 00 	sts	0x0072, r24
        TWCR = 0x44;                    // SLAVE
     91c:	84 e4       	ldi	r24, 0x44	; 68
     91e:	80 93 74 00 	sts	0x0074, r24
        WD_ON(I2C_WD);
     922:	81 e0       	ldi	r24, 0x01	; 1
     924:	0e 94 75 03 	call	0x6ea	; 0x6ea <WD_ON>
		while(((TWCR & 0x80) == 0x00) || ((TWSR & 0xf8) != 0xa8));
     928:	80 91 74 00 	lds	r24, 0x0074
     92c:	87 ff       	sbrs	r24, 7
     92e:	fc cf       	rjmp	.-8      	; 0x928 <TWI_SW+0x16>
     930:	80 91 71 00 	lds	r24, 0x0071
     934:	88 7f       	andi	r24, 0xF8	; 248
     936:	88 3a       	cpi	r24, 0xA8	; 168
     938:	b9 f7       	brne	.-18     	; 0x928 <TWI_SW+0x16>
        TWDR = dat;
     93a:	10 93 73 00 	sts	0x0073, r17
        TWCR = 0xc4;
     93e:	84 ec       	ldi	r24, 0xC4	; 196
     940:	80 93 74 00 	sts	0x0074, r24
		WD_ON(I2C_WD);
     944:	81 e0       	ldi	r24, 0x01	; 1
     946:	0e 94 75 03 	call	0x6ea	; 0x6ea <WD_ON>
     94a:	0e c0       	rjmp	.+28     	; 0x968 <TWI_SW+0x56>
			//CTC		//110 // clk/256
}
/////////////////////////////////////////////////////////////////////////
char WD_CHECK(void)
{
	if(WD_FLAG)
     94c:	80 91 26 05 	lds	r24, 0x0526
     950:	88 23       	and	r24, r24
     952:	51 f0       	breq	.+20     	; 0x968 <TWI_SW+0x56>
    {
        TCCR0 = 0;
     954:	13 be       	out	0x33, r1	; 51
        TCCR2 = 0;
     956:	15 bc       	out	0x25, r1	; 37
        TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);
     958:	8d e0       	ldi	r24, 0x0D	; 13
     95a:	85 bd       	out	0x25, r24	; 37
	TWSR = 0x00;
}

void TWI_ERROR(void)
{
	TWCR=((1<<TWINT)|(1<<TWEN)|(1<<TWSTO)); 	//TWI - Stop 
     95c:	84 e9       	ldi	r24, 0x94	; 148
     95e:	80 93 74 00 	sts	0x0074, r24
	TWCR=(0<<TWEN); 							//TWI - Aus
     962:	10 92 74 00 	sts	0x0074, r1
     966:	0c c0       	rjmp	.+24     	; 0x980 <TWI_SW+0x6e>
        WD_ON(I2C_WD);
		while(((TWCR & 0x80) == 0x00) || ((TWSR & 0xf8) != 0xa8));
        TWDR = dat;
        TWCR = 0xc4;
		WD_ON(I2C_WD);
        while(((TWCR & 0x80) == 0x00) || ((TWSR & 0xf8) != 0xc0))
     968:	80 91 74 00 	lds	r24, 0x0074
     96c:	87 ff       	sbrs	r24, 7
     96e:	ee cf       	rjmp	.-36     	; 0x94c <TWI_SW+0x3a>
     970:	80 91 71 00 	lds	r24, 0x0071
     974:	88 7f       	andi	r24, 0xF8	; 248
     976:	80 3c       	cpi	r24, 0xC0	; 192
     978:	49 f7       	brne	.-46     	; 0x94c <TWI_SW+0x3a>
			{
				TWI_ERROR();
				return;
			}
		}
        TWCR = 0xc4;
     97a:	84 ec       	ldi	r24, 0xC4	; 196
     97c:	80 93 74 00 	sts	0x0074, r24
}
     980:	1f 91       	pop	r17
     982:	08 95       	ret

00000984 <TWI_MW>:
	TWCR=(0<<TWEN); 							//TWI - Aus

	return ;
}
void TWI_MW(unsigned char addr, unsigned char dat)
{
     984:	0f 93       	push	r16
     986:	1f 93       	push	r17
     988:	18 2f       	mov	r17, r24
     98a:	06 2f       	mov	r16, r22
   		TWCR = 0xa4;                    // START
     98c:	84 ea       	ldi	r24, 0xA4	; 164
     98e:	80 93 74 00 	sts	0x0074, r24
        
		WD_ON(I2C_WD);
     992:	81 e0       	ldi	r24, 0x01	; 1
     994:	0e 94 75 03 	call	0x6ea	; 0x6ea <WD_ON>
     998:	04 c0       	rjmp	.+8      	; 0x9a2 <TWI_MW+0x1e>
			//CTC		//110 // clk/256
}
/////////////////////////////////////////////////////////////////////////
char WD_CHECK(void)
{
	if(WD_FLAG)
     99a:	80 91 26 05 	lds	r24, 0x0526
     99e:	88 23       	and	r24, r24
     9a0:	69 f5       	brne	.+90     	; 0x9fc <TWI_MW+0x78>
{
   		TWCR = 0xa4;                    // START
        
		WD_ON(I2C_WD);
		
		while(((TWCR & 0x80) == 0x00) || ((TWSR & 0xf8) != 0x08))
     9a2:	80 91 74 00 	lds	r24, 0x0074
     9a6:	87 ff       	sbrs	r24, 7
     9a8:	f8 cf       	rjmp	.-16     	; 0x99a <TWI_MW+0x16>
     9aa:	80 91 71 00 	lds	r24, 0x0071
     9ae:	88 7f       	andi	r24, 0xF8	; 248
     9b0:	88 30       	cpi	r24, 0x08	; 8
     9b2:	99 f7       	brne	.-26     	; 0x99a <TWI_MW+0x16>
			{
				TWI_ERROR();
				return;
			}
		}
        TWDR = addr << 1;               // ADDRESS
     9b4:	11 0f       	add	r17, r17
     9b6:	10 93 73 00 	sts	0x0073, r17
        TWCR = 0x84;
     9ba:	84 e8       	ldi	r24, 0x84	; 132
     9bc:	80 93 74 00 	sts	0x0074, r24
        WD_ON(I2C_WD);
     9c0:	81 e0       	ldi	r24, 0x01	; 1
     9c2:	0e 94 75 03 	call	0x6ea	; 0x6ea <WD_ON>
     9c6:	04 c0       	rjmp	.+8      	; 0x9d0 <TWI_MW+0x4c>
			//CTC		//110 // clk/256
}
/////////////////////////////////////////////////////////////////////////
char WD_CHECK(void)
{
	if(WD_FLAG)
     9c8:	80 91 26 05 	lds	r24, 0x0526
     9cc:	88 23       	and	r24, r24
     9ce:	b1 f4       	brne	.+44     	; 0x9fc <TWI_MW+0x78>
			}
		}
        TWDR = addr << 1;               // ADDRESS
        TWCR = 0x84;
        WD_ON(I2C_WD);
		while(((TWCR & 0x80) == 0x00) || ((TWSR & 0xf8) != 0x18))
     9d0:	80 91 74 00 	lds	r24, 0x0074
     9d4:	87 ff       	sbrs	r24, 7
     9d6:	f8 cf       	rjmp	.-16     	; 0x9c8 <TWI_MW+0x44>
     9d8:	80 91 71 00 	lds	r24, 0x0071
     9dc:	88 7f       	andi	r24, 0xF8	; 248
     9de:	88 31       	cpi	r24, 0x18	; 24
     9e0:	99 f7       	brne	.-26     	; 0x9c8 <TWI_MW+0x44>
			{
				TWI_ERROR();
				return;
			}
		}
        TWDR = dat;                     // WRITE
     9e2:	00 93 73 00 	sts	0x0073, r16
        TWCR = 0x84;
     9e6:	84 e8       	ldi	r24, 0x84	; 132
     9e8:	80 93 74 00 	sts	0x0074, r24
        WD_ON(I2C_WD);
     9ec:	81 e0       	ldi	r24, 0x01	; 1
     9ee:	0e 94 75 03 	call	0x6ea	; 0x6ea <WD_ON>
     9f2:	0e c0       	rjmp	.+28     	; 0xa10 <TWI_MW+0x8c>
			//CTC		//110 // clk/256
}
/////////////////////////////////////////////////////////////////////////
char WD_CHECK(void)
{
	if(WD_FLAG)
     9f4:	80 91 26 05 	lds	r24, 0x0526
     9f8:	88 23       	and	r24, r24
     9fa:	51 f0       	breq	.+20     	; 0xa10 <TWI_MW+0x8c>
    {
        TCCR0 = 0;
     9fc:	13 be       	out	0x33, r1	; 51
        TCCR2 = 0;
     9fe:	15 bc       	out	0x25, r1	; 37
        TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);
     a00:	8d e0       	ldi	r24, 0x0D	; 13
     a02:	85 bd       	out	0x25, r24	; 37
	TWSR = 0x00;
}

void TWI_ERROR(void)
{
	TWCR=((1<<TWINT)|(1<<TWEN)|(1<<TWSTO)); 	//TWI - Stop 
     a04:	84 e9       	ldi	r24, 0x94	; 148
     a06:	80 93 74 00 	sts	0x0074, r24
	TWCR=(0<<TWEN); 							//TWI - Aus
     a0a:	10 92 74 00 	sts	0x0074, r1
     a0e:	0c c0       	rjmp	.+24     	; 0xa28 <TWI_MW+0xa4>
			}
		}
        TWDR = dat;                     // WRITE
        TWCR = 0x84;
        WD_ON(I2C_WD);
		while(((TWCR & 0x80) == 0x00) || ((TWSR & 0xf8) != 0x28))
     a10:	80 91 74 00 	lds	r24, 0x0074
     a14:	87 ff       	sbrs	r24, 7
     a16:	ee cf       	rjmp	.-36     	; 0x9f4 <TWI_MW+0x70>
     a18:	80 91 71 00 	lds	r24, 0x0071
     a1c:	88 7f       	andi	r24, 0xF8	; 248
     a1e:	88 32       	cpi	r24, 0x28	; 40
     a20:	49 f7       	brne	.-46     	; 0x9f4 <TWI_MW+0x70>
			{
				TWI_ERROR();
				return;
			}
		}
        TWCR = 0x94;
     a22:	84 e9       	ldi	r24, 0x94	; 148
     a24:	80 93 74 00 	sts	0x0074, r24
}
     a28:	1f 91       	pop	r17
     a2a:	0f 91       	pop	r16
     a2c:	08 95       	ret

00000a2e <EXT_INIT>:
		TIM_SDWR_INIT();		
	}
}
/////////////////////////////////////////////////////////////////////////
unsigned char EXT_INIT(unsigned char addr)
{							//0000xxxx
     a2e:	cf 92       	push	r12
     a30:	df 92       	push	r13
     a32:	ef 92       	push	r14
     a34:	ff 92       	push	r15
     a36:	1f 93       	push	r17
     a38:	cf 93       	push	r28
     a3a:	df 93       	push	r29

		unsigned char SLA_CHECK_INDEX=0;
		unsigned char I2C_DAT_BUF = 0;
	
	I2C_ADDR = addr;
     a3c:	80 93 12 05 	sts	0x0512, r24
				//MASTER = 0;
				//if(return 0)
	if(addr == MASTER)								// MASTER MODE
     a40:	88 23       	and	r24, r24
     a42:	09 f0       	breq	.+2      	; 0xa46 <EXT_INIT+0x18>
     a44:	44 c0       	rjmp	.+136    	; 0xace <EXT_INIT+0xa0>
     a46:	c1 e0       	ldi	r28, 0x01	; 1
     a48:	d0 e0       	ldi	r29, 0x00	; 0
     a4a:	b8 ec       	ldi	r27, 0xC8	; 200
     a4c:	eb 2e       	mov	r14, r27
     a4e:	f1 2c       	mov	r15, r1
		
			_delay_ms(100);
			if( I2C_DAT_BUF == CONNECTED_OK )
			{			
				I2C_SL_NUM++;	
				SLAVE_ADDR_CHECK |= 1<<(SLA_CHECK_INDEX-1);  // slave addr bit
     a50:	a1 e0       	ldi	r26, 0x01	; 1
     a52:	ca 2e       	mov	r12, r26
     a54:	d1 2c       	mov	r13, r1
		unsigned char I2C_DAT_BUF = 0;
	
	I2C_ADDR = addr;
				//MASTER = 0;
				//if(return 0)
	if(addr == MASTER)								// MASTER MODE
     a56:	1c 2f       	mov	r17, r28
	{
		for(SLA_CHECK_INDEX=1; SLA_CHECK_INDEX <= 16; SLA_CHECK_INDEX++)
		{
			
			TWI_MW(SLA_CHECK_INDEX,CONNECTED);
     a58:	8c 2f       	mov	r24, r28
     a5a:	6a ea       	ldi	r22, 0xAA	; 170
     a5c:	0e 94 c2 04 	call	0x984	; 0x984 <TWI_MW>
     a60:	88 ee       	ldi	r24, 0xE8	; 232
     a62:	93 e0       	ldi	r25, 0x03	; 3
     a64:	f7 01       	movw	r30, r14
     a66:	31 97       	sbiw	r30, 0x01	; 1
     a68:	f1 f7       	brne	.-4      	; 0xa66 <EXT_INIT+0x38>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a6a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a6c:	d9 f7       	brne	.-10     	; 0xa64 <EXT_INIT+0x36>
		
			_delay_ms(100);		
		
			I2C_DAT_BUF = TWI_MR(SLA_CHECK_INDEX);
     a6e:	81 2f       	mov	r24, r17
     a70:	0e 94 34 04 	call	0x868	; 0x868 <TWI_MR>
     a74:	28 ee       	ldi	r18, 0xE8	; 232
     a76:	33 e0       	ldi	r19, 0x03	; 3
     a78:	f7 01       	movw	r30, r14
     a7a:	31 97       	sbiw	r30, 0x01	; 1
     a7c:	f1 f7       	brne	.-4      	; 0xa7a <EXT_INIT+0x4c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a7e:	21 50       	subi	r18, 0x01	; 1
     a80:	30 40       	sbci	r19, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a82:	d1 f7       	brne	.-12     	; 0xa78 <EXT_INIT+0x4a>
			
		
			_delay_ms(100);
			if( I2C_DAT_BUF == CONNECTED_OK )
     a84:	8b 3a       	cpi	r24, 0xAB	; 171
     a86:	c1 f4       	brne	.+48     	; 0xab8 <EXT_INIT+0x8a>
			{			
				I2C_SL_NUM++;	
     a88:	80 91 13 05 	lds	r24, 0x0513
     a8c:	8f 5f       	subi	r24, 0xFF	; 255
     a8e:	80 93 13 05 	sts	0x0513, r24
				SLAVE_ADDR_CHECK |= 1<<(SLA_CHECK_INDEX-1);  // slave addr bit
     a92:	20 91 b1 09 	lds	r18, 0x09B1
     a96:	30 91 b2 09 	lds	r19, 0x09B2
     a9a:	21 97       	sbiw	r28, 0x01	; 1
     a9c:	c6 01       	movw	r24, r12
     a9e:	0c 2e       	mov	r0, r28
     aa0:	02 c0       	rjmp	.+4      	; 0xaa6 <EXT_INIT+0x78>
     aa2:	88 0f       	add	r24, r24
     aa4:	99 1f       	adc	r25, r25
     aa6:	0a 94       	dec	r0
     aa8:	e2 f7       	brpl	.-8      	; 0xaa2 <EXT_INIT+0x74>
     aaa:	21 96       	adiw	r28, 0x01	; 1
     aac:	82 2b       	or	r24, r18
     aae:	93 2b       	or	r25, r19
     ab0:	90 93 b2 09 	sts	0x09B2, r25
     ab4:	80 93 b1 09 	sts	0x09B1, r24
			}
		
			FND_OP(SLA_CHECK_INDEX);
     ab8:	ce 01       	movw	r24, r28
     aba:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
     abe:	21 96       	adiw	r28, 0x01	; 1
	I2C_ADDR = addr;
				//MASTER = 0;
				//if(return 0)
	if(addr == MASTER)								// MASTER MODE
	{
		for(SLA_CHECK_INDEX=1; SLA_CHECK_INDEX <= 16; SLA_CHECK_INDEX++)
     ac0:	c1 31       	cpi	r28, 0x11	; 17
     ac2:	d1 05       	cpc	r29, r1
     ac4:	41 f6       	brne	.-112    	; 0xa56 <EXT_INIT+0x28>
				SLAVE_ADDR_CHECK |= 1<<(SLA_CHECK_INDEX-1);  // slave addr bit
			}
		
			FND_OP(SLA_CHECK_INDEX);
		}
		return(100+I2C_SL_NUM);
     ac6:	80 91 13 05 	lds	r24, 0x0513
     aca:	8c 59       	subi	r24, 0x9C	; 156
     acc:	0d c0       	rjmp	.+26     	; 0xae8 <EXT_INIT+0xba>
	}	
	else											// SLAVE MODE
	{		
			
			I2C_DAT_BUF = twi_slave_read(I2C_ADDR);
     ace:	80 91 12 05 	lds	r24, 0x0512
     ad2:	0e 94 a2 01 	call	0x344	; 0x344 <twi_slave_read>
			

			if ( I2C_DAT_BUF == CONNECTED)
     ad6:	8a 3a       	cpi	r24, 0xAA	; 170
     ad8:	29 f4       	brne	.+10     	; 0xae4 <EXT_INIT+0xb6>
			{
				twi_slave_write(I2C_ADDR,CONNECTED_OK);
     ada:	80 91 12 05 	lds	r24, 0x0512
     ade:	6b ea       	ldi	r22, 0xAB	; 171
     ae0:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <twi_slave_write>
			}

	}	
	return I2C_ADDR;		
     ae4:	80 91 12 05 	lds	r24, 0x0512
}
     ae8:	df 91       	pop	r29
     aea:	cf 91       	pop	r28
     aec:	1f 91       	pop	r17
     aee:	ff 90       	pop	r15
     af0:	ef 90       	pop	r14
     af2:	df 90       	pop	r13
     af4:	cf 90       	pop	r12
     af6:	08 95       	ret

00000af8 <WD_CHECK>:
			//CTC		//110 // clk/256
}
/////////////////////////////////////////////////////////////////////////
char WD_CHECK(void)
{
	if(WD_FLAG)
     af8:	80 91 26 05 	lds	r24, 0x0526
     afc:	88 23       	and	r24, r24
     afe:	29 f0       	breq	.+10     	; 0xb0a <WD_CHECK+0x12>
    {
        TCCR0 = 0;
     b00:	13 be       	out	0x33, r1	; 51
        TCCR2 = 0;
     b02:	15 bc       	out	0x25, r1	; 37
        TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);
     b04:	8d e0       	ldi	r24, 0x0D	; 13
     b06:	85 bd       	out	0x25, r24	; 37
     b08:	81 e0       	ldi	r24, 0x01	; 1
        return 1;    
    }
	else 
		return 0;
}
     b0a:	08 95       	ret

00000b0c <TIM_SDWR_INIT>:

/////////////////////////////////////////////////////////////////////////
void TIM_SDWR_INIT(void)
{
    OCR1A =  31250;      //31250 count = 1sec
     b0c:	82 e1       	ldi	r24, 0x12	; 18
     b0e:	9a e7       	ldi	r25, 0x7A	; 122
     b10:	9b bd       	out	0x2b, r25	; 43
     b12:	8a bd       	out	0x2a, r24	; 42
    TIMSK |= (1<<OCIE1A);
     b14:	87 b7       	in	r24, 0x37	; 55
     b16:	80 61       	ori	r24, 0x10	; 16
     b18:	87 bf       	out	0x37, r24	; 55
    TCCR1A = 0x00;
     b1a:	1f bc       	out	0x2f, r1	; 47
    TCCR1B = (1<<WGM12)|(1<<CS12);  
     b1c:	8c e0       	ldi	r24, 0x0C	; 12
     b1e:	8e bd       	out	0x2e, r24	; 46
    TCCR1C = 0x00;
     b20:	10 92 7a 00 	sts	0x007A, r1
}
     b24:	08 95       	ret

00000b26 <D2AQ>:
/////////////////////////////////////////////////////////////////////////
int D2AQ(int adc)
{
     b26:	aa 27       	eor	r26, r26
     b28:	97 fd       	sbrc	r25, 7
     b2a:	a0 95       	com	r26
     b2c:	ba 2f       	mov	r27, r26
     b2e:	bc 01       	movw	r22, r24
     b30:	cd 01       	movw	r24, r26
     b32:	0e 94 92 3d 	call	0x7b24	; 0x7b24 <__floatsisf>
     b36:	2b e7       	ldi	r18, 0x7B	; 123
     b38:	34 e1       	ldi	r19, 0x14	; 20
     b3a:	4e e6       	ldi	r20, 0x6E	; 110
     b3c:	5f e3       	ldi	r21, 0x3F	; 63
     b3e:	0e 94 08 3c 	call	0x7810	; 0x7810 <__mulsf3>
     b42:	0e 94 f0 3d 	call	0x7be0	; 0x7be0 <__fixsfsi>
    return adc*0.93;        //  1.30969283==1mmAq    
}
     b46:	cb 01       	movw	r24, r22
     b48:	08 95       	ret

00000b4a <READ_ADDR>:
/////////////////////////////////////////////////////////////////////////
unsigned char READ_ADDR(void)
{
	//PORTD => Pull_Up

	if((PIND&0xf0)==0xf0)	//PORTD => Nothing
     b4a:	80 b3       	in	r24, 0x10	; 16
     b4c:	80 7f       	andi	r24, 0xF0	; 240
     b4e:	80 3f       	cpi	r24, 0xF0	; 240
     b50:	11 f4       	brne	.+4      	; 0xb56 <READ_ADDR+0xc>
     b52:	80 e0       	ldi	r24, 0x00	; 0
     b54:	08 95       	ret
		return 0;
	else
		return (PIND>>4)&0x0f;	//상위4개만 검출? 왜?
     b56:	80 b3       	in	r24, 0x10	; 16
     b58:	82 95       	swap	r24
     b5a:	8f 70       	andi	r24, 0x0F	; 15
								//확장보드는 최대 15개까지 확장가능
}
     b5c:	08 95       	ret

00000b5e <EEPROM_WR>:

	for(index=SIZE_OF_DAT; index>0; index--)
	{
		while(EECR&(1<<EEWE));  //쓰기 작업중이면 루프
	
		EEAR = ADDR+(2-index); 	    	//쓸 주소값 입력
     b5e:	fc 01       	movw	r30, r24
     b60:	32 96       	adiw	r30, 0x02	; 2
     b62:	19 c0       	rjmp	.+50     	; 0xb96 <EEPROM_WR+0x38>
{
	unsigned char index=0;

	for(index=SIZE_OF_DAT; index>0; index--)
	{
		while(EECR&(1<<EEWE));  //쓰기 작업중이면 루프
     b64:	e1 99       	sbic	0x1c, 1	; 28
     b66:	fe cf       	rjmp	.-4      	; 0xb64 <EEPROM_WR+0x6>
	
		EEAR = ADDR+(2-index); 	    	//쓸 주소값 입력
     b68:	86 2f       	mov	r24, r22
     b6a:	90 e0       	ldi	r25, 0x00	; 0
     b6c:	9f 01       	movw	r18, r30
     b6e:	28 1b       	sub	r18, r24
     b70:	39 0b       	sbc	r19, r25
     b72:	3f bb       	out	0x1f, r19	; 31
     b74:	2e bb       	out	0x1e, r18	; 30
		EEDR = DAT>>(8*(index-1));		//쓸 데이터 입력
     b76:	01 97       	sbiw	r24, 0x01	; 1
     b78:	23 e0       	ldi	r18, 0x03	; 3
     b7a:	88 0f       	add	r24, r24
     b7c:	99 1f       	adc	r25, r25
     b7e:	2a 95       	dec	r18
     b80:	e1 f7       	brne	.-8      	; 0xb7a <EEPROM_WR+0x1c>
     b82:	9a 01       	movw	r18, r20
     b84:	02 c0       	rjmp	.+4      	; 0xb8a <EEPROM_WR+0x2c>
     b86:	36 95       	lsr	r19
     b88:	27 95       	ror	r18
     b8a:	8a 95       	dec	r24
     b8c:	e2 f7       	brpl	.-8      	; 0xb86 <EEPROM_WR+0x28>
     b8e:	2d bb       	out	0x1d, r18	; 29
		EECR |= (1<<EEMWE);     		//EEWE  준비
     b90:	e2 9a       	sbi	0x1c, 2	; 28
		EECR |= (1<<EEWE);      		//쓰기명령
     b92:	e1 9a       	sbi	0x1c, 1	; 28
/////////////////////////////////////////////////////////////////////////
void EEPROM_WR(unsigned int ADDR, unsigned char SIZE_OF_DAT, unsigned int DAT)
{
	unsigned char index=0;

	for(index=SIZE_OF_DAT; index>0; index--)
     b94:	61 50       	subi	r22, 0x01	; 1
     b96:	66 23       	and	r22, r22
     b98:	29 f7       	brne	.-54     	; 0xb64 <EEPROM_WR+0x6>
		EEDR = DAT>>(8*(index-1));		//쓸 데이터 입력
		EECR |= (1<<EEMWE);     		//EEWE  준비
		EECR |= (1<<EEWE);      		//쓰기명령
	}
	return;
}
     b9a:	08 95       	ret

00000b9c <SAVE_TIM>:
	}
}
/////////////////////////////////////////////////////////////////////////
void SAVE_TIM(void)
{
	EEPROM_WR(0,2,YEAR);
     b9c:	40 91 e3 03 	lds	r20, 0x03E3
     ba0:	50 91 e4 03 	lds	r21, 0x03E4
     ba4:	80 e0       	ldi	r24, 0x00	; 0
     ba6:	90 e0       	ldi	r25, 0x00	; 0
     ba8:	62 e0       	ldi	r22, 0x02	; 2
     baa:	0e 94 af 05 	call	0xb5e	; 0xb5e <EEPROM_WR>
	EEPROM_WR(2,1,MONTH);
     bae:	40 91 e2 03 	lds	r20, 0x03E2
     bb2:	82 e0       	ldi	r24, 0x02	; 2
     bb4:	90 e0       	ldi	r25, 0x00	; 0
     bb6:	61 e0       	ldi	r22, 0x01	; 1
     bb8:	50 e0       	ldi	r21, 0x00	; 0
     bba:	0e 94 af 05 	call	0xb5e	; 0xb5e <EEPROM_WR>
	EEPROM_WR(3,1,DAY);
     bbe:	40 91 e1 03 	lds	r20, 0x03E1
     bc2:	83 e0       	ldi	r24, 0x03	; 3
     bc4:	90 e0       	ldi	r25, 0x00	; 0
     bc6:	61 e0       	ldi	r22, 0x01	; 1
     bc8:	50 e0       	ldi	r21, 0x00	; 0
     bca:	0e 94 af 05 	call	0xb5e	; 0xb5e <EEPROM_WR>
	EEPROM_WR(4,1,HOUR);
     bce:	40 91 28 05 	lds	r20, 0x0528
     bd2:	84 e0       	ldi	r24, 0x04	; 4
     bd4:	90 e0       	ldi	r25, 0x00	; 0
     bd6:	61 e0       	ldi	r22, 0x01	; 1
     bd8:	50 e0       	ldi	r21, 0x00	; 0
     bda:	0e 94 af 05 	call	0xb5e	; 0xb5e <EEPROM_WR>
	EEPROM_WR(5,1,MIN);	
     bde:	40 91 27 05 	lds	r20, 0x0527
     be2:	85 e0       	ldi	r24, 0x05	; 5
     be4:	90 e0       	ldi	r25, 0x00	; 0
     be6:	61 e0       	ldi	r22, 0x01	; 1
     be8:	50 e0       	ldi	r21, 0x00	; 0
     bea:	0e 94 af 05 	call	0xb5e	; 0xb5e <EEPROM_WR>
}
     bee:	08 95       	ret

00000bf0 <EEPROM_RD>:
	}
	return;
}
/////////////////////////////////////////////////////////////////////////
unsigned int EEPROM_RD(unsigned int ADDR, unsigned char SIZE_OF_DAT)
{
     bf0:	40 e0       	ldi	r20, 0x00	; 0
     bf2:	50 e0       	ldi	r21, 0x00	; 0

	for(index=SIZE_OF_DAT; index>0; index--)
	{
		while(EECR&(1<<EEWE));
	
		EEAR = ADDR+(2-index);
     bf4:	fc 01       	movw	r30, r24
     bf6:	32 96       	adiw	r30, 0x02	; 2
     bf8:	1b c0       	rjmp	.+54     	; 0xc30 <EEPROM_RD+0x40>
	unsigned char index=0;
	unsigned int buf=0;

	for(index=SIZE_OF_DAT; index>0; index--)
	{
		while(EECR&(1<<EEWE));
     bfa:	e1 99       	sbic	0x1c, 1	; 28
     bfc:	fe cf       	rjmp	.-4      	; 0xbfa <EEPROM_RD+0xa>
	
		EEAR = ADDR+(2-index);
     bfe:	26 2f       	mov	r18, r22
     c00:	30 e0       	ldi	r19, 0x00	; 0
     c02:	cf 01       	movw	r24, r30
     c04:	82 1b       	sub	r24, r18
     c06:	93 0b       	sbc	r25, r19
     c08:	9f bb       	out	0x1f, r25	; 31
     c0a:	8e bb       	out	0x1e, r24	; 30
		EECR |= (1<<EERE);
     c0c:	e0 9a       	sbi	0x1c, 0	; 28

		buf |= EEDR<<(8*(index-1));
     c0e:	8d b3       	in	r24, 0x1d	; 29
     c10:	90 e0       	ldi	r25, 0x00	; 0
     c12:	21 50       	subi	r18, 0x01	; 1
     c14:	30 40       	sbci	r19, 0x00	; 0
     c16:	73 e0       	ldi	r23, 0x03	; 3
     c18:	22 0f       	add	r18, r18
     c1a:	33 1f       	adc	r19, r19
     c1c:	7a 95       	dec	r23
     c1e:	e1 f7       	brne	.-8      	; 0xc18 <EEPROM_RD+0x28>
     c20:	02 c0       	rjmp	.+4      	; 0xc26 <EEPROM_RD+0x36>
     c22:	88 0f       	add	r24, r24
     c24:	99 1f       	adc	r25, r25
     c26:	2a 95       	dec	r18
     c28:	e2 f7       	brpl	.-8      	; 0xc22 <EEPROM_RD+0x32>
     c2a:	48 2b       	or	r20, r24
     c2c:	59 2b       	or	r21, r25
unsigned int EEPROM_RD(unsigned int ADDR, unsigned char SIZE_OF_DAT)
{
	unsigned char index=0;
	unsigned int buf=0;

	for(index=SIZE_OF_DAT; index>0; index--)
     c2e:	61 50       	subi	r22, 0x01	; 1
     c30:	66 23       	and	r22, r22
     c32:	19 f7       	brne	.-58     	; 0xbfa <EEPROM_RD+0xa>

		buf |= EEDR<<(8*(index-1));
	}
	
	return buf;
}
     c34:	ca 01       	movw	r24, r20
     c36:	08 95       	ret

00000c38 <CHECK_TIM>:
								//확장보드는 최대 15개까지 확장가능
}
/////////////////////////////////////////////////////////////////////////
void CHECK_TIM(void)
{
	if(EEPROM_RD(0,2) != 0xffff)
     c38:	80 e0       	ldi	r24, 0x00	; 0
     c3a:	90 e0       	ldi	r25, 0x00	; 0
     c3c:	62 e0       	ldi	r22, 0x02	; 2
     c3e:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <EEPROM_RD>
     c42:	8f 5f       	subi	r24, 0xFF	; 255
     c44:	9f 4f       	sbci	r25, 0xFF	; 255
     c46:	31 f1       	breq	.+76     	; 0xc94 <CHECK_TIM+0x5c>
	{
		YEAR = EEPROM_RD(0,2);
     c48:	80 e0       	ldi	r24, 0x00	; 0
     c4a:	90 e0       	ldi	r25, 0x00	; 0
     c4c:	62 e0       	ldi	r22, 0x02	; 2
     c4e:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <EEPROM_RD>
     c52:	90 93 e4 03 	sts	0x03E4, r25
     c56:	80 93 e3 03 	sts	0x03E3, r24
		MONTH = EEPROM_RD(2,1);
     c5a:	82 e0       	ldi	r24, 0x02	; 2
     c5c:	90 e0       	ldi	r25, 0x00	; 0
     c5e:	61 e0       	ldi	r22, 0x01	; 1
     c60:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <EEPROM_RD>
     c64:	80 93 e2 03 	sts	0x03E2, r24
		DAY = EEPROM_RD(3,1);
     c68:	83 e0       	ldi	r24, 0x03	; 3
     c6a:	90 e0       	ldi	r25, 0x00	; 0
     c6c:	61 e0       	ldi	r22, 0x01	; 1
     c6e:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <EEPROM_RD>
     c72:	80 93 e1 03 	sts	0x03E1, r24
		HOUR = EEPROM_RD(4,1);
     c76:	84 e0       	ldi	r24, 0x04	; 4
     c78:	90 e0       	ldi	r25, 0x00	; 0
     c7a:	61 e0       	ldi	r22, 0x01	; 1
     c7c:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <EEPROM_RD>
     c80:	80 93 28 05 	sts	0x0528, r24
		MIN = EEPROM_RD(5,1);
     c84:	85 e0       	ldi	r24, 0x05	; 5
     c86:	90 e0       	ldi	r25, 0x00	; 0
     c88:	61 e0       	ldi	r22, 0x01	; 1
     c8a:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <EEPROM_RD>
     c8e:	80 93 27 05 	sts	0x0527, r24
     c92:	08 95       	ret
	}
	else
	{
		SAVE_TIM();	
     c94:	0e 94 ce 05 	call	0xb9c	; 0xb9c <SAVE_TIM>
     c98:	08 95       	ret

00000c9a <DAY_MONTH>:
	return buf;
}
/////////////////////////////////////////////////////////////////////////
unsigned char DAY_MONTH(void)
{
	switch(MONTH)
     c9a:	80 91 e2 03 	lds	r24, 0x03E2
     c9e:	85 30       	cpi	r24, 0x05	; 5
     ca0:	b1 f0       	breq	.+44     	; 0xcce <DAY_MONTH+0x34>
     ca2:	86 30       	cpi	r24, 0x06	; 6
     ca4:	38 f4       	brcc	.+14     	; 0xcb4 <DAY_MONTH+0x1a>
     ca6:	82 30       	cpi	r24, 0x02	; 2
     ca8:	81 f0       	breq	.+32     	; 0xcca <DAY_MONTH+0x30>
     caa:	83 30       	cpi	r24, 0x03	; 3
     cac:	81 f0       	breq	.+32     	; 0xcce <DAY_MONTH+0x34>
     cae:	81 30       	cpi	r24, 0x01	; 1
     cb0:	81 f4       	brne	.+32     	; 0xcd2 <DAY_MONTH+0x38>
     cb2:	0d c0       	rjmp	.+26     	; 0xcce <DAY_MONTH+0x34>
     cb4:	8a 30       	cpi	r24, 0x0A	; 10
     cb6:	59 f0       	breq	.+22     	; 0xcce <DAY_MONTH+0x34>
     cb8:	8b 30       	cpi	r24, 0x0B	; 11
     cba:	20 f4       	brcc	.+8      	; 0xcc4 <DAY_MONTH+0x2a>
     cbc:	87 50       	subi	r24, 0x07	; 7
     cbe:	82 30       	cpi	r24, 0x02	; 2
     cc0:	40 f4       	brcc	.+16     	; 0xcd2 <DAY_MONTH+0x38>
     cc2:	05 c0       	rjmp	.+10     	; 0xcce <DAY_MONTH+0x34>
     cc4:	8c 30       	cpi	r24, 0x0C	; 12
     cc6:	29 f4       	brne	.+10     	; 0xcd2 <DAY_MONTH+0x38>
     cc8:	02 c0       	rjmp	.+4      	; 0xcce <DAY_MONTH+0x34>
     cca:	8c e1       	ldi	r24, 0x1C	; 28
     ccc:	08 95       	ret
     cce:	8f e1       	ldi	r24, 0x1F	; 31
     cd0:	08 95       	ret
     cd2:	8e e1       	ldi	r24, 0x1E	; 30
		default:
		{
			return 30;
		}
	}
}
     cd4:	08 95       	ret

00000cd6 <MSD_INIT>:
    TIMSK = (1<<OCIE2);
    TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);
}
/////////////////////////////////////////////////////////////////////////
unsigned char MSD_INIT(void)
{	
     cd6:	af 92       	push	r10
     cd8:	bf 92       	push	r11
     cda:	cf 92       	push	r12
     cdc:	df 92       	push	r13
     cde:	ef 92       	push	r14
     ce0:	ff 92       	push	r15
     ce2:	0f 93       	push	r16
     ce4:	1f 93       	push	r17
     ce6:	df 93       	push	r29
     ce8:	cf 93       	push	r28
     cea:	cd b7       	in	r28, 0x3d	; 61
     cec:	de b7       	in	r29, 0x3e	; 62
     cee:	a0 97       	sbiw	r28, 0x20	; 32
     cf0:	0f b6       	in	r0, 0x3f	; 63
     cf2:	f8 94       	cli
     cf4:	de bf       	out	0x3e, r29	; 62
     cf6:	0f be       	out	0x3f, r0	; 63
     cf8:	cd bf       	out	0x3d, r28	; 61
	
	cli();
     cfa:	f8 94       	cli
	FND_C |= 0xf0;
     cfc:	88 b3       	in	r24, 0x18	; 24
     cfe:	80 6f       	ori	r24, 0xF0	; 240
     d00:	88 bb       	out	0x18, r24	; 24
	UINT bw;
	char fil_name[30] = "";
     d02:	1b 82       	std	Y+3, r1	; 0x03
     d04:	1c 82       	std	Y+4, r1	; 0x04
     d06:	1d 82       	std	Y+5, r1	; 0x05
     d08:	1e 82       	std	Y+6, r1	; 0x06
     d0a:	fe 01       	movw	r30, r28
     d0c:	37 96       	adiw	r30, 0x07	; 7
     d0e:	8a e1       	ldi	r24, 0x1A	; 26
     d10:	df 01       	movw	r26, r30
     d12:	1d 92       	st	X+, r1
     d14:	8a 95       	dec	r24
     d16:	e9 f7       	brne	.-6      	; 0xd12 <MSD_INIT+0x3c>

	sprintf(fil_name,"%03d.txt",FIL_NUM);
     d18:	80 91 e0 03 	lds	r24, 0x03E0
     d1c:	00 d0       	rcall	.+0      	; 0xd1e <MSD_INIT+0x48>
     d1e:	00 d0       	rcall	.+0      	; 0xd20 <MSD_INIT+0x4a>
     d20:	00 d0       	rcall	.+0      	; 0xd22 <MSD_INIT+0x4c>
     d22:	ed b7       	in	r30, 0x3d	; 61
     d24:	fe b7       	in	r31, 0x3e	; 62
     d26:	31 96       	adiw	r30, 0x01	; 1
     d28:	8e 01       	movw	r16, r28
     d2a:	0d 5f       	subi	r16, 0xFD	; 253
     d2c:	1f 4f       	sbci	r17, 0xFF	; 255
     d2e:	ad b7       	in	r26, 0x3d	; 61
     d30:	be b7       	in	r27, 0x3e	; 62
     d32:	12 96       	adiw	r26, 0x02	; 2
     d34:	1c 93       	st	X, r17
     d36:	0e 93       	st	-X, r16
     d38:	11 97       	sbiw	r26, 0x01	; 1
     d3a:	a0 e0       	ldi	r26, 0x00	; 0
     d3c:	ea 2e       	mov	r14, r26
     d3e:	a1 e0       	ldi	r26, 0x01	; 1
     d40:	fa 2e       	mov	r15, r26
     d42:	f3 82       	std	Z+3, r15	; 0x03
     d44:	e2 82       	std	Z+2, r14	; 0x02
     d46:	84 83       	std	Z+4, r24	; 0x04
     d48:	15 82       	std	Z+5, r1	; 0x05
     d4a:	0e 94 84 42 	call	0x8508	; 0x8508 <sprintf>
	
	if((fr=f_mount(&fs, "0:", 0)))
     d4e:	8d b7       	in	r24, 0x3d	; 61
     d50:	9e b7       	in	r25, 0x3e	; 62
     d52:	06 96       	adiw	r24, 0x06	; 6
     d54:	0f b6       	in	r0, 0x3f	; 63
     d56:	f8 94       	cli
     d58:	9e bf       	out	0x3e, r25	; 62
     d5a:	0f be       	out	0x3f, r0	; 63
     d5c:	8d bf       	out	0x3d, r24	; 61
     d5e:	87 e4       	ldi	r24, 0x47	; 71
     d60:	95 e0       	ldi	r25, 0x05	; 5
     d62:	69 e0       	ldi	r22, 0x09	; 9
     d64:	71 e0       	ldi	r23, 0x01	; 1
     d66:	40 e0       	ldi	r20, 0x00	; 0
     d68:	0e 94 a7 1b 	call	0x374e	; 0x374e <f_mount>
     d6c:	80 93 8e 07 	sts	0x078E, r24
     d70:	88 23       	and	r24, r24
     d72:	11 f0       	breq	.+4      	; 0xd78 <MSD_INIT+0xa2>
	{
		sei();
     d74:	78 94       	sei
     d76:	4c c0       	rjmp	.+152    	; 0xe10 <MSD_INIT+0x13a>
	do
	{
		fr=f_open(&fo, fil_name, FA_CREATE_NEW | FA_READ | FA_WRITE);
		if(fr == FR_OK)
		{
			f_write(&fo,arr,strlen(arr),&bw);
     d78:	e7 e1       	ldi	r30, 0x17	; 23
     d7a:	ae 2e       	mov	r10, r30
     d7c:	e3 e0       	ldi	r30, 0x03	; 3
     d7e:	be 2e       	mov	r11, r30
     d80:	6e 01       	movw	r12, r28
     d82:	08 94       	sec
     d84:	c1 1c       	adc	r12, r1
     d86:	d1 1c       	adc	r13, r1
		//while(1);
	}
	
	do
	{
		fr=f_open(&fo, fil_name, FA_CREATE_NEW | FA_READ | FA_WRITE);
     d88:	8f e8       	ldi	r24, 0x8F	; 143
     d8a:	97 e0       	ldi	r25, 0x07	; 7
     d8c:	b8 01       	movw	r22, r16
     d8e:	47 e0       	ldi	r20, 0x07	; 7
     d90:	0e 94 49 25 	call	0x4a92	; 0x4a92 <f_open>
     d94:	80 93 8e 07 	sts	0x078E, r24
		if(fr == FR_OK)
     d98:	88 23       	and	r24, r24
     d9a:	a1 f4       	brne	.+40     	; 0xdc4 <MSD_INIT+0xee>
		{
			f_write(&fo,arr,strlen(arr),&bw);
     d9c:	f5 01       	movw	r30, r10
     d9e:	01 90       	ld	r0, Z+
     da0:	00 20       	and	r0, r0
     da2:	e9 f7       	brne	.-6      	; 0xd9e <MSD_INIT+0xc8>
     da4:	31 97       	sbiw	r30, 0x01	; 1
     da6:	e7 51       	subi	r30, 0x17	; 23
     da8:	f3 40       	sbci	r31, 0x03	; 3
     daa:	8f e8       	ldi	r24, 0x8F	; 143
     dac:	97 e0       	ldi	r25, 0x07	; 7
     dae:	67 e1       	ldi	r22, 0x17	; 23
     db0:	73 e0       	ldi	r23, 0x03	; 3
     db2:	af 01       	movw	r20, r30
     db4:	96 01       	movw	r18, r12
     db6:	0e 94 f9 29 	call	0x53f2	; 0x53f2 <f_write>
			f_sync(&fo);
     dba:	8f e8       	ldi	r24, 0x8F	; 143
     dbc:	97 e0       	ldi	r25, 0x07	; 7
     dbe:	0e 94 57 35 	call	0x6aae	; 0x6aae <f_sync>
     dc2:	28 c0       	rjmp	.+80     	; 0xe14 <MSD_INIT+0x13e>
			//새파일 생성
		}
		else if(fr == FR_EXIST)
     dc4:	88 30       	cpi	r24, 0x08	; 8
     dc6:	19 f5       	brne	.+70     	; 0xe0e <MSD_INIT+0x138>
		{
			FIL_NUM++;
     dc8:	80 91 e0 03 	lds	r24, 0x03E0
     dcc:	8f 5f       	subi	r24, 0xFF	; 255
     dce:	80 93 e0 03 	sts	0x03E0, r24
			sprintf(fil_name,"%03d.txt",FIL_NUM);
     dd2:	80 91 e0 03 	lds	r24, 0x03E0
     dd6:	00 d0       	rcall	.+0      	; 0xdd8 <MSD_INIT+0x102>
     dd8:	00 d0       	rcall	.+0      	; 0xdda <MSD_INIT+0x104>
     dda:	00 d0       	rcall	.+0      	; 0xddc <MSD_INIT+0x106>
     ddc:	ed b7       	in	r30, 0x3d	; 61
     dde:	fe b7       	in	r31, 0x3e	; 62
     de0:	31 96       	adiw	r30, 0x01	; 1
     de2:	ad b7       	in	r26, 0x3d	; 61
     de4:	be b7       	in	r27, 0x3e	; 62
     de6:	11 96       	adiw	r26, 0x01	; 1
     de8:	0c 93       	st	X, r16
     dea:	11 97       	sbiw	r26, 0x01	; 1
     dec:	12 96       	adiw	r26, 0x02	; 2
     dee:	1c 93       	st	X, r17
     df0:	e2 82       	std	Z+2, r14	; 0x02
     df2:	f3 82       	std	Z+3, r15	; 0x03
     df4:	84 83       	std	Z+4, r24	; 0x04
     df6:	15 82       	std	Z+5, r1	; 0x05
     df8:	0e 94 84 42 	call	0x8508	; 0x8508 <sprintf>
     dfc:	8d b7       	in	r24, 0x3d	; 61
     dfe:	9e b7       	in	r25, 0x3e	; 62
     e00:	06 96       	adiw	r24, 0x06	; 6
     e02:	0f b6       	in	r0, 0x3f	; 63
     e04:	f8 94       	cli
     e06:	9e bf       	out	0x3e, r25	; 62
     e08:	0f be       	out	0x3f, r0	; 63
     e0a:	8d bf       	out	0x3d, r24	; 61
     e0c:	03 c0       	rjmp	.+6      	; 0xe14 <MSD_INIT+0x13e>
		else
		{
			//sei();
			//FND_OP(100+(int)fr);					//Check! SD Card!
			//while(1);
			sei();
     e0e:	78 94       	sei
     e10:	80 e0       	ldi	r24, 0x00	; 0
     e12:	0c c0       	rjmp	.+24     	; 0xe2c <MSD_INIT+0x156>
			return 0;
		}
	}while(fr == FR_EXIST);
     e14:	80 91 8e 07 	lds	r24, 0x078E
     e18:	88 30       	cpi	r24, 0x08	; 8
     e1a:	09 f4       	brne	.+2      	; 0xe1e <MSD_INIT+0x148>
     e1c:	b5 cf       	rjmp	.-150    	; 0xd88 <MSD_INIT+0xb2>
	
	//f_close(&fo);
	//f_mount(0,"",0);
	sei();
     e1e:	78 94       	sei
	MSD_LED_ON;
     e20:	80 91 65 00 	lds	r24, 0x0065
     e24:	87 71       	andi	r24, 0x17	; 23
     e26:	80 93 65 00 	sts	0x0065, r24
     e2a:	81 e0       	ldi	r24, 0x01	; 1
	return 1;
	
}
     e2c:	a0 96       	adiw	r28, 0x20	; 32
     e2e:	0f b6       	in	r0, 0x3f	; 63
     e30:	f8 94       	cli
     e32:	de bf       	out	0x3e, r29	; 62
     e34:	0f be       	out	0x3f, r0	; 63
     e36:	cd bf       	out	0x3d, r28	; 61
     e38:	cf 91       	pop	r28
     e3a:	df 91       	pop	r29
     e3c:	1f 91       	pop	r17
     e3e:	0f 91       	pop	r16
     e40:	ff 90       	pop	r15
     e42:	ef 90       	pop	r14
     e44:	df 90       	pop	r13
     e46:	cf 90       	pop	r12
     e48:	bf 90       	pop	r11
     e4a:	af 90       	pop	r10
     e4c:	08 95       	ret

00000e4e <SD_BUF_PRT>:
   
}

void SD_BUF_PRT(void
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  
{
     e4e:	ef 92       	push	r14
     e50:	ff 92       	push	r15
     e52:	0f 93       	push	r16
     e54:	1f 93       	push	r17
     e56:	cf 93       	push	r28
     e58:	df 93       	push	r29

		sprintf(dat_buf.tim,"%02d:%02d\t", HOUR,MIN);
     e5a:	80 91 b7 09 	lds	r24, 0x09B7
     e5e:	90 91 b8 09 	lds	r25, 0x09B8
     e62:	20 91 28 05 	lds	r18, 0x0528
     e66:	30 91 27 05 	lds	r19, 0x0527
     e6a:	4d b7       	in	r20, 0x3d	; 61
     e6c:	5e b7       	in	r21, 0x3e	; 62
     e6e:	48 50       	subi	r20, 0x08	; 8
     e70:	50 40       	sbci	r21, 0x00	; 0
     e72:	0f b6       	in	r0, 0x3f	; 63
     e74:	f8 94       	cli
     e76:	5e bf       	out	0x3e, r21	; 62
     e78:	0f be       	out	0x3f, r0	; 63
     e7a:	4d bf       	out	0x3d, r20	; 61
     e7c:	ed b7       	in	r30, 0x3d	; 61
     e7e:	fe b7       	in	r31, 0x3e	; 62
     e80:	31 96       	adiw	r30, 0x01	; 1
     e82:	ad b7       	in	r26, 0x3d	; 61
     e84:	be b7       	in	r27, 0x3e	; 62
     e86:	12 96       	adiw	r26, 0x02	; 2
     e88:	9c 93       	st	X, r25
     e8a:	8e 93       	st	-X, r24
     e8c:	11 97       	sbiw	r26, 0x01	; 1
     e8e:	8c e0       	ldi	r24, 0x0C	; 12
     e90:	91 e0       	ldi	r25, 0x01	; 1
     e92:	93 83       	std	Z+3, r25	; 0x03
     e94:	82 83       	std	Z+2, r24	; 0x02
     e96:	24 83       	std	Z+4, r18	; 0x04
     e98:	15 82       	std	Z+5, r1	; 0x05
     e9a:	36 83       	std	Z+6, r19	; 0x06
     e9c:	17 82       	std	Z+7, r1	; 0x07
     e9e:	0e 94 84 42 	call	0x8508	; 0x8508 <sprintf>
	switch(ST)
     ea2:	ed b7       	in	r30, 0x3d	; 61
     ea4:	fe b7       	in	r31, 0x3e	; 62
     ea6:	38 96       	adiw	r30, 0x08	; 8
     ea8:	0f b6       	in	r0, 0x3f	; 63
     eaa:	f8 94       	cli
     eac:	fe bf       	out	0x3e, r31	; 62
     eae:	0f be       	out	0x3f, r0	; 63
     eb0:	ed bf       	out	0x3d, r30	; 61
     eb2:	80 91 46 05 	lds	r24, 0x0546
     eb6:	86 30       	cpi	r24, 0x06	; 6
     eb8:	09 f4       	brne	.+2      	; 0xebc <SD_BUF_PRT+0x6e>
     eba:	58 c1       	rjmp	.+688    	; 0x116c <__stack+0x6d>
     ebc:	87 30       	cpi	r24, 0x07	; 7
     ebe:	90 f4       	brcc	.+36     	; 0xee4 <SD_BUF_PRT+0x96>
     ec0:	82 30       	cpi	r24, 0x02	; 2
     ec2:	09 f4       	brne	.+2      	; 0xec6 <SD_BUF_PRT+0x78>
     ec4:	71 c0       	rjmp	.+226    	; 0xfa8 <SD_BUF_PRT+0x15a>
     ec6:	83 30       	cpi	r24, 0x03	; 3
     ec8:	30 f4       	brcc	.+12     	; 0xed6 <SD_BUF_PRT+0x88>
     eca:	88 23       	and	r24, r24
     ecc:	09 f1       	breq	.+66     	; 0xf10 <SD_BUF_PRT+0xc2>
     ece:	81 30       	cpi	r24, 0x01	; 1
     ed0:	09 f0       	breq	.+2      	; 0xed4 <SD_BUF_PRT+0x86>
     ed2:	84 c2       	rjmp	.+1288   	; 0x13dc <__stack+0x2dd>
     ed4:	58 c0       	rjmp	.+176    	; 0xf86 <SD_BUF_PRT+0x138>
     ed6:	84 30       	cpi	r24, 0x04	; 4
     ed8:	09 f4       	brne	.+2      	; 0xedc <SD_BUF_PRT+0x8e>
     eda:	0a c1       	rjmp	.+532    	; 0x10f0 <SD_BUF_PRT+0x2a2>
     edc:	85 30       	cpi	r24, 0x05	; 5
     ede:	08 f0       	brcs	.+2      	; 0xee2 <SD_BUF_PRT+0x94>
     ee0:	26 c1       	rjmp	.+588    	; 0x112e <__stack+0x2f>
     ee2:	9b c0       	rjmp	.+310    	; 0x101a <SD_BUF_PRT+0x1cc>
     ee4:	89 30       	cpi	r24, 0x09	; 9
     ee6:	09 f4       	brne	.+2      	; 0xeea <SD_BUF_PRT+0x9c>
     ee8:	cd c1       	rjmp	.+922    	; 0x1284 <__stack+0x185>
     eea:	8a 30       	cpi	r24, 0x0A	; 10
     eec:	38 f4       	brcc	.+14     	; 0xefc <SD_BUF_PRT+0xae>
     eee:	87 30       	cpi	r24, 0x07	; 7
     ef0:	09 f4       	brne	.+2      	; 0xef4 <SD_BUF_PRT+0xa6>
     ef2:	5f c1       	rjmp	.+702    	; 0x11b2 <__stack+0xb3>
     ef4:	88 30       	cpi	r24, 0x08	; 8
     ef6:	09 f0       	breq	.+2      	; 0xefa <SD_BUF_PRT+0xac>
     ef8:	71 c2       	rjmp	.+1250   	; 0x13dc <__stack+0x2dd>
     efa:	a7 c1       	rjmp	.+846    	; 0x124a <__stack+0x14b>
     efc:	8b 30       	cpi	r24, 0x0B	; 11
     efe:	09 f4       	brne	.+2      	; 0xf02 <SD_BUF_PRT+0xb4>
     f00:	e5 c1       	rjmp	.+970    	; 0x12cc <__stack+0x1cd>
     f02:	8b 30       	cpi	r24, 0x0B	; 11
     f04:	08 f4       	brcc	.+2      	; 0xf08 <SD_BUF_PRT+0xba>
     f06:	db c1       	rjmp	.+950    	; 0x12be <__stack+0x1bf>
     f08:	8c 30       	cpi	r24, 0x0C	; 12
     f0a:	09 f0       	breq	.+2      	; 0xf0e <SD_BUF_PRT+0xc0>
     f0c:	67 c2       	rjmp	.+1230   	; 0x13dc <__stack+0x2dd>
     f0e:	08 c2       	rjmp	.+1040   	; 0x1320 <__stack+0x221>
	{
		case  POWER_ON :					//[0] POWER ON
			sprintf(dat_buf.status, "POWER_ON\t");
     f10:	80 91 b9 09 	lds	r24, 0x09B9
     f14:	90 91 ba 09 	lds	r25, 0x09BA
     f18:	67 e1       	ldi	r22, 0x17	; 23
     f1a:	71 e0       	ldi	r23, 0x01	; 1
     f1c:	0e 94 7d 42 	call	0x84fa	; 0x84fa <strcpy>
			sprintf(dat_buf.note, "MASTER VALV_CH=%d, SLAVE DEV NUM=%d , EXT=%d, MSD=%d\t",SLA_VAL_CH[MASTER],I2C_SL_NUM,I2C_ADDR,SD_DETECTION_FLAG);
     f20:	80 91 b5 09 	lds	r24, 0x09B5
     f24:	90 91 b6 09 	lds	r25, 0x09B6
     f28:	20 91 b3 03 	lds	r18, 0x03B3
     f2c:	30 91 b4 03 	lds	r19, 0x03B4
     f30:	40 91 13 05 	lds	r20, 0x0513
     f34:	50 91 12 05 	lds	r21, 0x0512
     f38:	60 91 21 05 	lds	r22, 0x0521
     f3c:	ad b7       	in	r26, 0x3d	; 61
     f3e:	be b7       	in	r27, 0x3e	; 62
     f40:	1c 97       	sbiw	r26, 0x0c	; 12
     f42:	0f b6       	in	r0, 0x3f	; 63
     f44:	f8 94       	cli
     f46:	be bf       	out	0x3e, r27	; 62
     f48:	0f be       	out	0x3f, r0	; 63
     f4a:	ad bf       	out	0x3d, r26	; 61
     f4c:	ed b7       	in	r30, 0x3d	; 61
     f4e:	fe b7       	in	r31, 0x3e	; 62
     f50:	31 96       	adiw	r30, 0x01	; 1
     f52:	12 96       	adiw	r26, 0x02	; 2
     f54:	9c 93       	st	X, r25
     f56:	8e 93       	st	-X, r24
     f58:	11 97       	sbiw	r26, 0x01	; 1
     f5a:	81 e2       	ldi	r24, 0x21	; 33
     f5c:	91 e0       	ldi	r25, 0x01	; 1
     f5e:	93 83       	std	Z+3, r25	; 0x03
     f60:	82 83       	std	Z+2, r24	; 0x02
     f62:	35 83       	std	Z+5, r19	; 0x05
     f64:	24 83       	std	Z+4, r18	; 0x04
     f66:	46 83       	std	Z+6, r20	; 0x06
     f68:	17 82       	std	Z+7, r1	; 0x07
     f6a:	50 87       	std	Z+8, r21	; 0x08
     f6c:	11 86       	std	Z+9, r1	; 0x09
     f6e:	62 87       	std	Z+10, r22	; 0x0a
     f70:	13 86       	std	Z+11, r1	; 0x0b
     f72:	0e 94 84 42 	call	0x8508	; 0x8508 <sprintf>
			sprintf(dat_buf.pressure, "-\r\n");
     f76:	80 91 b3 09 	lds	r24, 0x09B3
     f7a:	90 91 b4 09 	lds	r25, 0x09B4
     f7e:	ed b7       	in	r30, 0x3d	; 61
     f80:	fe b7       	in	r31, 0x3e	; 62
     f82:	3c 96       	adiw	r30, 0x0c	; 12
     f84:	22 c2       	rjmp	.+1092   	; 0x13ca <__stack+0x2cb>
			break;
		case  READ_PRESSURE :				//[1] READ SENSOR VALUE
			sprintf(dat_buf.status, "READ_PRESSURE\t");
     f86:	80 91 b9 09 	lds	r24, 0x09B9
     f8a:	90 91 ba 09 	lds	r25, 0x09BA
     f8e:	6b e5       	ldi	r22, 0x5B	; 91
     f90:	71 e0       	ldi	r23, 0x01	; 1
     f92:	0e 94 7d 42 	call	0x84fa	; 0x84fa <strcpy>
			sprintf(dat_buf.note, "-\t");
     f96:	80 91 b5 09 	lds	r24, 0x09B5
     f9a:	90 91 b6 09 	lds	r25, 0x09B6
     f9e:	6a e6       	ldi	r22, 0x6A	; 106
     fa0:	71 e0       	ldi	r23, 0x01	; 1
     fa2:	0e 94 7d 42 	call	0x84fa	; 0x84fa <strcpy>
     fa6:	7f c0       	rjmp	.+254    	; 0x10a6 <SD_BUF_PRT+0x258>
			sprintf(dat_buf.pressure, "%dmmH2O\r\n",MMAQ);
			break;
		case  VALVE_OPEN :					//[2] VALVE OPERATING
			sprintf(dat_buf.status, "VALVE_OPEN\t");
     fa8:	80 91 b9 09 	lds	r24, 0x09B9
     fac:	90 91 ba 09 	lds	r25, 0x09BA
     fb0:	67 e7       	ldi	r22, 0x77	; 119
     fb2:	71 e0       	ldi	r23, 0x01	; 1
     fb4:	0e 94 7d 42 	call	0x84fa	; 0x84fa <strcpy>
			if(TIM_PULSING_FLAG)
     fb8:	80 91 1f 05 	lds	r24, 0x051F
     fbc:	88 23       	and	r24, r24
     fbe:	c9 f5       	brne	.+114    	; 0x1032 <SD_BUF_PRT+0x1e4>
				sprintf(dat_buf.note, "VALV=%d, MODE_TC\t",valve_index+1);
			else
				sprintf(dat_buf.note, "VALV=%d, %d MODE_DP\t",valve_index+1,valve_count);
     fc0:	80 91 b5 09 	lds	r24, 0x09B5
     fc4:	90 91 b6 09 	lds	r25, 0x09B6
     fc8:	20 91 11 05 	lds	r18, 0x0511
     fcc:	40 91 2f 05 	lds	r20, 0x052F
     fd0:	50 91 30 05 	lds	r21, 0x0530
     fd4:	6d b7       	in	r22, 0x3d	; 61
     fd6:	7e b7       	in	r23, 0x3e	; 62
     fd8:	68 50       	subi	r22, 0x08	; 8
     fda:	70 40       	sbci	r23, 0x00	; 0
     fdc:	0f b6       	in	r0, 0x3f	; 63
     fde:	f8 94       	cli
     fe0:	7e bf       	out	0x3e, r23	; 62
     fe2:	0f be       	out	0x3f, r0	; 63
     fe4:	6d bf       	out	0x3d, r22	; 61
     fe6:	ed b7       	in	r30, 0x3d	; 61
     fe8:	fe b7       	in	r31, 0x3e	; 62
     fea:	31 96       	adiw	r30, 0x01	; 1
     fec:	ad b7       	in	r26, 0x3d	; 61
     fee:	be b7       	in	r27, 0x3e	; 62
     ff0:	12 96       	adiw	r26, 0x02	; 2
     ff2:	9c 93       	st	X, r25
     ff4:	8e 93       	st	-X, r24
     ff6:	11 97       	sbiw	r26, 0x01	; 1
     ff8:	85 e9       	ldi	r24, 0x95	; 149
     ffa:	91 e0       	ldi	r25, 0x01	; 1
     ffc:	93 83       	std	Z+3, r25	; 0x03
     ffe:	82 83       	std	Z+2, r24	; 0x02
    1000:	30 e0       	ldi	r19, 0x00	; 0
    1002:	2f 5f       	subi	r18, 0xFF	; 255
    1004:	3f 4f       	sbci	r19, 0xFF	; 255
    1006:	35 83       	std	Z+5, r19	; 0x05
    1008:	24 83       	std	Z+4, r18	; 0x04
    100a:	57 83       	std	Z+7, r21	; 0x07
    100c:	46 83       	std	Z+6, r20	; 0x06
    100e:	0e 94 84 42 	call	0x8508	; 0x8508 <sprintf>
    1012:	ed b7       	in	r30, 0x3d	; 61
    1014:	fe b7       	in	r31, 0x3e	; 62
    1016:	38 96       	adiw	r30, 0x08	; 8
    1018:	41 c0       	rjmp	.+130    	; 0x109c <SD_BUF_PRT+0x24e>
			sprintf(dat_buf.pressure, "%dmmH2O\r\n",MMAQ);
			break;
		case  VALVE_CLOSE :					//[2] VALVE OPERATING
			sprintf(dat_buf.status, "VALVE_CLOSE\t");
    101a:	80 91 b9 09 	lds	r24, 0x09B9
    101e:	90 91 ba 09 	lds	r25, 0x09BA
    1022:	6a ea       	ldi	r22, 0xAA	; 170
    1024:	71 e0       	ldi	r23, 0x01	; 1
    1026:	0e 94 7d 42 	call	0x84fa	; 0x84fa <strcpy>
			if(TIM_PULSING_FLAG)
    102a:	80 91 1f 05 	lds	r24, 0x051F
    102e:	88 23       	and	r24, r24
    1030:	a9 f0       	breq	.+42     	; 0x105c <SD_BUF_PRT+0x20e>
				sprintf(dat_buf.note, "VALV=%d, MODE_TC\t",valve_index+1);
    1032:	80 91 b5 09 	lds	r24, 0x09B5
    1036:	90 91 b6 09 	lds	r25, 0x09B6
    103a:	20 91 11 05 	lds	r18, 0x0511
    103e:	00 d0       	rcall	.+0      	; 0x1040 <SD_BUF_PRT+0x1f2>
    1040:	00 d0       	rcall	.+0      	; 0x1042 <SD_BUF_PRT+0x1f4>
    1042:	00 d0       	rcall	.+0      	; 0x1044 <SD_BUF_PRT+0x1f6>
    1044:	ed b7       	in	r30, 0x3d	; 61
    1046:	fe b7       	in	r31, 0x3e	; 62
    1048:	31 96       	adiw	r30, 0x01	; 1
    104a:	ad b7       	in	r26, 0x3d	; 61
    104c:	be b7       	in	r27, 0x3e	; 62
    104e:	12 96       	adiw	r26, 0x02	; 2
    1050:	9c 93       	st	X, r25
    1052:	8e 93       	st	-X, r24
    1054:	11 97       	sbiw	r26, 0x01	; 1
    1056:	83 e8       	ldi	r24, 0x83	; 131
    1058:	91 e0       	ldi	r25, 0x01	; 1
    105a:	14 c0       	rjmp	.+40     	; 0x1084 <SD_BUF_PRT+0x236>
			else
				sprintf(dat_buf.note, "VALV=%d, MODE_DP\t",valve_index+1);
    105c:	80 91 b5 09 	lds	r24, 0x09B5
    1060:	90 91 b6 09 	lds	r25, 0x09B6
    1064:	20 91 11 05 	lds	r18, 0x0511
    1068:	00 d0       	rcall	.+0      	; 0x106a <SD_BUF_PRT+0x21c>
    106a:	00 d0       	rcall	.+0      	; 0x106c <SD_BUF_PRT+0x21e>
    106c:	00 d0       	rcall	.+0      	; 0x106e <SD_BUF_PRT+0x220>
    106e:	ed b7       	in	r30, 0x3d	; 61
    1070:	fe b7       	in	r31, 0x3e	; 62
    1072:	31 96       	adiw	r30, 0x01	; 1
    1074:	ad b7       	in	r26, 0x3d	; 61
    1076:	be b7       	in	r27, 0x3e	; 62
    1078:	12 96       	adiw	r26, 0x02	; 2
    107a:	9c 93       	st	X, r25
    107c:	8e 93       	st	-X, r24
    107e:	11 97       	sbiw	r26, 0x01	; 1
    1080:	87 eb       	ldi	r24, 0xB7	; 183
    1082:	91 e0       	ldi	r25, 0x01	; 1
    1084:	93 83       	std	Z+3, r25	; 0x03
    1086:	82 83       	std	Z+2, r24	; 0x02
    1088:	30 e0       	ldi	r19, 0x00	; 0
    108a:	2f 5f       	subi	r18, 0xFF	; 255
    108c:	3f 4f       	sbci	r19, 0xFF	; 255
    108e:	35 83       	std	Z+5, r19	; 0x05
    1090:	24 83       	std	Z+4, r18	; 0x04
    1092:	0e 94 84 42 	call	0x8508	; 0x8508 <sprintf>
    1096:	ed b7       	in	r30, 0x3d	; 61
    1098:	fe b7       	in	r31, 0x3e	; 62
    109a:	36 96       	adiw	r30, 0x06	; 6
    109c:	0f b6       	in	r0, 0x3f	; 63
    109e:	f8 94       	cli
    10a0:	fe bf       	out	0x3e, r31	; 62
    10a2:	0f be       	out	0x3f, r0	; 63
    10a4:	ed bf       	out	0x3d, r30	; 61
			sprintf(dat_buf.pressure, "%dmmH2O\r\n",MMAQ);
    10a6:	80 91 b3 09 	lds	r24, 0x09B3
    10aa:	90 91 b4 09 	lds	r25, 0x09B4
    10ae:	20 91 0e 05 	lds	r18, 0x050E
    10b2:	30 91 0f 05 	lds	r19, 0x050F
    10b6:	00 d0       	rcall	.+0      	; 0x10b8 <SD_BUF_PRT+0x26a>
    10b8:	00 d0       	rcall	.+0      	; 0x10ba <SD_BUF_PRT+0x26c>
    10ba:	00 d0       	rcall	.+0      	; 0x10bc <SD_BUF_PRT+0x26e>
    10bc:	ed b7       	in	r30, 0x3d	; 61
    10be:	fe b7       	in	r31, 0x3e	; 62
    10c0:	31 96       	adiw	r30, 0x01	; 1
    10c2:	ad b7       	in	r26, 0x3d	; 61
    10c4:	be b7       	in	r27, 0x3e	; 62
    10c6:	12 96       	adiw	r26, 0x02	; 2
    10c8:	9c 93       	st	X, r25
    10ca:	8e 93       	st	-X, r24
    10cc:	11 97       	sbiw	r26, 0x01	; 1
    10ce:	8d e6       	ldi	r24, 0x6D	; 109
    10d0:	91 e0       	ldi	r25, 0x01	; 1
    10d2:	93 83       	std	Z+3, r25	; 0x03
    10d4:	82 83       	std	Z+2, r24	; 0x02
    10d6:	35 83       	std	Z+5, r19	; 0x05
    10d8:	24 83       	std	Z+4, r18	; 0x04
    10da:	0e 94 84 42 	call	0x8508	; 0x8508 <sprintf>
    10de:	ed b7       	in	r30, 0x3d	; 61
    10e0:	fe b7       	in	r31, 0x3e	; 62
    10e2:	36 96       	adiw	r30, 0x06	; 6
    10e4:	0f b6       	in	r0, 0x3f	; 63
    10e6:	f8 94       	cli
    10e8:	fe bf       	out	0x3e, r31	; 62
    10ea:	0f be       	out	0x3f, r0	; 63
    10ec:	ed bf       	out	0x3d, r30	; 61
    10ee:	76 c1       	rjmp	.+748    	; 0x13dc <__stack+0x2dd>
			break;
		case  ON_TIME_RESET :
			sprintf(dat_buf.status, "ON_TIME_RESET\t");
    10f0:	80 91 b9 09 	lds	r24, 0x09B9
    10f4:	90 91 ba 09 	lds	r25, 0x09BA
    10f8:	69 ec       	ldi	r22, 0xC9	; 201
    10fa:	71 e0       	ldi	r23, 0x01	; 1
    10fc:	0e 94 7d 42 	call	0x84fa	; 0x84fa <strcpy>
			sprintf(dat_buf.note, "ON_TIME_VALUE = %dmsec\t",ON_TIME);
    1100:	80 91 b5 09 	lds	r24, 0x09B5
    1104:	90 91 b6 09 	lds	r25, 0x09B6
    1108:	20 91 d6 03 	lds	r18, 0x03D6
    110c:	30 91 d7 03 	lds	r19, 0x03D7
    1110:	00 d0       	rcall	.+0      	; 0x1112 <__stack+0x13>
    1112:	00 d0       	rcall	.+0      	; 0x1114 <__stack+0x15>
    1114:	00 d0       	rcall	.+0      	; 0x1116 <__stack+0x17>
    1116:	ed b7       	in	r30, 0x3d	; 61
    1118:	fe b7       	in	r31, 0x3e	; 62
    111a:	31 96       	adiw	r30, 0x01	; 1
    111c:	ad b7       	in	r26, 0x3d	; 61
    111e:	be b7       	in	r27, 0x3e	; 62
    1120:	12 96       	adiw	r26, 0x02	; 2
    1122:	9c 93       	st	X, r25
    1124:	8e 93       	st	-X, r24
    1126:	11 97       	sbiw	r26, 0x01	; 1
    1128:	88 ed       	ldi	r24, 0xD8	; 216
    112a:	91 e0       	ldi	r25, 0x01	; 1
    112c:	3d c0       	rjmp	.+122    	; 0x11a8 <__stack+0xa9>
			sprintf(dat_buf.pressure, "-\r\n");
			break;
		case  OFF_TIME_RESET :
			sprintf(dat_buf.status, "OFF_TIME_RESET\t");
    112e:	80 91 b9 09 	lds	r24, 0x09B9
    1132:	90 91 ba 09 	lds	r25, 0x09BA
    1136:	60 ef       	ldi	r22, 0xF0	; 240
    1138:	71 e0       	ldi	r23, 0x01	; 1
    113a:	0e 94 7d 42 	call	0x84fa	; 0x84fa <strcpy>
			sprintf(dat_buf.note, "OFF_TIME_VALUE = %dsec\t",OFF_TIME);
    113e:	80 91 b5 09 	lds	r24, 0x09B5
    1142:	90 91 b6 09 	lds	r25, 0x09B6
    1146:	20 91 d8 03 	lds	r18, 0x03D8
    114a:	30 91 d9 03 	lds	r19, 0x03D9
    114e:	00 d0       	rcall	.+0      	; 0x1150 <__stack+0x51>
    1150:	00 d0       	rcall	.+0      	; 0x1152 <__stack+0x53>
    1152:	00 d0       	rcall	.+0      	; 0x1154 <__stack+0x55>
    1154:	ed b7       	in	r30, 0x3d	; 61
    1156:	fe b7       	in	r31, 0x3e	; 62
    1158:	31 96       	adiw	r30, 0x01	; 1
    115a:	ad b7       	in	r26, 0x3d	; 61
    115c:	be b7       	in	r27, 0x3e	; 62
    115e:	12 96       	adiw	r26, 0x02	; 2
    1160:	9c 93       	st	X, r25
    1162:	8e 93       	st	-X, r24
    1164:	11 97       	sbiw	r26, 0x01	; 1
    1166:	80 e0       	ldi	r24, 0x00	; 0
    1168:	92 e0       	ldi	r25, 0x02	; 2
    116a:	1e c0       	rjmp	.+60     	; 0x11a8 <__stack+0xa9>
			sprintf(dat_buf.pressure, "-\r\n");
			break;
		case  VALVE_CH_RESET :
			sprintf(dat_buf.status, "VALVE_CH_RESET\t");
    116c:	80 91 b9 09 	lds	r24, 0x09B9
    1170:	90 91 ba 09 	lds	r25, 0x09BA
    1174:	68 e1       	ldi	r22, 0x18	; 24
    1176:	72 e0       	ldi	r23, 0x02	; 2
    1178:	0e 94 7d 42 	call	0x84fa	; 0x84fa <strcpy>
			sprintf(dat_buf.note, "VALVE_CH_SET_VALUE=%d\t",SLA_VAL_CH[MASTER]);
    117c:	80 91 b5 09 	lds	r24, 0x09B5
    1180:	90 91 b6 09 	lds	r25, 0x09B6
    1184:	20 91 b3 03 	lds	r18, 0x03B3
    1188:	30 91 b4 03 	lds	r19, 0x03B4
    118c:	00 d0       	rcall	.+0      	; 0x118e <__stack+0x8f>
    118e:	00 d0       	rcall	.+0      	; 0x1190 <__stack+0x91>
    1190:	00 d0       	rcall	.+0      	; 0x1192 <__stack+0x93>
    1192:	ed b7       	in	r30, 0x3d	; 61
    1194:	fe b7       	in	r31, 0x3e	; 62
    1196:	31 96       	adiw	r30, 0x01	; 1
    1198:	ad b7       	in	r26, 0x3d	; 61
    119a:	be b7       	in	r27, 0x3e	; 62
    119c:	12 96       	adiw	r26, 0x02	; 2
    119e:	9c 93       	st	X, r25
    11a0:	8e 93       	st	-X, r24
    11a2:	11 97       	sbiw	r26, 0x01	; 1
    11a4:	88 e2       	ldi	r24, 0x28	; 40
    11a6:	92 e0       	ldi	r25, 0x02	; 2
    11a8:	93 83       	std	Z+3, r25	; 0x03
    11aa:	82 83       	std	Z+2, r24	; 0x02
    11ac:	35 83       	std	Z+5, r19	; 0x05
    11ae:	24 83       	std	Z+4, r18	; 0x04
    11b0:	ad c0       	rjmp	.+346    	; 0x130c <__stack+0x20d>
			sprintf(dat_buf.pressure, "-\r\n");
			break;

		case  SLAVE_CH_RESET :
			sprintf(dat_buf.status, "VALVE_CH_RESET\t");
    11b2:	80 91 b9 09 	lds	r24, 0x09B9
    11b6:	90 91 ba 09 	lds	r25, 0x09BA
    11ba:	68 e1       	ldi	r22, 0x18	; 24
    11bc:	72 e0       	ldi	r23, 0x02	; 2
    11be:	0e 94 7d 42 	call	0x84fa	; 0x84fa <strcpy>
    11c2:	c0 e0       	ldi	r28, 0x00	; 0
    11c4:	d0 e0       	ldi	r29, 0x00	; 0
			for ( int i = 0 ; i < 17 ; i++)
			{
				if (SLAVE_ADDR_CHECK & 1<<(i))
    11c6:	91 e0       	ldi	r25, 0x01	; 1
    11c8:	e9 2e       	mov	r14, r25
    11ca:	f1 2c       	mov	r15, r1
				{
					sprintf(dat_buf.note, "SLAVE_VALVE_CH_SET_VALUE=%d\t",SLA_VAL_CH[i+1]);
    11cc:	0f e3       	ldi	r16, 0x3F	; 63
    11ce:	12 e0       	ldi	r17, 0x02	; 2

		case  SLAVE_CH_RESET :
			sprintf(dat_buf.status, "VALVE_CH_RESET\t");
			for ( int i = 0 ; i < 17 ; i++)
			{
				if (SLAVE_ADDR_CHECK & 1<<(i))
    11d0:	20 91 b1 09 	lds	r18, 0x09B1
    11d4:	30 91 b2 09 	lds	r19, 0x09B2
    11d8:	c7 01       	movw	r24, r14
    11da:	0c 2e       	mov	r0, r28
    11dc:	02 c0       	rjmp	.+4      	; 0x11e2 <__stack+0xe3>
    11de:	88 0f       	add	r24, r24
    11e0:	99 1f       	adc	r25, r25
    11e2:	0a 94       	dec	r0
    11e4:	e2 f7       	brpl	.-8      	; 0x11de <__stack+0xdf>
    11e6:	82 23       	and	r24, r18
    11e8:	93 23       	and	r25, r19
    11ea:	89 2b       	or	r24, r25
    11ec:	29 f1       	breq	.+74     	; 0x1238 <__stack+0x139>
				{
					sprintf(dat_buf.note, "SLAVE_VALVE_CH_SET_VALUE=%d\t",SLA_VAL_CH[i+1]);
    11ee:	20 91 b5 09 	lds	r18, 0x09B5
    11f2:	30 91 b6 09 	lds	r19, 0x09B6
    11f6:	fe 01       	movw	r30, r28
    11f8:	ee 0f       	add	r30, r30
    11fa:	ff 1f       	adc	r31, r31
    11fc:	eb 54       	subi	r30, 0x4B	; 75
    11fe:	fc 4f       	sbci	r31, 0xFC	; 252
    1200:	80 81       	ld	r24, Z
    1202:	91 81       	ldd	r25, Z+1	; 0x01
    1204:	00 d0       	rcall	.+0      	; 0x1206 <__stack+0x107>
    1206:	00 d0       	rcall	.+0      	; 0x1208 <__stack+0x109>
    1208:	00 d0       	rcall	.+0      	; 0x120a <__stack+0x10b>
    120a:	ed b7       	in	r30, 0x3d	; 61
    120c:	fe b7       	in	r31, 0x3e	; 62
    120e:	31 96       	adiw	r30, 0x01	; 1
    1210:	ad b7       	in	r26, 0x3d	; 61
    1212:	be b7       	in	r27, 0x3e	; 62
    1214:	12 96       	adiw	r26, 0x02	; 2
    1216:	3c 93       	st	X, r19
    1218:	2e 93       	st	-X, r18
    121a:	11 97       	sbiw	r26, 0x01	; 1
    121c:	13 83       	std	Z+3, r17	; 0x03
    121e:	02 83       	std	Z+2, r16	; 0x02
    1220:	95 83       	std	Z+5, r25	; 0x05
    1222:	84 83       	std	Z+4, r24	; 0x04
    1224:	0e 94 84 42 	call	0x8508	; 0x8508 <sprintf>
    1228:	ed b7       	in	r30, 0x3d	; 61
    122a:	fe b7       	in	r31, 0x3e	; 62
    122c:	36 96       	adiw	r30, 0x06	; 6
    122e:	0f b6       	in	r0, 0x3f	; 63
    1230:	f8 94       	cli
    1232:	fe bf       	out	0x3e, r31	; 62
    1234:	0f be       	out	0x3f, r0	; 63
    1236:	ed bf       	out	0x3d, r30	; 61
			sprintf(dat_buf.pressure, "-\r\n");
			break;

		case  SLAVE_CH_RESET :
			sprintf(dat_buf.status, "VALVE_CH_RESET\t");
			for ( int i = 0 ; i < 17 ; i++)
    1238:	21 96       	adiw	r28, 0x01	; 1
    123a:	c1 31       	cpi	r28, 0x11	; 17
    123c:	d1 05       	cpc	r29, r1
    123e:	41 f6       	brne	.-112    	; 0x11d0 <__stack+0xd1>
				if (SLAVE_ADDR_CHECK & 1<<(i))
				{
					sprintf(dat_buf.note, "SLAVE_VALVE_CH_SET_VALUE=%d\t",SLA_VAL_CH[i+1]);
				}
			}
			sprintf(dat_buf.pressure, "-\r\n");
    1240:	80 91 b3 09 	lds	r24, 0x09B3
    1244:	90 91 b4 09 	lds	r25, 0x09B4
    1248:	c5 c0       	rjmp	.+394    	; 0x13d4 <__stack+0x2d5>
			break; 
		case  START_POINT_RESET :
			sprintf(dat_buf.status, "OP_START_POINT_RESET\t");
    124a:	80 91 b9 09 	lds	r24, 0x09B9
    124e:	90 91 ba 09 	lds	r25, 0x09BA
    1252:	6c e5       	ldi	r22, 0x5C	; 92
    1254:	72 e0       	ldi	r23, 0x02	; 2
    1256:	0e 94 7d 42 	call	0x84fa	; 0x84fa <strcpy>
			sprintf(dat_buf.note, "OP_START_VALUE=%dmmH2O\t",START_OP_POINT);
    125a:	80 91 b5 09 	lds	r24, 0x09B5
    125e:	90 91 b6 09 	lds	r25, 0x09B6
    1262:	20 91 de 03 	lds	r18, 0x03DE
    1266:	00 d0       	rcall	.+0      	; 0x1268 <__stack+0x169>
    1268:	00 d0       	rcall	.+0      	; 0x126a <__stack+0x16b>
    126a:	00 d0       	rcall	.+0      	; 0x126c <__stack+0x16d>
    126c:	ed b7       	in	r30, 0x3d	; 61
    126e:	fe b7       	in	r31, 0x3e	; 62
    1270:	31 96       	adiw	r30, 0x01	; 1
    1272:	ad b7       	in	r26, 0x3d	; 61
    1274:	be b7       	in	r27, 0x3e	; 62
    1276:	12 96       	adiw	r26, 0x02	; 2
    1278:	9c 93       	st	X, r25
    127a:	8e 93       	st	-X, r24
    127c:	11 97       	sbiw	r26, 0x01	; 1
    127e:	82 e7       	ldi	r24, 0x72	; 114
    1280:	92 e0       	ldi	r25, 0x02	; 2
    1282:	40 c0       	rjmp	.+128    	; 0x1304 <__stack+0x205>
			sprintf(dat_buf.pressure, "-\r\n");
			break;
		case  STOP_POINT_RESET :
			sprintf(dat_buf.status, "OP_STOP_POINT_RESET\t");
    1284:	80 91 b9 09 	lds	r24, 0x09B9
    1288:	90 91 ba 09 	lds	r25, 0x09BA
    128c:	6a e8       	ldi	r22, 0x8A	; 138
    128e:	72 e0       	ldi	r23, 0x02	; 2
    1290:	0e 94 7d 42 	call	0x84fa	; 0x84fa <strcpy>
			sprintf(dat_buf.note, "OP_STOP_VALUE=%dmmH2O\t",STOP_OP_POINT);
    1294:	80 91 b5 09 	lds	r24, 0x09B5
    1298:	90 91 b6 09 	lds	r25, 0x09B6
    129c:	20 91 df 03 	lds	r18, 0x03DF
    12a0:	00 d0       	rcall	.+0      	; 0x12a2 <__stack+0x1a3>
    12a2:	00 d0       	rcall	.+0      	; 0x12a4 <__stack+0x1a5>
    12a4:	00 d0       	rcall	.+0      	; 0x12a6 <__stack+0x1a7>
    12a6:	ed b7       	in	r30, 0x3d	; 61
    12a8:	fe b7       	in	r31, 0x3e	; 62
    12aa:	31 96       	adiw	r30, 0x01	; 1
    12ac:	ad b7       	in	r26, 0x3d	; 61
    12ae:	be b7       	in	r27, 0x3e	; 62
    12b0:	12 96       	adiw	r26, 0x02	; 2
    12b2:	9c 93       	st	X, r25
    12b4:	8e 93       	st	-X, r24
    12b6:	11 97       	sbiw	r26, 0x01	; 1
    12b8:	8f e9       	ldi	r24, 0x9F	; 159
    12ba:	92 e0       	ldi	r25, 0x02	; 2
    12bc:	23 c0       	rjmp	.+70     	; 0x1304 <__stack+0x205>
			sprintf(dat_buf.pressure, "-\r\n");
			break;
		case  MSD_DETECTION :
			sprintf(dat_buf.status, "MSD_DETECTION\t");
    12be:	80 91 b9 09 	lds	r24, 0x09B9
    12c2:	90 91 ba 09 	lds	r25, 0x09BA
    12c6:	66 eb       	ldi	r22, 0xB6	; 182
    12c8:	72 e0       	ldi	r23, 0x02	; 2
    12ca:	06 c0       	rjmp	.+12     	; 0x12d8 <__stack+0x1d9>
			sprintf(dat_buf.note, "MSD=%d\t",SD_DETECTION_FLAG);
			sprintf(dat_buf.pressure, "-\r\n");
			break;
		case  MSD_NON_DETECTION :
			sprintf(dat_buf.status, "MSD_DETECTION_FAIL\t");
    12cc:	80 91 b9 09 	lds	r24, 0x09B9
    12d0:	90 91 ba 09 	lds	r25, 0x09BA
    12d4:	6d ec       	ldi	r22, 0xCD	; 205
    12d6:	72 e0       	ldi	r23, 0x02	; 2
    12d8:	0e 94 7d 42 	call	0x84fa	; 0x84fa <strcpy>
			sprintf(dat_buf.note, "MSD=%d\t",SD_DETECTION_FLAG);
    12dc:	80 91 b5 09 	lds	r24, 0x09B5
    12e0:	90 91 b6 09 	lds	r25, 0x09B6
    12e4:	20 91 21 05 	lds	r18, 0x0521
    12e8:	00 d0       	rcall	.+0      	; 0x12ea <__stack+0x1eb>
    12ea:	00 d0       	rcall	.+0      	; 0x12ec <__stack+0x1ed>
    12ec:	00 d0       	rcall	.+0      	; 0x12ee <__stack+0x1ef>
    12ee:	ed b7       	in	r30, 0x3d	; 61
    12f0:	fe b7       	in	r31, 0x3e	; 62
    12f2:	31 96       	adiw	r30, 0x01	; 1
    12f4:	ad b7       	in	r26, 0x3d	; 61
    12f6:	be b7       	in	r27, 0x3e	; 62
    12f8:	12 96       	adiw	r26, 0x02	; 2
    12fa:	9c 93       	st	X, r25
    12fc:	8e 93       	st	-X, r24
    12fe:	11 97       	sbiw	r26, 0x01	; 1
    1300:	85 ec       	ldi	r24, 0xC5	; 197
    1302:	92 e0       	ldi	r25, 0x02	; 2
    1304:	93 83       	std	Z+3, r25	; 0x03
    1306:	82 83       	std	Z+2, r24	; 0x02
    1308:	24 83       	std	Z+4, r18	; 0x04
    130a:	15 82       	std	Z+5, r1	; 0x05
    130c:	0e 94 84 42 	call	0x8508	; 0x8508 <sprintf>
			sprintf(dat_buf.pressure, "-\r\n");
    1310:	80 91 b3 09 	lds	r24, 0x09B3
    1314:	90 91 b4 09 	lds	r25, 0x09B4
    1318:	ed b7       	in	r30, 0x3d	; 61
    131a:	fe b7       	in	r31, 0x3e	; 62
    131c:	36 96       	adiw	r30, 0x06	; 6
    131e:	55 c0       	rjmp	.+170    	; 0x13ca <__stack+0x2cb>
			break;
		case NEW_FILE_OPEN :
			sprintf(dat_buf.status, "NEW_FILE_CREATED\t");
    1320:	80 91 b9 09 	lds	r24, 0x09B9
    1324:	90 91 ba 09 	lds	r25, 0x09BA
    1328:	61 ee       	ldi	r22, 0xE1	; 225
    132a:	72 e0       	ldi	r23, 0x02	; 2
    132c:	0e 94 7d 42 	call	0x84fa	; 0x84fa <strcpy>
    1330:	40 e0       	ldi	r20, 0x00	; 0
    1332:	50 e0       	ldi	r21, 0x00	; 0
			//sprintf(dat_buf.note, "VALV_CH=%d, EXT=%d, MSD=%d\t",VALVE_CH,I2C_ADDR,SD_DETECTION_FLAG);
			for ( int i = 0 ; i < 17 ; i ++)
			{
				TOTAL_VALVE += SLA_VAL_CH[i];
    1334:	80 91 06 05 	lds	r24, 0x0506
    1338:	90 91 07 05 	lds	r25, 0x0507
    133c:	fa 01       	movw	r30, r20
    133e:	ee 0f       	add	r30, r30
    1340:	ff 1f       	adc	r31, r31
    1342:	ed 54       	subi	r30, 0x4D	; 77
    1344:	fc 4f       	sbci	r31, 0xFC	; 252
    1346:	20 81       	ld	r18, Z
    1348:	31 81       	ldd	r19, Z+1	; 0x01
    134a:	28 0f       	add	r18, r24
    134c:	39 1f       	adc	r19, r25
    134e:	30 93 07 05 	sts	0x0507, r19
    1352:	20 93 06 05 	sts	0x0506, r18
			sprintf(dat_buf.pressure, "-\r\n");
			break;
		case NEW_FILE_OPEN :
			sprintf(dat_buf.status, "NEW_FILE_CREATED\t");
			//sprintf(dat_buf.note, "VALV_CH=%d, EXT=%d, MSD=%d\t",VALVE_CH,I2C_ADDR,SD_DETECTION_FLAG);
			for ( int i = 0 ; i < 17 ; i ++)
    1356:	4f 5f       	subi	r20, 0xFF	; 255
    1358:	5f 4f       	sbci	r21, 0xFF	; 255
    135a:	41 31       	cpi	r20, 0x11	; 17
    135c:	51 05       	cpc	r21, r1
    135e:	51 f7       	brne	.-44     	; 0x1334 <__stack+0x235>
			{
				TOTAL_VALVE += SLA_VAL_CH[i];
			}
			sprintf(dat_buf.note, "VALV_CH=%d, EXT=%d, MSD=%d\t",TOTAL_VALVE,I2C_ADDR,SD_DETECTION_FLAG);
    1360:	80 91 b5 09 	lds	r24, 0x09B5
    1364:	90 91 b6 09 	lds	r25, 0x09B6
    1368:	20 91 06 05 	lds	r18, 0x0506
    136c:	30 91 07 05 	lds	r19, 0x0507
    1370:	40 91 12 05 	lds	r20, 0x0512
    1374:	50 91 21 05 	lds	r21, 0x0521
    1378:	6d b7       	in	r22, 0x3d	; 61
    137a:	7e b7       	in	r23, 0x3e	; 62
    137c:	6a 50       	subi	r22, 0x0A	; 10
    137e:	70 40       	sbci	r23, 0x00	; 0
    1380:	0f b6       	in	r0, 0x3f	; 63
    1382:	f8 94       	cli
    1384:	7e bf       	out	0x3e, r23	; 62
    1386:	0f be       	out	0x3f, r0	; 63
    1388:	6d bf       	out	0x3d, r22	; 61
    138a:	ed b7       	in	r30, 0x3d	; 61
    138c:	fe b7       	in	r31, 0x3e	; 62
    138e:	31 96       	adiw	r30, 0x01	; 1
    1390:	ad b7       	in	r26, 0x3d	; 61
    1392:	be b7       	in	r27, 0x3e	; 62
    1394:	12 96       	adiw	r26, 0x02	; 2
    1396:	9c 93       	st	X, r25
    1398:	8e 93       	st	-X, r24
    139a:	11 97       	sbiw	r26, 0x01	; 1
    139c:	83 ef       	ldi	r24, 0xF3	; 243
    139e:	92 e0       	ldi	r25, 0x02	; 2
    13a0:	93 83       	std	Z+3, r25	; 0x03
    13a2:	82 83       	std	Z+2, r24	; 0x02
    13a4:	35 83       	std	Z+5, r19	; 0x05
    13a6:	24 83       	std	Z+4, r18	; 0x04
    13a8:	46 83       	std	Z+6, r20	; 0x06
    13aa:	17 82       	std	Z+7, r1	; 0x07
    13ac:	50 87       	std	Z+8, r21	; 0x08
    13ae:	11 86       	std	Z+9, r1	; 0x09
    13b0:	0e 94 84 42 	call	0x8508	; 0x8508 <sprintf>
			TOTAL_VALVE = 0;
    13b4:	10 92 07 05 	sts	0x0507, r1
    13b8:	10 92 06 05 	sts	0x0506, r1
			sprintf(dat_buf.pressure, "-\r\n");
    13bc:	80 91 b3 09 	lds	r24, 0x09B3
    13c0:	90 91 b4 09 	lds	r25, 0x09B4
    13c4:	ed b7       	in	r30, 0x3d	; 61
    13c6:	fe b7       	in	r31, 0x3e	; 62
    13c8:	3a 96       	adiw	r30, 0x0a	; 10
    13ca:	0f b6       	in	r0, 0x3f	; 63
    13cc:	f8 94       	cli
    13ce:	fe bf       	out	0x3e, r31	; 62
    13d0:	0f be       	out	0x3f, r0	; 63
    13d2:	ed bf       	out	0x3d, r30	; 61
    13d4:	67 e5       	ldi	r22, 0x57	; 87
    13d6:	71 e0       	ldi	r23, 0x01	; 1
    13d8:	0e 94 7d 42 	call	0x84fa	; 0x84fa <strcpy>
			
			break;
	}


}
    13dc:	df 91       	pop	r29
    13de:	cf 91       	pop	r28
    13e0:	1f 91       	pop	r17
    13e2:	0f 91       	pop	r16
    13e4:	ff 90       	pop	r15
    13e6:	ef 90       	pop	r14
    13e8:	08 95       	ret

000013ea <SDWR_OP>:
/////////////////////////////////////////////////////////////////////////
unsigned char SDWR_OP(void)
{
    13ea:	0f 93       	push	r16
    13ec:	1f 93       	push	r17
    13ee:	df 93       	push	r29
    13f0:	cf 93       	push	r28
    13f2:	00 d0       	rcall	.+0      	; 0x13f4 <SDWR_OP+0xa>
    13f4:	cd b7       	in	r28, 0x3d	; 61
    13f6:	de b7       	in	r29, 0x3e	; 62
	unsigned int bw;
	SD_WRITTING_FLAG = 1;
    13f8:	81 e0       	ldi	r24, 0x01	; 1
    13fa:	90 e0       	ldi	r25, 0x00	; 0
    13fc:	90 93 2e 05 	sts	0x052E, r25
    1400:	80 93 2d 05 	sts	0x052D, r24
	TIM_SDWR_FLAG = 0;
    1404:	10 92 1e 05 	sts	0x051E, r1

	SD_BUF_PRT();
    1408:	0e 94 27 07 	call	0xe4e	; 0xe4e <SD_BUF_PRT>
	cli();	
    140c:	f8 94       	cli
	fr = f_write(&fo,dat_buf.tim,strlen(dat_buf.tim),&bw);
    140e:	60 91 b7 09 	lds	r22, 0x09B7
    1412:	70 91 b8 09 	lds	r23, 0x09B8
    1416:	80 91 b7 09 	lds	r24, 0x09B7
    141a:	90 91 b8 09 	lds	r25, 0x09B8
    141e:	dc 01       	movw	r26, r24
    1420:	0d 90       	ld	r0, X+
    1422:	00 20       	and	r0, r0
    1424:	e9 f7       	brne	.-6      	; 0x1420 <SDWR_OP+0x36>
    1426:	11 97       	sbiw	r26, 0x01	; 1
    1428:	a8 1b       	sub	r26, r24
    142a:	b9 0b       	sbc	r27, r25
    142c:	8f e8       	ldi	r24, 0x8F	; 143
    142e:	97 e0       	ldi	r25, 0x07	; 7
    1430:	ad 01       	movw	r20, r26
    1432:	8e 01       	movw	r16, r28
    1434:	0f 5f       	subi	r16, 0xFF	; 255
    1436:	1f 4f       	sbci	r17, 0xFF	; 255
    1438:	98 01       	movw	r18, r16
    143a:	0e 94 f9 29 	call	0x53f2	; 0x53f2 <f_write>
    143e:	80 93 8e 07 	sts	0x078E, r24
	fr = f_write(&fo,dat_buf.status,strlen(dat_buf.status),&bw);
    1442:	60 91 b9 09 	lds	r22, 0x09B9
    1446:	70 91 ba 09 	lds	r23, 0x09BA
    144a:	80 91 b9 09 	lds	r24, 0x09B9
    144e:	90 91 ba 09 	lds	r25, 0x09BA
    1452:	dc 01       	movw	r26, r24
    1454:	0d 90       	ld	r0, X+
    1456:	00 20       	and	r0, r0
    1458:	e9 f7       	brne	.-6      	; 0x1454 <SDWR_OP+0x6a>
    145a:	11 97       	sbiw	r26, 0x01	; 1
    145c:	a8 1b       	sub	r26, r24
    145e:	b9 0b       	sbc	r27, r25
    1460:	8f e8       	ldi	r24, 0x8F	; 143
    1462:	97 e0       	ldi	r25, 0x07	; 7
    1464:	ad 01       	movw	r20, r26
    1466:	98 01       	movw	r18, r16
    1468:	0e 94 f9 29 	call	0x53f2	; 0x53f2 <f_write>
    146c:	80 93 8e 07 	sts	0x078E, r24
	fr = f_write(&fo,dat_buf.note,strlen(dat_buf.note),&bw);
    1470:	60 91 b5 09 	lds	r22, 0x09B5
    1474:	70 91 b6 09 	lds	r23, 0x09B6
    1478:	80 91 b5 09 	lds	r24, 0x09B5
    147c:	90 91 b6 09 	lds	r25, 0x09B6
    1480:	dc 01       	movw	r26, r24
    1482:	0d 90       	ld	r0, X+
    1484:	00 20       	and	r0, r0
    1486:	e9 f7       	brne	.-6      	; 0x1482 <SDWR_OP+0x98>
    1488:	11 97       	sbiw	r26, 0x01	; 1
    148a:	a8 1b       	sub	r26, r24
    148c:	b9 0b       	sbc	r27, r25
    148e:	8f e8       	ldi	r24, 0x8F	; 143
    1490:	97 e0       	ldi	r25, 0x07	; 7
    1492:	ad 01       	movw	r20, r26
    1494:	98 01       	movw	r18, r16
    1496:	0e 94 f9 29 	call	0x53f2	; 0x53f2 <f_write>
    149a:	80 93 8e 07 	sts	0x078E, r24
	fr = f_write(&fo,dat_buf.pressure,strlen(dat_buf.pressure),&bw);
    149e:	60 91 b3 09 	lds	r22, 0x09B3
    14a2:	70 91 b4 09 	lds	r23, 0x09B4
    14a6:	80 91 b3 09 	lds	r24, 0x09B3
    14aa:	90 91 b4 09 	lds	r25, 0x09B4
    14ae:	dc 01       	movw	r26, r24
    14b0:	0d 90       	ld	r0, X+
    14b2:	00 20       	and	r0, r0
    14b4:	e9 f7       	brne	.-6      	; 0x14b0 <SDWR_OP+0xc6>
    14b6:	11 97       	sbiw	r26, 0x01	; 1
    14b8:	a8 1b       	sub	r26, r24
    14ba:	b9 0b       	sbc	r27, r25
    14bc:	8f e8       	ldi	r24, 0x8F	; 143
    14be:	97 e0       	ldi	r25, 0x07	; 7
    14c0:	ad 01       	movw	r20, r26
    14c2:	98 01       	movw	r18, r16
    14c4:	0e 94 f9 29 	call	0x53f2	; 0x53f2 <f_write>
    14c8:	80 93 8e 07 	sts	0x078E, r24
	fr = f_sync(&fo);
    14cc:	8f e8       	ldi	r24, 0x8F	; 143
    14ce:	97 e0       	ldi	r25, 0x07	; 7
    14d0:	0e 94 57 35 	call	0x6aae	; 0x6aae <f_sync>
    14d4:	80 93 8e 07 	sts	0x078E, r24
	SD_WRITTING_FLAG  = 0;
    14d8:	10 92 2e 05 	sts	0x052E, r1
    14dc:	10 92 2d 05 	sts	0x052D, r1
	
	sei();
    14e0:	78 94       	sei
    14e2:	90 e0       	ldi	r25, 0x00	; 0
    14e4:	88 23       	and	r24, r24
    14e6:	09 f4       	brne	.+2      	; 0x14ea <SDWR_OP+0x100>
    14e8:	91 e0       	ldi	r25, 0x01	; 1
	if(fr == FR_OK)
		return 1;
	else
		return 0;
}
    14ea:	89 2f       	mov	r24, r25
    14ec:	0f 90       	pop	r0
    14ee:	0f 90       	pop	r0
    14f0:	cf 91       	pop	r28
    14f2:	df 91       	pop	r29
    14f4:	1f 91       	pop	r17
    14f6:	0f 91       	pop	r16
    14f8:	08 95       	ret

000014fa <SYS_INIT>:
        TWCR = 0xc4;
}

/////////////////////////////////////////////////////////////////////////
void SYS_INIT(void)
{
    14fa:	0f 93       	push	r16
    14fc:	1f 93       	push	r17
    14fe:	cf 93       	push	r28
    1500:	df 93       	push	r29
   unsigned int index=0;
    
    cli();
    1502:	f8 94       	cli
    IO_INIT();
    1504:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <IO_INIT>
    PORTG = 0x18;
}
/////////////////////////////////////////////////////////////////////////
void INT_INIT(void)
{
    EICRB = 0xAA;
    1508:	8a ea       	ldi	r24, 0xAA	; 170
    150a:	8a bf       	out	0x3a, r24	; 58
    EIMSK = 0xF0;
    150c:	80 ef       	ldi	r24, 0xF0	; 240
    150e:	89 bf       	out	0x39, r24	; 57
}
/////////////////////////////////////////////////////////////////////////
void ADC_INIT(void)
{
    ADMUX = 0x2f;   //아트메가 differential 사용
    1510:	8f e2       	ldi	r24, 0x2F	; 47
    1512:	87 b9       	out	0x07, r24	; 7
    //ADMUX = 0x00;  
    ADCSRA = (1<<ADEN)|(1<<ADIE)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
    1514:	8f e8       	ldi	r24, 0x8F	; 143
    1516:	86 b9       	out	0x06, r24	; 6
}

/////////////////////////////////////////////////////////////////////////
void TIM_INIT(void)
{
    OCR2 = 25;
    1518:	89 e1       	ldi	r24, 0x19	; 25
    151a:	83 bd       	out	0x23, r24	; 35
    TIMSK = (1<<OCIE2);
    151c:	80 e8       	ldi	r24, 0x80	; 128
    151e:	87 bf       	out	0x37, r24	; 55
    TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);
    1520:	8d e0       	ldi	r24, 0x0D	; 13
    1522:	85 bd       	out	0x25, r24	; 37
}
/////////////////////////////////////////////////////////////////////////

void TWI_INIT(void)
{
	TWBR = 0x72;
    1524:	82 e7       	ldi	r24, 0x72	; 114
    1526:	80 93 70 00 	sts	0x0070, r24
	TWSR = 0x00;
    152a:	10 92 71 00 	sts	0x0071, r1
    INT_INIT();
    ADC_INIT();
    TIM_INIT();
	TWI_INIT();

	dat_buf.pressure = (char*)malloc(sizeof(char)*10);
    152e:	8a e0       	ldi	r24, 0x0A	; 10
    1530:	90 e0       	ldi	r25, 0x00	; 0
    1532:	0e 94 78 41 	call	0x82f0	; 0x82f0 <malloc>
    1536:	90 93 b4 09 	sts	0x09B4, r25
    153a:	80 93 b3 09 	sts	0x09B3, r24
	dat_buf.tim = (char*)malloc(sizeof(char)*20);
    153e:	84 e1       	ldi	r24, 0x14	; 20
    1540:	90 e0       	ldi	r25, 0x00	; 0
    1542:	0e 94 78 41 	call	0x82f0	; 0x82f0 <malloc>
    1546:	90 93 b8 09 	sts	0x09B8, r25
    154a:	80 93 b7 09 	sts	0x09B7, r24
	dat_buf.status = (char*)malloc(sizeof(char)*30);
    154e:	8e e1       	ldi	r24, 0x1E	; 30
    1550:	90 e0       	ldi	r25, 0x00	; 0
    1552:	0e 94 78 41 	call	0x82f0	; 0x82f0 <malloc>
    1556:	90 93 ba 09 	sts	0x09BA, r25
    155a:	80 93 b9 09 	sts	0x09B9, r24
	dat_buf.note = (char*)malloc(sizeof(char)*20);
    155e:	84 e1       	ldi	r24, 0x14	; 20
    1560:	90 e0       	ldi	r25, 0x00	; 0
    1562:	0e 94 78 41 	call	0x82f0	; 0x82f0 <malloc>
    1566:	90 93 b6 09 	sts	0x09B6, r25
    156a:	80 93 b5 09 	sts	0x09B5, r24
	sprintf(dat_buf.note,"%d개\r\n",VALVE_CH);
    156e:	80 91 b5 09 	lds	r24, 0x09B5
    1572:	90 91 b6 09 	lds	r25, 0x09B6
    1576:	20 91 d5 03 	lds	r18, 0x03D5
    157a:	00 d0       	rcall	.+0      	; 0x157c <SYS_INIT+0x82>
    157c:	00 d0       	rcall	.+0      	; 0x157e <SYS_INIT+0x84>
    157e:	00 d0       	rcall	.+0      	; 0x1580 <SYS_INIT+0x86>
    1580:	ed b7       	in	r30, 0x3d	; 61
    1582:	fe b7       	in	r31, 0x3e	; 62
    1584:	31 96       	adiw	r30, 0x01	; 1
    1586:	ad b7       	in	r26, 0x3d	; 61
    1588:	be b7       	in	r27, 0x3e	; 62
    158a:	12 96       	adiw	r26, 0x02	; 2
    158c:	9c 93       	st	X, r25
    158e:	8e 93       	st	-X, r24
    1590:	11 97       	sbiw	r26, 0x01	; 1
    1592:	8f e0       	ldi	r24, 0x0F	; 15
    1594:	93 e0       	ldi	r25, 0x03	; 3
    1596:	93 83       	std	Z+3, r25	; 0x03
    1598:	82 83       	std	Z+2, r24	; 0x02
    159a:	24 83       	std	Z+4, r18	; 0x04
    159c:	15 82       	std	Z+5, r1	; 0x05
    159e:	0e 94 84 42 	call	0x8508	; 0x8508 <sprintf>
	sei();
    15a2:	78 94       	sei
    15a4:	c0 e0       	ldi	r28, 0x00	; 0
    15a6:	d0 e0       	ldi	r29, 0x00	; 0
    15a8:	8d b7       	in	r24, 0x3d	; 61
    15aa:	9e b7       	in	r25, 0x3e	; 62
    15ac:	06 96       	adiw	r24, 0x06	; 6
    15ae:	0f b6       	in	r0, 0x3f	; 63
    15b0:	f8 94       	cli
    15b2:	9e bf       	out	0x3e, r25	; 62
    15b4:	0f be       	out	0x3f, r0	; 63
    15b6:	8d bf       	out	0x3d, r24	; 61
    15b8:	08 ec       	ldi	r16, 0xC8	; 200
    15ba:	10 e0       	ldi	r17, 0x00	; 0
	
    for(index=0; index<=9999; index+=1111)
    {
        PORTG = (~PORTG)&0x18;
    15bc:	80 91 65 00 	lds	r24, 0x0065
    15c0:	80 95       	com	r24
    15c2:	88 71       	andi	r24, 0x18	; 24
    15c4:	80 93 65 00 	sts	0x0065, r24
        FND_OP(index);
    15c8:	ce 01       	movw	r24, r28
    15ca:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
    15ce:	80 ed       	ldi	r24, 0xD0	; 208
    15d0:	97 e0       	ldi	r25, 0x07	; 7
    15d2:	f8 01       	movw	r30, r16
    15d4:	31 97       	sbiw	r30, 0x01	; 1
    15d6:	f1 f7       	brne	.-4      	; 0x15d4 <SYS_INIT+0xda>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15d8:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15da:	d9 f7       	brne	.-10     	; 0x15d2 <SYS_INIT+0xd8>
	dat_buf.status = (char*)malloc(sizeof(char)*30);
	dat_buf.note = (char*)malloc(sizeof(char)*20);
	sprintf(dat_buf.note,"%d개\r\n",VALVE_CH);
	sei();
	
    for(index=0; index<=9999; index+=1111)
    15dc:	c9 5a       	subi	r28, 0xA9	; 169
    15de:	db 4f       	sbci	r29, 0xFB	; 251
    15e0:	9b e2       	ldi	r25, 0x2B	; 43
    15e2:	c6 36       	cpi	r28, 0x66	; 102
    15e4:	d9 07       	cpc	r29, r25
    15e6:	51 f7       	brne	.-44     	; 0x15bc <SYS_INIT+0xc2>
        FND_OP(index);
		_delay_ms(200); 
    }


   	SET_SW_FLAG = UP_SW_FLAG = OK_SW_FLAG = DOWN_SW_FLAG=0;
    15e8:	10 92 1d 05 	sts	0x051D, r1
    15ec:	80 91 1d 05 	lds	r24, 0x051D
    15f0:	80 93 1c 05 	sts	0x051C, r24
    15f4:	80 91 1c 05 	lds	r24, 0x051C
    15f8:	80 93 1b 05 	sts	0x051B, r24
    15fc:	80 91 1b 05 	lds	r24, 0x051B
    1600:	80 93 1a 05 	sts	0x051A, r24

	if((SD_DETECTION_FLAG=MSD_INIT()))
    1604:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <MSD_INIT>
    1608:	80 93 21 05 	sts	0x0521, r24
    160c:	80 91 21 05 	lds	r24, 0x0521
    1610:	88 23       	and	r24, r24
    1612:	79 f0       	breq	.+30     	; 0x1632 <SYS_INIT+0x138>
/////////////////////////////////////////////////////////////////////////
unsigned char READ_ADDR(void)
{
	//PORTD => Pull_Up

	if((PIND&0xf0)==0xf0)	//PORTD => Nothing
    1614:	80 b3       	in	r24, 0x10	; 16
    1616:	80 7f       	andi	r24, 0xF0	; 240
    1618:	80 3f       	cpi	r24, 0xF0	; 240
    161a:	11 f4       	brne	.+4      	; 0x1620 <SYS_INIT+0x126>
    161c:	80 e0       	ldi	r24, 0x00	; 0
    161e:	03 c0       	rjmp	.+6      	; 0x1626 <SYS_INIT+0x12c>
		return 0;
	else
		return (PIND>>4)&0x0f;	//상위4개만 검출? 왜?
    1620:	80 b3       	in	r24, 0x10	; 16
    1622:	82 95       	swap	r24
    1624:	8f 70       	andi	r24, 0x0F	; 15

   	SET_SW_FLAG = UP_SW_FLAG = OK_SW_FLAG = DOWN_SW_FLAG=0;

	if((SD_DETECTION_FLAG=MSD_INIT()))
	{
		FND_OP(1000+EXT_INIT(READ_ADDR()));		
    1626:	0e 94 17 05 	call	0xa2e	; 0xa2e <EXT_INIT>
    162a:	90 e0       	ldi	r25, 0x00	; 0
    162c:	88 51       	subi	r24, 0x18	; 24
    162e:	9c 4f       	sbci	r25, 0xFC	; 252
    1630:	0c c0       	rjmp	.+24     	; 0x164a <SYS_INIT+0x150>
/////////////////////////////////////////////////////////////////////////
unsigned char READ_ADDR(void)
{
	//PORTD => Pull_Up

	if((PIND&0xf0)==0xf0)	//PORTD => Nothing
    1632:	80 b3       	in	r24, 0x10	; 16
    1634:	80 7f       	andi	r24, 0xF0	; 240
    1636:	80 3f       	cpi	r24, 0xF0	; 240
    1638:	11 f4       	brne	.+4      	; 0x163e <SYS_INIT+0x144>
    163a:	80 e0       	ldi	r24, 0x00	; 0
    163c:	03 c0       	rjmp	.+6      	; 0x1644 <SYS_INIT+0x14a>
		return 0;
	else
		return (PIND>>4)&0x0f;	//상위4개만 검출? 왜?
    163e:	80 b3       	in	r24, 0x10	; 16
    1640:	82 95       	swap	r24
    1642:	8f 70       	andi	r24, 0x0F	; 15
		FND_OP(1000+EXT_INIT(READ_ADDR()));		
	}
	else
	{
		
		FND_OP(EXT_INIT(READ_ADDR()));
    1644:	0e 94 17 05 	call	0xa2e	; 0xa2e <EXT_INIT>
    1648:	90 e0       	ldi	r25, 0x00	; 0
    164a:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
    164e:	80 e3       	ldi	r24, 0x30	; 48
    1650:	95 e7       	ldi	r25, 0x75	; 117
    1652:	28 ec       	ldi	r18, 0xC8	; 200
    1654:	30 e0       	ldi	r19, 0x00	; 0
    1656:	f9 01       	movw	r30, r18
    1658:	31 97       	sbiw	r30, 0x01	; 1
    165a:	f1 f7       	brne	.-4      	; 0x1658 <SYS_INIT+0x15e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    165c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    165e:	d9 f7       	brne	.-10     	; 0x1656 <SYS_INIT+0x15c>
	}

	_delay_ms(3000);

	FND_BLINK_FLAG = 1;
    1660:	81 e0       	ldi	r24, 0x01	; 1
    1662:	80 93 23 05 	sts	0x0523, r24
    1666:	80 e1       	ldi	r24, 0x10	; 16
    1668:	97 e2       	ldi	r25, 0x27	; 39
    166a:	28 ec       	ldi	r18, 0xC8	; 200
    166c:	30 e0       	ldi	r19, 0x00	; 0
    166e:	f9 01       	movw	r30, r18
    1670:	31 97       	sbiw	r30, 0x01	; 1
    1672:	f1 f7       	brne	.-4      	; 0x1670 <SYS_INIT+0x176>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1674:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1676:	d9 f7       	brne	.-10     	; 0x166e <SYS_INIT+0x174>
	_delay_ms(1000);
	FND_BLINK_FLAG = 0;
    1678:	10 92 23 05 	sts	0x0523, r1
    167c:	80 e1       	ldi	r24, 0x10	; 16
    167e:	97 e2       	ldi	r25, 0x27	; 39
    1680:	28 ec       	ldi	r18, 0xC8	; 200
    1682:	30 e0       	ldi	r19, 0x00	; 0
    1684:	f9 01       	movw	r30, r18
    1686:	31 97       	sbiw	r30, 0x01	; 1
    1688:	f1 f7       	brne	.-4      	; 0x1686 <SYS_INIT+0x18c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    168a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    168c:	d9 f7       	brne	.-10     	; 0x1684 <SYS_INIT+0x18a>
	_delay_ms(1000);
	PC_VCC_ON;
    168e:	80 91 65 00 	lds	r24, 0x0065
    1692:	81 60       	ori	r24, 0x01	; 1
    1694:	80 93 65 00 	sts	0x0065, r24

	ST = POWER_ON;
    1698:	10 92 46 05 	sts	0x0546, r1
		
	if(SD_DETECTION_FLAG)
    169c:	80 91 21 05 	lds	r24, 0x0521
    16a0:	88 23       	and	r24, r24
    16a2:	21 f0       	breq	.+8      	; 0x16ac <SYS_INIT+0x1b2>
	{	
		SDWR_OP();
    16a4:	0e 94 f5 09 	call	0x13ea	; 0x13ea <SDWR_OP>
		TIM_SDWR_INIT();		
    16a8:	0e 94 86 05 	call	0xb0c	; 0xb0c <TIM_SDWR_INIT>
	}
}
    16ac:	df 91       	pop	r29
    16ae:	cf 91       	pop	r28
    16b0:	1f 91       	pop	r17
    16b2:	0f 91       	pop	r16
    16b4:	08 95       	ret

000016b6 <SLA_VALVE_CH_SET_OP>:
    }
}
/////////////////////////////////////////////////////////////////////////

void SLA_VALVE_CH_SET_OP(void)
{
    16b6:	4f 92       	push	r4
    16b8:	5f 92       	push	r5
    16ba:	6f 92       	push	r6
    16bc:	7f 92       	push	r7
    16be:	8f 92       	push	r8
    16c0:	9f 92       	push	r9
    16c2:	af 92       	push	r10
    16c4:	bf 92       	push	r11
    16c6:	cf 92       	push	r12
    16c8:	df 92       	push	r13
    16ca:	ef 92       	push	r14
    16cc:	ff 92       	push	r15
    16ce:	0f 93       	push	r16
    16d0:	1f 93       	push	r17
    16d2:	cf 93       	push	r28
    16d4:	df 93       	push	r29
    16d6:	e0 e0       	ldi	r30, 0x00	; 0
    16d8:	f0 e0       	ldi	r31, 0x00	; 0
	unsigned int SLA_CH_SUM_BUF = 0;
	
	for ( int i = 0 ;	i < 17 ; i++)
	{
	
		if (SLAVE_ADDR_CHECK & 1<<(i))			//np01
    16da:	41 e0       	ldi	r20, 0x01	; 1
    16dc:	50 e0       	ldi	r21, 0x00	; 0
    16de:	20 91 b1 09 	lds	r18, 0x09B1
    16e2:	30 91 b2 09 	lds	r19, 0x09B2
    16e6:	ca 01       	movw	r24, r20
    16e8:	0e 2e       	mov	r0, r30
    16ea:	02 c0       	rjmp	.+4      	; 0x16f0 <SLA_VALVE_CH_SET_OP+0x3a>
    16ec:	88 0f       	add	r24, r24
    16ee:	99 1f       	adc	r25, r25
    16f0:	0a 94       	dec	r0
    16f2:	e2 f7       	brpl	.-8      	; 0x16ec <SLA_VALVE_CH_SET_OP+0x36>
    16f4:	82 23       	and	r24, r18
    16f6:	93 23       	and	r25, r19
    16f8:	ef 01       	movw	r28, r30
    16fa:	21 96       	adiw	r28, 0x01	; 1
    16fc:	89 2b       	or	r24, r25
    16fe:	09 f4       	brne	.+2      	; 0x1702 <SLA_VALVE_CH_SET_OP+0x4c>
    1700:	6d c1       	rjmp	.+730    	; 0x19dc <SLA_VALVE_CH_SET_OP+0x326>
		{
				SLA_DEV_INDEX = (i+1)*100;
				CH_BUF = SLA_VAL_CH[i+1];
    1702:	fe 01       	movw	r30, r28
    1704:	ee 0f       	add	r30, r30
    1706:	ff 1f       	adc	r31, r31
    1708:	ed 54       	subi	r30, 0x4D	; 77
    170a:	fc 4f       	sbci	r31, 0xFC	; 252
    170c:	80 81       	ld	r24, Z
    170e:	91 81       	ldd	r25, Z+1	; 0x01
    1710:	08 2f       	mov	r16, r24
				FND_OP(SLA_DEV_INDEX+CH_BUF);
    1712:	84 e6       	ldi	r24, 0x64	; 100
    1714:	90 e0       	ldi	r25, 0x00	; 0
    1716:	c8 9f       	mul	r28, r24
    1718:	80 2d       	mov	r24, r0
    171a:	11 24       	eor	r1, r1
    171c:	c8 2e       	mov	r12, r24
    171e:	dd 24       	eor	r13, r13
    1720:	c6 01       	movw	r24, r12
    1722:	80 0f       	add	r24, r16
    1724:	91 1d       	adc	r25, r1
    1726:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
    172a:	88 ee       	ldi	r24, 0xE8	; 232
    172c:	93 e0       	ldi	r25, 0x03	; 3
    172e:	28 ec       	ldi	r18, 0xC8	; 200
    1730:	30 e0       	ldi	r19, 0x00	; 0
    1732:	f9 01       	movw	r30, r18
    1734:	31 97       	sbiw	r30, 0x01	; 1
    1736:	f1 f7       	brne	.-4      	; 0x1734 <SLA_VALVE_CH_SET_OP+0x7e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1738:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    173a:	d9 f7       	brne	.-10     	; 0x1732 <SLA_VALVE_CH_SET_OP+0x7c>
		                _delay_ms(800);
		            }
		        }
		        else if(OK_SW_FLAG)   //OK_SW
		        {
					ST = VALVE_CH_RESET;
    173c:	b6 e0       	ldi	r27, 0x06	; 6
    173e:	5b 2e       	mov	r5, r27
							f_close(&fo);
							f_mount(0,"",0);
							MSD_LED_OFF;
						}
					}
		            FND_BLINK_FLAG = 1;
    1740:	44 24       	eor	r4, r4
    1742:	43 94       	inc	r4
    1744:	a8 ec       	ldi	r26, 0xC8	; 200
    1746:	aa 2e       	mov	r10, r26
    1748:	b1 2c       	mov	r11, r1
		            _delay_ms(2000);
		            FND_BLINK_FLAG = 0;
			
					SLA_VAL_CH[i+1] = CH_BUF;
    174a:	7e 01       	movw	r14, r28
    174c:	ee 0c       	add	r14, r14
    174e:	ff 1c       	adc	r15, r15
    1750:	83 eb       	ldi	r24, 0xB3	; 179
    1752:	93 e0       	ldi	r25, 0x03	; 3
    1754:	e8 0e       	add	r14, r24
    1756:	f9 1e       	adc	r15, r25
						SLA_CH_SUM_BUF += SLA_VAL_CH[j];
					}
					SLA_CH_SUM  =  SLA_CH_SUM_BUF;
					for ( int slave_index = 0 ; slave_index < 16 ; slave_index++)
							{
								if (SLAVE_ADDR_CHECK & 1<<(slave_index))	
    1758:	e1 e0       	ldi	r30, 0x01	; 1
    175a:	8e 2e       	mov	r8, r30
    175c:	91 2c       	mov	r9, r1
									}
									else	;
								}
							}
							
						ST = SLAVE_CH_RESET;
    175e:	77 e0       	ldi	r23, 0x07	; 7
    1760:	77 2e       	mov	r7, r23
		            return;                        
		        }
		        _delay_ms(200);
		        SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;
		        FAULT_LED_OFF;
		        EIFR = 0xff;     
    1762:	66 24       	eor	r6, r6
    1764:	6a 94       	dec	r6
				FND_OP(SLA_DEV_INDEX+CH_BUF);
				_delay_ms(100);	

    		while(1)
    		{
        		WD_ON(KEY_WD);
    1766:	80 e0       	ldi	r24, 0x00	; 0
    1768:	0e 94 75 03 	call	0x6ea	; 0x6ea <WD_ON>
    176c:	13 c0       	rjmp	.+38     	; 0x1794 <SLA_VALVE_CH_SET_OP+0xde>
        		while(!(SET_SW_FLAG|UP_SW_FLAG|OK_SW_FLAG|DOWN_SW_FLAG))
        		{
            		if(WD_FLAG)
    176e:	80 91 26 05 	lds	r24, 0x0526
    1772:	88 23       	and	r24, r24
    1774:	79 f0       	breq	.+30     	; 0x1794 <SLA_VALVE_CH_SET_OP+0xde>
            		{
                		ALL_FND_OFF;
    1776:	15 ba       	out	0x15, r1	; 21
                		TCCR0 = 0;
    1778:	13 be       	out	0x33, r1	; 51
                		TCCR2 = 0;
    177a:	15 bc       	out	0x25, r1	; 37
    177c:	80 e1       	ldi	r24, 0x10	; 16
    177e:	97 e2       	ldi	r25, 0x27	; 39
    1780:	28 ec       	ldi	r18, 0xC8	; 200
    1782:	30 e0       	ldi	r19, 0x00	; 0
    1784:	f9 01       	movw	r30, r18
    1786:	31 97       	sbiw	r30, 0x01	; 1
    1788:	f1 f7       	brne	.-4      	; 0x1786 <SLA_VALVE_CH_SET_OP+0xd0>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    178a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    178c:	d9 f7       	brne	.-10     	; 0x1784 <SLA_VALVE_CH_SET_OP+0xce>

                		_delay_ms(1000);

                		TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);  
    178e:	8d e0       	ldi	r24, 0x0D	; 13
    1790:	85 bd       	out	0x25, r24	; 37
    1792:	02 c1       	rjmp	.+516    	; 0x1998 <SLA_VALVE_CH_SET_OP+0x2e2>
				_delay_ms(100);	

    		while(1)
    		{
        		WD_ON(KEY_WD);
        		while(!(SET_SW_FLAG|UP_SW_FLAG|OK_SW_FLAG|DOWN_SW_FLAG))
    1794:	30 91 1a 05 	lds	r19, 0x051A
    1798:	80 91 1b 05 	lds	r24, 0x051B
    179c:	90 91 1c 05 	lds	r25, 0x051C
    17a0:	20 91 1d 05 	lds	r18, 0x051D
    17a4:	83 2b       	or	r24, r19
    17a6:	89 2b       	or	r24, r25
    17a8:	82 2b       	or	r24, r18
    17aa:	09 f3       	breq	.-62     	; 0x176e <SLA_VALVE_CH_SET_OP+0xb8>
                		TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);  
                		FND_OP(0);
                		return;    
            		}
        		}
        		if(UP_SW_FLAG)        //UP_SW
    17ac:	80 91 1b 05 	lds	r24, 0x051B
    17b0:	88 23       	and	r24, r24
    17b2:	89 f0       	breq	.+34     	; 0x17d6 <SLA_VALVE_CH_SET_OP+0x120>
        		{
            		if(CH_BUF < 20)
    17b4:	04 31       	cpi	r16, 0x14	; 20
    17b6:	10 f4       	brcc	.+4      	; 0x17bc <SLA_VALVE_CH_SET_OP+0x106>
            		{
                		CH_BUF += 1;
    17b8:	0f 5f       	subi	r16, 0xFF	; 255
    17ba:	14 c0       	rjmp	.+40     	; 0x17e4 <SLA_VALVE_CH_SET_OP+0x12e>
                		FND_OP(SLA_DEV_INDEX+CH_BUF);
            		}
            		else
            		{
                		FAULT_LED_ON;
    17bc:	80 91 65 00 	lds	r24, 0x0065
    17c0:	8f 70       	andi	r24, 0x0F	; 15
    17c2:	80 93 65 00 	sts	0x0065, r24
    17c6:	80 e4       	ldi	r24, 0x40	; 64
    17c8:	9f e1       	ldi	r25, 0x1F	; 31
    17ca:	f5 01       	movw	r30, r10
    17cc:	31 97       	sbiw	r30, 0x01	; 1
    17ce:	f1 f7       	brne	.-4      	; 0x17cc <SLA_VALVE_CH_SET_OP+0x116>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17d0:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17d2:	d9 f7       	brne	.-10     	; 0x17ca <SLA_VALVE_CH_SET_OP+0x114>
    17d4:	e7 c0       	rjmp	.+462    	; 0x19a4 <SLA_VALVE_CH_SET_OP+0x2ee>
                		_delay_ms(800);                
            		}                
        		}
		        else if(DOWN_SW_FLAG)   //DOWN_SW
    17d6:	80 91 1d 05 	lds	r24, 0x051D
    17da:	88 23       	and	r24, r24
    17dc:	b1 f0       	breq	.+44     	; 0x180a <SLA_VALVE_CH_SET_OP+0x154>
		        {
		            if(CH_BUF > 1)
    17de:	02 30       	cpi	r16, 0x02	; 2
    17e0:	38 f0       	brcs	.+14     	; 0x17f0 <SLA_VALVE_CH_SET_OP+0x13a>
		            {
		                CH_BUF -= 1;
    17e2:	01 50       	subi	r16, 0x01	; 1
		                FND_OP(SLA_DEV_INDEX+CH_BUF);
    17e4:	c6 01       	movw	r24, r12
    17e6:	80 0f       	add	r24, r16
    17e8:	91 1d       	adc	r25, r1
    17ea:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
    17ee:	da c0       	rjmp	.+436    	; 0x19a4 <SLA_VALVE_CH_SET_OP+0x2ee>
		            }
		            else
		            {
		                FAULT_LED_ON;
    17f0:	80 91 65 00 	lds	r24, 0x0065
    17f4:	8f 70       	andi	r24, 0x0F	; 15
    17f6:	80 93 65 00 	sts	0x0065, r24
    17fa:	80 e4       	ldi	r24, 0x40	; 64
    17fc:	9f e1       	ldi	r25, 0x1F	; 31
    17fe:	f5 01       	movw	r30, r10
    1800:	31 97       	sbiw	r30, 0x01	; 1
    1802:	f1 f7       	brne	.-4      	; 0x1800 <SLA_VALVE_CH_SET_OP+0x14a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1804:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1806:	d9 f7       	brne	.-10     	; 0x17fe <SLA_VALVE_CH_SET_OP+0x148>
    1808:	cd c0       	rjmp	.+410    	; 0x19a4 <SLA_VALVE_CH_SET_OP+0x2ee>
		                _delay_ms(800);
		            }
		        }
		        else if(OK_SW_FLAG)   //OK_SW
    180a:	80 91 1c 05 	lds	r24, 0x051C
    180e:	88 23       	and	r24, r24
    1810:	09 f4       	brne	.+2      	; 0x1814 <SLA_VALVE_CH_SET_OP+0x15e>
    1812:	a1 c0       	rjmp	.+322    	; 0x1956 <SLA_VALVE_CH_SET_OP+0x2a0>
		        {
					ST = VALVE_CH_RESET;
    1814:	50 92 46 05 	sts	0x0546, r5
					if(SD_DETECTION_FLAG)
    1818:	80 91 21 05 	lds	r24, 0x0521
    181c:	88 23       	and	r24, r24
    181e:	d1 f0       	breq	.+52     	; 0x1854 <SLA_VALVE_CH_SET_OP+0x19e>
					{
					while(NEW_FILE_FLAG);
    1820:	80 91 22 05 	lds	r24, 0x0522
    1824:	88 23       	and	r24, r24
    1826:	e1 f7       	brne	.-8      	; 0x1820 <SLA_VALVE_CH_SET_OP+0x16a>
						if(!SDWR_OP())
    1828:	0e 94 f5 09 	call	0x13ea	; 0x13ea <SDWR_OP>
    182c:	88 23       	and	r24, r24
    182e:	91 f4       	brne	.+36     	; 0x1854 <SLA_VALVE_CH_SET_OP+0x19e>
						{
						
							SD_DETECTION_FLAG = 0;
    1830:	10 92 21 05 	sts	0x0521, r1
							f_close(&fo);
    1834:	8f e8       	ldi	r24, 0x8F	; 143
    1836:	97 e0       	ldi	r25, 0x07	; 7
    1838:	0e 94 bb 35 	call	0x6b76	; 0x6b76 <f_close>
							f_mount(0,"",0);
    183c:	80 e0       	ldi	r24, 0x00	; 0
    183e:	90 e0       	ldi	r25, 0x00	; 0
    1840:	66 e1       	ldi	r22, 0x16	; 22
    1842:	73 e0       	ldi	r23, 0x03	; 3
    1844:	40 e0       	ldi	r20, 0x00	; 0
    1846:	0e 94 a7 1b 	call	0x374e	; 0x374e <f_mount>
							MSD_LED_OFF;
    184a:	80 91 65 00 	lds	r24, 0x0065
    184e:	88 60       	ori	r24, 0x08	; 8
    1850:	80 93 65 00 	sts	0x0065, r24
						}
					}
		            FND_BLINK_FLAG = 1;
    1854:	40 92 23 05 	sts	0x0523, r4
    1858:	80 e2       	ldi	r24, 0x20	; 32
    185a:	9e e4       	ldi	r25, 0x4E	; 78
    185c:	f5 01       	movw	r30, r10
    185e:	31 97       	sbiw	r30, 0x01	; 1
    1860:	f1 f7       	brne	.-4      	; 0x185e <SLA_VALVE_CH_SET_OP+0x1a8>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1862:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1864:	d9 f7       	brne	.-10     	; 0x185c <SLA_VALVE_CH_SET_OP+0x1a6>
		            _delay_ms(2000);
		            FND_BLINK_FLAG = 0;
    1866:	10 92 23 05 	sts	0x0523, r1
			
					SLA_VAL_CH[i+1] = CH_BUF;
    186a:	80 2f       	mov	r24, r16
    186c:	90 e0       	ldi	r25, 0x00	; 0
    186e:	f7 01       	movw	r30, r14
    1870:	91 83       	std	Z+1, r25	; 0x01
    1872:	80 83       	st	Z, r24
    1874:	20 e0       	ldi	r18, 0x00	; 0
    1876:	30 e0       	ldi	r19, 0x00	; 0
    1878:	40 e0       	ldi	r20, 0x00	; 0
    187a:	50 e0       	ldi	r21, 0x00	; 0
					for ( int j = 0 ; j < 17; j++)
					{
						SLA_CH_SUM_BUF += SLA_VAL_CH[j];
    187c:	f9 01       	movw	r30, r18
    187e:	ee 0f       	add	r30, r30
    1880:	ff 1f       	adc	r31, r31
    1882:	ed 54       	subi	r30, 0x4D	; 77
    1884:	fc 4f       	sbci	r31, 0xFC	; 252
    1886:	80 81       	ld	r24, Z
    1888:	91 81       	ldd	r25, Z+1	; 0x01
    188a:	48 0f       	add	r20, r24
    188c:	59 1f       	adc	r21, r25
		            FND_BLINK_FLAG = 1;
		            _delay_ms(2000);
		            FND_BLINK_FLAG = 0;
			
					SLA_VAL_CH[i+1] = CH_BUF;
					for ( int j = 0 ; j < 17; j++)
    188e:	2f 5f       	subi	r18, 0xFF	; 255
    1890:	3f 4f       	sbci	r19, 0xFF	; 255
    1892:	21 31       	cpi	r18, 0x11	; 17
    1894:	31 05       	cpc	r19, r1
    1896:	91 f7       	brne	.-28     	; 0x187c <SLA_VALVE_CH_SET_OP+0x1c6>
					{
						SLA_CH_SUM_BUF += SLA_VAL_CH[j];
					}
					SLA_CH_SUM  =  SLA_CH_SUM_BUF;
    1898:	50 93 e6 03 	sts	0x03E6, r21
    189c:	40 93 e5 03 	sts	0x03E5, r20
    18a0:	c0 e0       	ldi	r28, 0x00	; 0
    18a2:	d0 e0       	ldi	r29, 0x00	; 0
					for ( int slave_index = 0 ; slave_index < 16 ; slave_index++)
							{
								if (SLAVE_ADDR_CHECK & 1<<(slave_index))	
    18a4:	20 91 b1 09 	lds	r18, 0x09B1
    18a8:	30 91 b2 09 	lds	r19, 0x09B2
    18ac:	c4 01       	movw	r24, r8
    18ae:	0c 2e       	mov	r0, r28
    18b0:	02 c0       	rjmp	.+4      	; 0x18b6 <SLA_VALVE_CH_SET_OP+0x200>
    18b2:	88 0f       	add	r24, r24
    18b4:	99 1f       	adc	r25, r25
    18b6:	0a 94       	dec	r0
    18b8:	e2 f7       	brpl	.-8      	; 0x18b2 <SLA_VALVE_CH_SET_OP+0x1fc>
    18ba:	82 23       	and	r24, r18
    18bc:	93 23       	and	r25, r19
    18be:	89 2b       	or	r24, r25
    18c0:	39 f1       	breq	.+78     	; 0x1910 <SLA_VALVE_CH_SET_OP+0x25a>
    18c2:	ce 01       	movw	r24, r28
    18c4:	8f 5f       	subi	r24, 0xFF	; 255
    18c6:	18 2f       	mov	r17, r24
								{
									twi_master_write(slave_index+1,SLAVE_CH_SEND);
    18c8:	6e ea       	ldi	r22, 0xAE	; 174
    18ca:	0e 94 74 01 	call	0x2e8	; 0x2e8 <twi_master_write>
    18ce:	88 ee       	ldi	r24, 0xE8	; 232
    18d0:	93 e0       	ldi	r25, 0x03	; 3
    18d2:	f5 01       	movw	r30, r10
    18d4:	31 97       	sbiw	r30, 0x01	; 1
    18d6:	f1 f7       	brne	.-4      	; 0x18d4 <SLA_VALVE_CH_SET_OP+0x21e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18d8:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18da:	d9 f7       	brne	.-10     	; 0x18d2 <SLA_VALVE_CH_SET_OP+0x21c>
																_delay_ms(100);
								
									TWI_DATA_BUF = twi_master_read(slave_index+1);
    18dc:	81 2f       	mov	r24, r17
    18de:	0e 94 45 01 	call	0x28a	; 0x28a <twi_master_read>
    18e2:	90 e0       	ldi	r25, 0x00	; 0
    18e4:	90 93 8d 07 	sts	0x078D, r25
    18e8:	80 93 8c 07 	sts	0x078C, r24
									if ( TWI_DATA_BUF == SLAVE_CH_ASK )
    18ec:	80 91 8c 07 	lds	r24, 0x078C
    18f0:	90 91 8d 07 	lds	r25, 0x078D
    18f4:	8d 3a       	cpi	r24, 0xAD	; 173
    18f6:	91 05       	cpc	r25, r1
    18f8:	59 f4       	brne	.+22     	; 0x1910 <SLA_VALVE_CH_SET_OP+0x25a>
    18fa:	88 ee       	ldi	r24, 0xE8	; 232
    18fc:	93 e0       	ldi	r25, 0x03	; 3
    18fe:	f5 01       	movw	r30, r10
    1900:	31 97       	sbiw	r30, 0x01	; 1
    1902:	f1 f7       	brne	.-4      	; 0x1900 <SLA_VALVE_CH_SET_OP+0x24a>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1904:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1906:	d9 f7       	brne	.-10     	; 0x18fe <SLA_VALVE_CH_SET_OP+0x248>
									{
									_delay_ms(100);
										twi_master_write(slave_index+1,CH_BUF);
    1908:	81 2f       	mov	r24, r17
    190a:	60 2f       	mov	r22, r16
    190c:	0e 94 74 01 	call	0x2e8	; 0x2e8 <twi_master_write>
					for ( int j = 0 ; j < 17; j++)
					{
						SLA_CH_SUM_BUF += SLA_VAL_CH[j];
					}
					SLA_CH_SUM  =  SLA_CH_SUM_BUF;
					for ( int slave_index = 0 ; slave_index < 16 ; slave_index++)
    1910:	21 96       	adiw	r28, 0x01	; 1
    1912:	c0 31       	cpi	r28, 0x10	; 16
    1914:	d1 05       	cpc	r29, r1
    1916:	09 f0       	breq	.+2      	; 0x191a <SLA_VALVE_CH_SET_OP+0x264>
    1918:	c5 cf       	rjmp	.-118    	; 0x18a4 <SLA_VALVE_CH_SET_OP+0x1ee>
									}
									else	;
								}
							}
							
						ST = SLAVE_CH_RESET;
    191a:	70 92 46 05 	sts	0x0546, r7
						if(SD_DETECTION_FLAG)
    191e:	80 91 21 05 	lds	r24, 0x0521
    1922:	88 23       	and	r24, r24
    1924:	09 f4       	brne	.+2      	; 0x1928 <SLA_VALVE_CH_SET_OP+0x272>
    1926:	3d c0       	rjmp	.+122    	; 0x19a2 <SLA_VALVE_CH_SET_OP+0x2ec>
						{
							
							if(!SDWR_OP())
    1928:	0e 94 f5 09 	call	0x13ea	; 0x13ea <SDWR_OP>
    192c:	88 23       	and	r24, r24
    192e:	c9 f5       	brne	.+114    	; 0x19a2 <SLA_VALVE_CH_SET_OP+0x2ec>
							{
								SD_DETECTION_FLAG = 0;
    1930:	10 92 21 05 	sts	0x0521, r1
								f_close(&fo);
    1934:	8f e8       	ldi	r24, 0x8F	; 143
    1936:	97 e0       	ldi	r25, 0x07	; 7
    1938:	0e 94 bb 35 	call	0x6b76	; 0x6b76 <f_close>
								f_mount(0,"",0);
    193c:	80 e0       	ldi	r24, 0x00	; 0
    193e:	90 e0       	ldi	r25, 0x00	; 0
    1940:	66 e1       	ldi	r22, 0x16	; 22
    1942:	73 e0       	ldi	r23, 0x03	; 3
    1944:	40 e0       	ldi	r20, 0x00	; 0
    1946:	0e 94 a7 1b 	call	0x374e	; 0x374e <f_mount>
								MSD_LED_OFF;
    194a:	80 91 65 00 	lds	r24, 0x0065
    194e:	88 60       	ori	r24, 0x08	; 8
    1950:	80 93 65 00 	sts	0x0065, r24
    1954:	26 c0       	rjmp	.+76     	; 0x19a2 <SLA_VALVE_CH_SET_OP+0x2ec>
							}
						}	
					SLA_CH_SUM_BUF = 0;
					CH_BUF = 0;
		        }
		        else if(SET_SW_FLAG)   //SET_SW
    1956:	80 91 1a 05 	lds	r24, 0x051A
    195a:	88 23       	and	r24, r24
    195c:	19 f1       	breq	.+70     	; 0x19a4 <SLA_VALVE_CH_SET_OP+0x2ee>
		        {
		            ALL_FND_OFF;
    195e:	15 ba       	out	0x15, r1	; 21
		            TCCR2 = 0;
    1960:	15 bc       	out	0x25, r1	; 37
    1962:	80 e1       	ldi	r24, 0x10	; 16
    1964:	97 e2       	ldi	r25, 0x27	; 39
    1966:	28 ec       	ldi	r18, 0xC8	; 200
    1968:	30 e0       	ldi	r19, 0x00	; 0
    196a:	f9 01       	movw	r30, r18
    196c:	31 97       	sbiw	r30, 0x01	; 1
    196e:	f1 f7       	brne	.-4      	; 0x196c <SLA_VALVE_CH_SET_OP+0x2b6>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1970:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1972:	d9 f7       	brne	.-10     	; 0x196a <SLA_VALVE_CH_SET_OP+0x2b4>
		            _delay_ms(1000);
		            TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);
    1974:	8d e0       	ldi	r24, 0x0D	; 13
    1976:	85 bd       	out	0x25, r24	; 37
		            SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;
    1978:	10 92 1d 05 	sts	0x051D, r1
    197c:	80 91 1d 05 	lds	r24, 0x051D
    1980:	80 93 1c 05 	sts	0x051C, r24
    1984:	80 91 1c 05 	lds	r24, 0x051C
    1988:	80 93 1b 05 	sts	0x051B, r24
    198c:	80 91 1b 05 	lds	r24, 0x051B
    1990:	80 93 1a 05 	sts	0x051A, r24
		            EIFR = 0xff;    
    1994:	8f ef       	ldi	r24, 0xFF	; 255
    1996:	88 bf       	out	0x38, r24	; 56
		            FND_OP(0);
    1998:	80 e0       	ldi	r24, 0x00	; 0
    199a:	90 e0       	ldi	r25, 0x00	; 0
    199c:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
    19a0:	22 c0       	rjmp	.+68     	; 0x19e6 <SLA_VALVE_CH_SET_OP+0x330>
		            return;                        
    19a2:	00 e0       	ldi	r16, 0x00	; 0
    19a4:	80 ed       	ldi	r24, 0xD0	; 208
    19a6:	97 e0       	ldi	r25, 0x07	; 7
    19a8:	f5 01       	movw	r30, r10
    19aa:	31 97       	sbiw	r30, 0x01	; 1
    19ac:	f1 f7       	brne	.-4      	; 0x19aa <SLA_VALVE_CH_SET_OP+0x2f4>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19ae:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19b0:	d9 f7       	brne	.-10     	; 0x19a8 <SLA_VALVE_CH_SET_OP+0x2f2>
		        }
		        _delay_ms(200);
		        SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;
    19b2:	10 92 1d 05 	sts	0x051D, r1
    19b6:	80 91 1d 05 	lds	r24, 0x051D
    19ba:	80 93 1c 05 	sts	0x051C, r24
    19be:	80 91 1c 05 	lds	r24, 0x051C
    19c2:	80 93 1b 05 	sts	0x051B, r24
    19c6:	80 91 1b 05 	lds	r24, 0x051B
    19ca:	80 93 1a 05 	sts	0x051A, r24
		        FAULT_LED_OFF;
    19ce:	80 91 65 00 	lds	r24, 0x0065
    19d2:	80 61       	ori	r24, 0x10	; 16
    19d4:	80 93 65 00 	sts	0x0065, r24
		        EIFR = 0xff;     
    19d8:	68 be       	out	0x38, r6	; 56
    19da:	c5 ce       	rjmp	.-630    	; 0x1766 <SLA_VALVE_CH_SET_OP+0xb0>
{
    unsigned char CH_BUF = 3;
	unsigned char SLA_DEV_INDEX = 0;
	unsigned int SLA_CH_SUM_BUF = 0;
	
	for ( int i = 0 ;	i < 17 ; i++)
    19dc:	fe 01       	movw	r30, r28
    19de:	c1 31       	cpi	r28, 0x11	; 17
    19e0:	d1 05       	cpc	r29, r1
    19e2:	09 f0       	breq	.+2      	; 0x19e6 <SLA_VALVE_CH_SET_OP+0x330>
    19e4:	7c ce       	rjmp	.-776    	; 0x16de <SLA_VALVE_CH_SET_OP+0x28>
		    } 
	
			}
	
		} 
}
    19e6:	df 91       	pop	r29
    19e8:	cf 91       	pop	r28
    19ea:	1f 91       	pop	r17
    19ec:	0f 91       	pop	r16
    19ee:	ff 90       	pop	r15
    19f0:	ef 90       	pop	r14
    19f2:	df 90       	pop	r13
    19f4:	cf 90       	pop	r12
    19f6:	bf 90       	pop	r11
    19f8:	af 90       	pop	r10
    19fa:	9f 90       	pop	r9
    19fc:	8f 90       	pop	r8
    19fe:	7f 90       	pop	r7
    1a00:	6f 90       	pop	r6
    1a02:	5f 90       	pop	r5
    1a04:	4f 90       	pop	r4
    1a06:	08 95       	ret

00001a08 <STOP_POINT_SET_OP>:
        EIFR = 0xff;     
    }  
}
/////////////////////////////////////////////////////////////////////////
unsigned char STOP_POINT_SET_OP(void)
{
    1a08:	ef 92       	push	r14
    1a0a:	ff 92       	push	r15
    1a0c:	0f 93       	push	r16
    1a0e:	1f 93       	push	r17
    1a10:	cf 93       	push	r28
    1a12:	df 93       	push	r29
    unsigned char point = STOP_OP_POINT;
    1a14:	10 91 df 03 	lds	r17, 0x03DF
    FND_OP(point);
    1a18:	81 2f       	mov	r24, r17
    1a1a:	90 e0       	ldi	r25, 0x00	; 0
    1a1c:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
  
        else if(OK_SW_FLAG)   //OK_SW
        {
            STOP_OP_POINT = point;		//User adjust the configuration 

            FND_BLINK_FLAG = 1;
    1a20:	ee 24       	eor	r14, r14
    1a22:	e3 94       	inc	r14
    1a24:	c8 ec       	ldi	r28, 0xC8	; 200
    1a26:	d0 e0       	ldi	r29, 0x00	; 0
            _delay_ms(2000);
            FND_BLINK_FLAG = 0;

			ST = STOP_POINT_RESET;
    1a28:	09 e0       	ldi	r16, 0x09	; 9
    1a2a:	f0 2e       	mov	r15, r16
            return 1;                        
        }
        _delay_ms(200);
        SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;
        FAULT_LED_OFF;
        EIFR = 0xff;   
    1a2c:	0f ef       	ldi	r16, 0xFF	; 255
{
    unsigned char point = STOP_OP_POINT;
    FND_OP(point);
    while(1)
    {
        WD_ON(KEY_WD);
    1a2e:	80 e0       	ldi	r24, 0x00	; 0
    1a30:	0e 94 75 03 	call	0x6ea	; 0x6ea <WD_ON>
    1a34:	18 c0       	rjmp	.+48     	; 0x1a66 <STOP_POINT_SET_OP+0x5e>
       
	    while(!(SET_SW_FLAG|UP_SW_FLAG|OK_SW_FLAG|DOWN_SW_FLAG))
        {
            if(WD_FLAG)
    1a36:	80 91 26 05 	lds	r24, 0x0526
    1a3a:	88 23       	and	r24, r24
    1a3c:	a1 f0       	breq	.+40     	; 0x1a66 <STOP_POINT_SET_OP+0x5e>
            {
                ALL_FND_OFF;
    1a3e:	15 ba       	out	0x15, r1	; 21
                TCCR0 = 0;
    1a40:	13 be       	out	0x33, r1	; 51
                TCCR2 = 0;
    1a42:	15 bc       	out	0x25, r1	; 37
    1a44:	80 e1       	ldi	r24, 0x10	; 16
    1a46:	97 e2       	ldi	r25, 0x27	; 39
    1a48:	28 ec       	ldi	r18, 0xC8	; 200
    1a4a:	30 e0       	ldi	r19, 0x00	; 0
    1a4c:	f9 01       	movw	r30, r18
    1a4e:	31 97       	sbiw	r30, 0x01	; 1
    1a50:	f1 f7       	brne	.-4      	; 0x1a4e <STOP_POINT_SET_OP+0x46>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a52:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a54:	d9 f7       	brne	.-10     	; 0x1a4c <STOP_POINT_SET_OP+0x44>

                _delay_ms(1000);
 
                TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);
    1a56:	8d e0       	ldi	r24, 0x0D	; 13
    1a58:	85 bd       	out	0x25, r24	; 37
                FND_OP(0);
    1a5a:	80 e0       	ldi	r24, 0x00	; 0
    1a5c:	90 e0       	ldi	r25, 0x00	; 0
    1a5e:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
    1a62:	80 e0       	ldi	r24, 0x00	; 0
    1a64:	a4 c0       	rjmp	.+328    	; 0x1bae <STOP_POINT_SET_OP+0x1a6>
    FND_OP(point);
    while(1)
    {
        WD_ON(KEY_WD);
       
	    while(!(SET_SW_FLAG|UP_SW_FLAG|OK_SW_FLAG|DOWN_SW_FLAG))
    1a66:	30 91 1a 05 	lds	r19, 0x051A
    1a6a:	80 91 1b 05 	lds	r24, 0x051B
    1a6e:	90 91 1c 05 	lds	r25, 0x051C
    1a72:	20 91 1d 05 	lds	r18, 0x051D
    1a76:	83 2b       	or	r24, r19
    1a78:	89 2b       	or	r24, r25
    1a7a:	82 2b       	or	r24, r18
    1a7c:	e1 f2       	breq	.-72     	; 0x1a36 <STOP_POINT_SET_OP+0x2e>
                return 0;    
            }
        }


        if(UP_SW_FLAG)        //UP_SW
    1a7e:	80 91 1b 05 	lds	r24, 0x051B
    1a82:	88 23       	and	r24, r24
    1a84:	c1 f0       	breq	.+48     	; 0x1ab6 <STOP_POINT_SET_OP+0xae>
        {
            if(point < START_OP_POINT-5)
    1a86:	80 91 de 03 	lds	r24, 0x03DE
    1a8a:	21 2f       	mov	r18, r17
    1a8c:	30 e0       	ldi	r19, 0x00	; 0
    1a8e:	90 e0       	ldi	r25, 0x00	; 0
    1a90:	05 97       	sbiw	r24, 0x05	; 5
    1a92:	28 17       	cp	r18, r24
    1a94:	39 07       	cpc	r19, r25
    1a96:	14 f4       	brge	.+4      	; 0x1a9c <STOP_POINT_SET_OP+0x94>
            {
                point += 5;
    1a98:	1b 5f       	subi	r17, 0xFB	; 251
    1a9a:	12 c0       	rjmp	.+36     	; 0x1ac0 <STOP_POINT_SET_OP+0xb8>
                FND_OP(point);
            }
            else
            {
                FAULT_LED_ON;
    1a9c:	80 91 65 00 	lds	r24, 0x0065
    1aa0:	8f 70       	andi	r24, 0x0F	; 15
    1aa2:	80 93 65 00 	sts	0x0065, r24
    1aa6:	80 e4       	ldi	r24, 0x40	; 64
    1aa8:	9f e1       	ldi	r25, 0x1F	; 31
    1aaa:	fe 01       	movw	r30, r28
    1aac:	31 97       	sbiw	r30, 0x01	; 1
    1aae:	f1 f7       	brne	.-4      	; 0x1aac <STOP_POINT_SET_OP+0xa4>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ab0:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ab2:	d9 f7       	brne	.-10     	; 0x1aaa <STOP_POINT_SET_OP+0xa2>
    1ab4:	60 c0       	rjmp	.+192    	; 0x1b76 <STOP_POINT_SET_OP+0x16e>
                _delay_ms(800);                
            }                
        }

        else if(DOWN_SW_FLAG)   //DOWN_SW
    1ab6:	80 91 1d 05 	lds	r24, 0x051D
    1aba:	88 23       	and	r24, r24
    1abc:	31 f0       	breq	.+12     	; 0x1aca <STOP_POINT_SET_OP+0xc2>
        {
            if(point > WARNING_LOW_POINT)
            {
                point -= 5;
    1abe:	15 50       	subi	r17, 0x05	; 5
                FND_OP(point);
    1ac0:	81 2f       	mov	r24, r17
    1ac2:	90 e0       	ldi	r25, 0x00	; 0
    1ac4:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
    1ac8:	56 c0       	rjmp	.+172    	; 0x1b76 <STOP_POINT_SET_OP+0x16e>
                FAULT_LED_ON;
                _delay_ms(800);
            }
        }
  
        else if(OK_SW_FLAG)   //OK_SW
    1aca:	80 91 1c 05 	lds	r24, 0x051C
    1ace:	88 23       	and	r24, r24
    1ad0:	59 f1       	breq	.+86     	; 0x1b28 <STOP_POINT_SET_OP+0x120>
        {
            STOP_OP_POINT = point;		//User adjust the configuration 
    1ad2:	10 93 df 03 	sts	0x03DF, r17

            FND_BLINK_FLAG = 1;
    1ad6:	e0 92 23 05 	sts	0x0523, r14
    1ada:	80 e2       	ldi	r24, 0x20	; 32
    1adc:	9e e4       	ldi	r25, 0x4E	; 78
    1ade:	fe 01       	movw	r30, r28
    1ae0:	31 97       	sbiw	r30, 0x01	; 1
    1ae2:	f1 f7       	brne	.-4      	; 0x1ae0 <STOP_POINT_SET_OP+0xd8>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ae4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ae6:	d9 f7       	brne	.-10     	; 0x1ade <STOP_POINT_SET_OP+0xd6>
            _delay_ms(2000);
            FND_BLINK_FLAG = 0;
    1ae8:	10 92 23 05 	sts	0x0523, r1

			ST = STOP_POINT_RESET;
    1aec:	f0 92 46 05 	sts	0x0546, r15
			if(SD_DETECTION_FLAG)
    1af0:	80 91 21 05 	lds	r24, 0x0521
    1af4:	88 23       	and	r24, r24
    1af6:	09 f4       	brne	.+2      	; 0x1afa <STOP_POINT_SET_OP+0xf2>
    1af8:	3e c0       	rjmp	.+124    	; 0x1b76 <STOP_POINT_SET_OP+0x16e>
			{
				if(!SDWR_OP())
    1afa:	0e 94 f5 09 	call	0x13ea	; 0x13ea <SDWR_OP>
    1afe:	88 23       	and	r24, r24
    1b00:	d1 f5       	brne	.+116    	; 0x1b76 <STOP_POINT_SET_OP+0x16e>
				{
					SD_DETECTION_FLAG = 0;
    1b02:	10 92 21 05 	sts	0x0521, r1
					f_close(&fo);
    1b06:	8f e8       	ldi	r24, 0x8F	; 143
    1b08:	97 e0       	ldi	r25, 0x07	; 7
    1b0a:	0e 94 bb 35 	call	0x6b76	; 0x6b76 <f_close>
					f_mount(0,"",0);
    1b0e:	80 e0       	ldi	r24, 0x00	; 0
    1b10:	90 e0       	ldi	r25, 0x00	; 0
    1b12:	66 e1       	ldi	r22, 0x16	; 22
    1b14:	73 e0       	ldi	r23, 0x03	; 3
    1b16:	40 e0       	ldi	r20, 0x00	; 0
    1b18:	0e 94 a7 1b 	call	0x374e	; 0x374e <f_mount>
					MSD_LED_OFF;
    1b1c:	80 91 65 00 	lds	r24, 0x0065
    1b20:	88 60       	ori	r24, 0x08	; 8
    1b22:	80 93 65 00 	sts	0x0065, r24
    1b26:	27 c0       	rjmp	.+78     	; 0x1b76 <STOP_POINT_SET_OP+0x16e>
				}
			}

        }
  
        else if(SET_SW_FLAG)   //SET_SW			//STOP_POINT_SET_OP()에서 리턴1이되려면 SET_SW_FLAG [SW0] ! 
    1b28:	80 91 1a 05 	lds	r24, 0x051A
    1b2c:	88 23       	and	r24, r24
    1b2e:	19 f1       	breq	.+70     	; 0x1b76 <STOP_POINT_SET_OP+0x16e>
        {
            ALL_FND_OFF;
    1b30:	15 ba       	out	0x15, r1	; 21
            TCCR2 = 0;
    1b32:	15 bc       	out	0x25, r1	; 37
    1b34:	80 e1       	ldi	r24, 0x10	; 16
    1b36:	97 e2       	ldi	r25, 0x27	; 39
    1b38:	28 ec       	ldi	r18, 0xC8	; 200
    1b3a:	30 e0       	ldi	r19, 0x00	; 0
    1b3c:	f9 01       	movw	r30, r18
    1b3e:	31 97       	sbiw	r30, 0x01	; 1
    1b40:	f1 f7       	brne	.-4      	; 0x1b3e <STOP_POINT_SET_OP+0x136>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b42:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b44:	d9 f7       	brne	.-10     	; 0x1b3c <STOP_POINT_SET_OP+0x134>
            _delay_ms(1000);
            TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);
    1b46:	8d e0       	ldi	r24, 0x0D	; 13
    1b48:	85 bd       	out	0x25, r24	; 37
            SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;
    1b4a:	10 92 1d 05 	sts	0x051D, r1
    1b4e:	80 91 1d 05 	lds	r24, 0x051D
    1b52:	80 93 1c 05 	sts	0x051C, r24
    1b56:	80 91 1c 05 	lds	r24, 0x051C
    1b5a:	80 93 1b 05 	sts	0x051B, r24
    1b5e:	80 91 1b 05 	lds	r24, 0x051B
    1b62:	80 93 1a 05 	sts	0x051A, r24
 
            EIFR = 0xff;    
    1b66:	8f ef       	ldi	r24, 0xFF	; 255
    1b68:	88 bf       	out	0x38, r24	; 56
 
            FND_OP(0);
    1b6a:	80 e0       	ldi	r24, 0x00	; 0
    1b6c:	90 e0       	ldi	r25, 0x00	; 0
    1b6e:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
    1b72:	81 e0       	ldi	r24, 0x01	; 1
    1b74:	1c c0       	rjmp	.+56     	; 0x1bae <STOP_POINT_SET_OP+0x1a6>
            return 1;                        
    1b76:	80 ed       	ldi	r24, 0xD0	; 208
    1b78:	97 e0       	ldi	r25, 0x07	; 7
    1b7a:	fe 01       	movw	r30, r28
    1b7c:	31 97       	sbiw	r30, 0x01	; 1
    1b7e:	f1 f7       	brne	.-4      	; 0x1b7c <STOP_POINT_SET_OP+0x174>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b80:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b82:	d9 f7       	brne	.-10     	; 0x1b7a <STOP_POINT_SET_OP+0x172>
        }
        _delay_ms(200);
        SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;
    1b84:	10 92 1d 05 	sts	0x051D, r1
    1b88:	80 91 1d 05 	lds	r24, 0x051D
    1b8c:	80 93 1c 05 	sts	0x051C, r24
    1b90:	80 91 1c 05 	lds	r24, 0x051C
    1b94:	80 93 1b 05 	sts	0x051B, r24
    1b98:	80 91 1b 05 	lds	r24, 0x051B
    1b9c:	80 93 1a 05 	sts	0x051A, r24
        FAULT_LED_OFF;
    1ba0:	80 91 65 00 	lds	r24, 0x0065
    1ba4:	80 61       	ori	r24, 0x10	; 16
    1ba6:	80 93 65 00 	sts	0x0065, r24
        EIFR = 0xff;   
    1baa:	08 bf       	out	0x38, r16	; 56
    1bac:	40 cf       	rjmp	.-384    	; 0x1a2e <STOP_POINT_SET_OP+0x26>
    }
}
    1bae:	df 91       	pop	r29
    1bb0:	cf 91       	pop	r28
    1bb2:	1f 91       	pop	r17
    1bb4:	0f 91       	pop	r16
    1bb6:	ff 90       	pop	r15
    1bb8:	ef 90       	pop	r14
    1bba:	08 95       	ret

00001bbc <START_POINT_SET_OP>:
}

/////////////////////////////////////////////////////////////////////////

unsigned char START_POINT_SET_OP(void)
{
    1bbc:	ef 92       	push	r14
    1bbe:	ff 92       	push	r15
    1bc0:	0f 93       	push	r16
    1bc2:	1f 93       	push	r17
    1bc4:	cf 93       	push	r28
    1bc6:	df 93       	push	r29
    unsigned char point = START_OP_POINT;
    1bc8:	10 91 de 03 	lds	r17, 0x03DE
    FND_OP(point);
    1bcc:	81 2f       	mov	r24, r17
    1bce:	90 e0       	ldi	r25, 0x00	; 0
    1bd0:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
            }
        }
        else if(OK_SW_FLAG)   //OK_SW
        {
            START_OP_POINT = point;
            FND_BLINK_FLAG = 1;
    1bd4:	ee 24       	eor	r14, r14
    1bd6:	e3 94       	inc	r14
    1bd8:	c8 ec       	ldi	r28, 0xC8	; 200
    1bda:	d0 e0       	ldi	r29, 0x00	; 0
            _delay_ms(2000);
            FND_BLINK_FLAG = 0;
			ST = START_POINT_RESET;
    1bdc:	88 e0       	ldi	r24, 0x08	; 8
    1bde:	f8 2e       	mov	r15, r24
            return 1;                        
        }
        _delay_ms(200);
        SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;
        FAULT_LED_OFF;
        EIFR = 0xff;     
    1be0:	0f ef       	ldi	r16, 0xFF	; 255
{
    unsigned char point = START_OP_POINT;
    FND_OP(point);
    while(1)
    {
        WD_ON(KEY_WD);
    1be2:	80 e0       	ldi	r24, 0x00	; 0
    1be4:	0e 94 75 03 	call	0x6ea	; 0x6ea <WD_ON>
    1be8:	18 c0       	rjmp	.+48     	; 0x1c1a <START_POINT_SET_OP+0x5e>
        while(!(SET_SW_FLAG|UP_SW_FLAG|OK_SW_FLAG|DOWN_SW_FLAG))
        {
            if(WD_FLAG)
    1bea:	80 91 26 05 	lds	r24, 0x0526
    1bee:	88 23       	and	r24, r24
    1bf0:	a1 f0       	breq	.+40     	; 0x1c1a <START_POINT_SET_OP+0x5e>
            {
                ALL_FND_OFF;
    1bf2:	15 ba       	out	0x15, r1	; 21
                TCCR0=0;
    1bf4:	13 be       	out	0x33, r1	; 51
                TCCR2 = 0;
    1bf6:	15 bc       	out	0x25, r1	; 37
    1bf8:	80 e1       	ldi	r24, 0x10	; 16
    1bfa:	97 e2       	ldi	r25, 0x27	; 39
    1bfc:	28 ec       	ldi	r18, 0xC8	; 200
    1bfe:	30 e0       	ldi	r19, 0x00	; 0
    1c00:	f9 01       	movw	r30, r18
    1c02:	31 97       	sbiw	r30, 0x01	; 1
    1c04:	f1 f7       	brne	.-4      	; 0x1c02 <START_POINT_SET_OP+0x46>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c06:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c08:	d9 f7       	brne	.-10     	; 0x1c00 <START_POINT_SET_OP+0x44>
                
				_delay_ms(1000);
                
				TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);  
    1c0a:	8d e0       	ldi	r24, 0x0D	; 13
    1c0c:	85 bd       	out	0x25, r24	; 37
                FND_OP(0);
    1c0e:	80 e0       	ldi	r24, 0x00	; 0
    1c10:	90 e0       	ldi	r25, 0x00	; 0
    1c12:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
    1c16:	80 e0       	ldi	r24, 0x00	; 0
    1c18:	b3 c0       	rjmp	.+358    	; 0x1d80 <START_POINT_SET_OP+0x1c4>
    unsigned char point = START_OP_POINT;
    FND_OP(point);
    while(1)
    {
        WD_ON(KEY_WD);
        while(!(SET_SW_FLAG|UP_SW_FLAG|OK_SW_FLAG|DOWN_SW_FLAG))
    1c1a:	30 91 1a 05 	lds	r19, 0x051A
    1c1e:	80 91 1b 05 	lds	r24, 0x051B
    1c22:	90 91 1c 05 	lds	r25, 0x051C
    1c26:	20 91 1d 05 	lds	r18, 0x051D
    1c2a:	83 2b       	or	r24, r19
    1c2c:	89 2b       	or	r24, r25
    1c2e:	82 2b       	or	r24, r18
    1c30:	e1 f2       	breq	.-72     	; 0x1bea <START_POINT_SET_OP+0x2e>
				TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);  
                FND_OP(0);
                return 0;    
            }
        }
        if(UP_SW_FLAG)        //UP_SW
    1c32:	80 91 1b 05 	lds	r24, 0x051B
    1c36:	88 23       	and	r24, r24
    1c38:	89 f0       	breq	.+34     	; 0x1c5c <START_POINT_SET_OP+0xa0>
        {
            if(point < WARNING_HIGH_POINT)
    1c3a:	18 3c       	cpi	r17, 0xC8	; 200
    1c3c:	10 f4       	brcc	.+4      	; 0x1c42 <START_POINT_SET_OP+0x86>
            {
                point += 5;
    1c3e:	1b 5f       	subi	r17, 0xFB	; 251
    1c40:	1b c0       	rjmp	.+54     	; 0x1c78 <START_POINT_SET_OP+0xbc>
                FND_OP(point);
            }
            else
            {
                FAULT_LED_ON;
    1c42:	80 91 65 00 	lds	r24, 0x0065
    1c46:	8f 70       	andi	r24, 0x0F	; 15
    1c48:	80 93 65 00 	sts	0x0065, r24
    1c4c:	80 e4       	ldi	r24, 0x40	; 64
    1c4e:	9f e1       	ldi	r25, 0x1F	; 31
    1c50:	fe 01       	movw	r30, r28
    1c52:	31 97       	sbiw	r30, 0x01	; 1
    1c54:	f1 f7       	brne	.-4      	; 0x1c52 <START_POINT_SET_OP+0x96>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c56:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c58:	d9 f7       	brne	.-10     	; 0x1c50 <START_POINT_SET_OP+0x94>
    1c5a:	76 c0       	rjmp	.+236    	; 0x1d48 <START_POINT_SET_OP+0x18c>
                _delay_ms(800);                
            }                
        }
        else if(DOWN_SW_FLAG)   //DOWN_SW
    1c5c:	80 91 1d 05 	lds	r24, 0x051D
    1c60:	88 23       	and	r24, r24
    1c62:	e1 f0       	breq	.+56     	; 0x1c9c <START_POINT_SET_OP+0xe0>
        {
            if(point > STOP_OP_POINT+5)
    1c64:	80 91 df 03 	lds	r24, 0x03DF
    1c68:	21 2f       	mov	r18, r17
    1c6a:	30 e0       	ldi	r19, 0x00	; 0
    1c6c:	90 e0       	ldi	r25, 0x00	; 0
    1c6e:	05 96       	adiw	r24, 0x05	; 5
    1c70:	82 17       	cp	r24, r18
    1c72:	93 07       	cpc	r25, r19
    1c74:	34 f4       	brge	.+12     	; 0x1c82 <START_POINT_SET_OP+0xc6>
            {
                point -= 5;
    1c76:	15 50       	subi	r17, 0x05	; 5
                FND_OP(point);
    1c78:	81 2f       	mov	r24, r17
    1c7a:	90 e0       	ldi	r25, 0x00	; 0
    1c7c:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
    1c80:	63 c0       	rjmp	.+198    	; 0x1d48 <START_POINT_SET_OP+0x18c>
            }
            else
            {
                FAULT_LED_ON;
    1c82:	80 91 65 00 	lds	r24, 0x0065
    1c86:	8f 70       	andi	r24, 0x0F	; 15
    1c88:	80 93 65 00 	sts	0x0065, r24
    1c8c:	80 e4       	ldi	r24, 0x40	; 64
    1c8e:	9f e1       	ldi	r25, 0x1F	; 31
    1c90:	fe 01       	movw	r30, r28
    1c92:	31 97       	sbiw	r30, 0x01	; 1
    1c94:	f1 f7       	brne	.-4      	; 0x1c92 <START_POINT_SET_OP+0xd6>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c96:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c98:	d9 f7       	brne	.-10     	; 0x1c90 <START_POINT_SET_OP+0xd4>
    1c9a:	56 c0       	rjmp	.+172    	; 0x1d48 <START_POINT_SET_OP+0x18c>
                _delay_ms(800);
            }
        }
        else if(OK_SW_FLAG)   //OK_SW
    1c9c:	80 91 1c 05 	lds	r24, 0x051C
    1ca0:	88 23       	and	r24, r24
    1ca2:	59 f1       	breq	.+86     	; 0x1cfa <START_POINT_SET_OP+0x13e>
        {
            START_OP_POINT = point;
    1ca4:	10 93 de 03 	sts	0x03DE, r17
            FND_BLINK_FLAG = 1;
    1ca8:	e0 92 23 05 	sts	0x0523, r14
    1cac:	80 e2       	ldi	r24, 0x20	; 32
    1cae:	9e e4       	ldi	r25, 0x4E	; 78
    1cb0:	fe 01       	movw	r30, r28
    1cb2:	31 97       	sbiw	r30, 0x01	; 1
    1cb4:	f1 f7       	brne	.-4      	; 0x1cb2 <START_POINT_SET_OP+0xf6>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1cb6:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1cb8:	d9 f7       	brne	.-10     	; 0x1cb0 <START_POINT_SET_OP+0xf4>
            _delay_ms(2000);
            FND_BLINK_FLAG = 0;
    1cba:	10 92 23 05 	sts	0x0523, r1
			ST = START_POINT_RESET;
    1cbe:	f0 92 46 05 	sts	0x0546, r15
			if(SD_DETECTION_FLAG)
    1cc2:	80 91 21 05 	lds	r24, 0x0521
    1cc6:	88 23       	and	r24, r24
    1cc8:	09 f4       	brne	.+2      	; 0x1ccc <START_POINT_SET_OP+0x110>
    1cca:	3e c0       	rjmp	.+124    	; 0x1d48 <START_POINT_SET_OP+0x18c>
			{
				if(!SDWR_OP())
    1ccc:	0e 94 f5 09 	call	0x13ea	; 0x13ea <SDWR_OP>
    1cd0:	88 23       	and	r24, r24
    1cd2:	d1 f5       	brne	.+116    	; 0x1d48 <START_POINT_SET_OP+0x18c>
				{
					SD_DETECTION_FLAG = 0;
    1cd4:	10 92 21 05 	sts	0x0521, r1
					f_close(&fo);
    1cd8:	8f e8       	ldi	r24, 0x8F	; 143
    1cda:	97 e0       	ldi	r25, 0x07	; 7
    1cdc:	0e 94 bb 35 	call	0x6b76	; 0x6b76 <f_close>
					f_mount(0,"",0);
    1ce0:	80 e0       	ldi	r24, 0x00	; 0
    1ce2:	90 e0       	ldi	r25, 0x00	; 0
    1ce4:	66 e1       	ldi	r22, 0x16	; 22
    1ce6:	73 e0       	ldi	r23, 0x03	; 3
    1ce8:	40 e0       	ldi	r20, 0x00	; 0
    1cea:	0e 94 a7 1b 	call	0x374e	; 0x374e <f_mount>
					MSD_LED_OFF;
    1cee:	80 91 65 00 	lds	r24, 0x0065
    1cf2:	88 60       	ori	r24, 0x08	; 8
    1cf4:	80 93 65 00 	sts	0x0065, r24
    1cf8:	27 c0       	rjmp	.+78     	; 0x1d48 <START_POINT_SET_OP+0x18c>
				}
			}
        }
        else if(SET_SW_FLAG)   //SET_SW
    1cfa:	80 91 1a 05 	lds	r24, 0x051A
    1cfe:	88 23       	and	r24, r24
    1d00:	19 f1       	breq	.+70     	; 0x1d48 <START_POINT_SET_OP+0x18c>
        {
            ALL_FND_OFF;
    1d02:	15 ba       	out	0x15, r1	; 21
            TCCR2 = 0;
    1d04:	15 bc       	out	0x25, r1	; 37
    1d06:	80 e1       	ldi	r24, 0x10	; 16
    1d08:	97 e2       	ldi	r25, 0x27	; 39
    1d0a:	28 ec       	ldi	r18, 0xC8	; 200
    1d0c:	30 e0       	ldi	r19, 0x00	; 0
    1d0e:	f9 01       	movw	r30, r18
    1d10:	31 97       	sbiw	r30, 0x01	; 1
    1d12:	f1 f7       	brne	.-4      	; 0x1d10 <START_POINT_SET_OP+0x154>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d14:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d16:	d9 f7       	brne	.-10     	; 0x1d0e <START_POINT_SET_OP+0x152>
            _delay_ms(1000);
            TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);
    1d18:	8d e0       	ldi	r24, 0x0D	; 13
    1d1a:	85 bd       	out	0x25, r24	; 37
            SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;
    1d1c:	10 92 1d 05 	sts	0x051D, r1
    1d20:	80 91 1d 05 	lds	r24, 0x051D
    1d24:	80 93 1c 05 	sts	0x051C, r24
    1d28:	80 91 1c 05 	lds	r24, 0x051C
    1d2c:	80 93 1b 05 	sts	0x051B, r24
    1d30:	80 91 1b 05 	lds	r24, 0x051B
    1d34:	80 93 1a 05 	sts	0x051A, r24
            EIFR = 0xff;    
    1d38:	8f ef       	ldi	r24, 0xFF	; 255
    1d3a:	88 bf       	out	0x38, r24	; 56
            FND_OP(0);
    1d3c:	80 e0       	ldi	r24, 0x00	; 0
    1d3e:	90 e0       	ldi	r25, 0x00	; 0
    1d40:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
    1d44:	81 e0       	ldi	r24, 0x01	; 1
    1d46:	1c c0       	rjmp	.+56     	; 0x1d80 <START_POINT_SET_OP+0x1c4>
            return 1;                        
    1d48:	80 ed       	ldi	r24, 0xD0	; 208
    1d4a:	97 e0       	ldi	r25, 0x07	; 7
    1d4c:	fe 01       	movw	r30, r28
    1d4e:	31 97       	sbiw	r30, 0x01	; 1
    1d50:	f1 f7       	brne	.-4      	; 0x1d4e <START_POINT_SET_OP+0x192>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d52:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d54:	d9 f7       	brne	.-10     	; 0x1d4c <START_POINT_SET_OP+0x190>
        }
        _delay_ms(200);
        SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;
    1d56:	10 92 1d 05 	sts	0x051D, r1
    1d5a:	80 91 1d 05 	lds	r24, 0x051D
    1d5e:	80 93 1c 05 	sts	0x051C, r24
    1d62:	80 91 1c 05 	lds	r24, 0x051C
    1d66:	80 93 1b 05 	sts	0x051B, r24
    1d6a:	80 91 1b 05 	lds	r24, 0x051B
    1d6e:	80 93 1a 05 	sts	0x051A, r24
        FAULT_LED_OFF;
    1d72:	80 91 65 00 	lds	r24, 0x0065
    1d76:	80 61       	ori	r24, 0x10	; 16
    1d78:	80 93 65 00 	sts	0x0065, r24
        EIFR = 0xff;     
    1d7c:	08 bf       	out	0x38, r16	; 56
    1d7e:	31 cf       	rjmp	.-414    	; 0x1be2 <START_POINT_SET_OP+0x26>
    }  
}
    1d80:	df 91       	pop	r29
    1d82:	cf 91       	pop	r28
    1d84:	1f 91       	pop	r17
    1d86:	0f 91       	pop	r16
    1d88:	ff 90       	pop	r15
    1d8a:	ef 90       	pop	r14
    1d8c:	08 95       	ret

00001d8e <VALVE_CH_SET_OP>:
        EIFR = 0xff;       
    }
}
/////////////////////////////////////////////////////////////////////////
void VALVE_CH_SET_OP(void)
{
    1d8e:	ef 92       	push	r14
    1d90:	ff 92       	push	r15
    1d92:	0f 93       	push	r16
    1d94:	1f 93       	push	r17
    1d96:	cf 93       	push	r28
    1d98:	df 93       	push	r29
//np
							//3
   unsigned char CH_BUF = DEFAULT_VALVE_CH;
				//VALVE CH_ SET		

    FND_OP(SLA_VAL_CH[0]);
    1d9a:	80 91 b3 03 	lds	r24, 0x03B3
    1d9e:	90 91 b4 03 	lds	r25, 0x03B4
    1da2:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
    1da6:	13 e0       	ldi	r17, 0x03	; 3
        else if(OK_SW_FLAG)   //OK_SW
        {
			//np1
            SLA_VAL_CH[0] = CH_BUF;		//SW0(OK_SW)를 누르면 CH_BUF를 SLA_VAL_CH[0]에 값을 넣음.
			
			ST = VALVE_CH_RESET;		//ST = VALVE_CH_RESET
    1da8:	96 e0       	ldi	r25, 0x06	; 6
    1daa:	f9 2e       	mov	r15, r25
					f_mount(0,"",0);
					MSD_LED_OFF;
				}
			}

            FND_BLINK_FLAG = 1;
    1dac:	ee 24       	eor	r14, r14
    1dae:	e3 94       	inc	r14
    1db0:	c8 ec       	ldi	r28, 0xC8	; 200
    1db2:	d0 e0       	ldi	r29, 0x00	; 0
            return;                        
        }
        _delay_ms(200);
        SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;
        FAULT_LED_OFF;
        EIFR = 0xff;     
    1db4:	0f ef       	ldi	r16, 0xFF	; 255
				//VALVE CH_ SET		

    FND_OP(SLA_VAL_CH[0]);
    while(1)
    {
        WD_ON(KEY_WD);			//워치독 온
    1db6:	80 e0       	ldi	r24, 0x00	; 0
    1db8:	0e 94 75 03 	call	0x6ea	; 0x6ea <WD_ON>
    1dbc:	13 c0       	rjmp	.+38     	; 0x1de4 <VALVE_CH_SET_OP+0x56>
        
		while(!(SET_SW_FLAG|UP_SW_FLAG|OK_SW_FLAG|DOWN_SW_FLAG))	//스위치 눌린거 없을때XXXX what? 
        {
            if(WD_FLAG)	//그리고 워치독 플래그가 들어올때
    1dbe:	80 91 26 05 	lds	r24, 0x0526
    1dc2:	88 23       	and	r24, r24
    1dc4:	79 f0       	breq	.+30     	; 0x1de4 <VALVE_CH_SET_OP+0x56>
            {
                ALL_FND_OFF;
    1dc6:	15 ba       	out	0x15, r1	; 21
	            //#define ALL_FND_OFF     (FND = 0x00)
		 
			    TCCR0 = 0;
    1dc8:	13 be       	out	0x33, r1	; 51
                TCCR2 = 0;
    1dca:	15 bc       	out	0x25, r1	; 37
    1dcc:	80 e1       	ldi	r24, 0x10	; 16
    1dce:	97 e2       	ldi	r25, 0x27	; 39
    1dd0:	28 ec       	ldi	r18, 0xC8	; 200
    1dd2:	30 e0       	ldi	r19, 0x00	; 0
    1dd4:	f9 01       	movw	r30, r18
    1dd6:	31 97       	sbiw	r30, 0x01	; 1
    1dd8:	f1 f7       	brne	.-4      	; 0x1dd6 <VALVE_CH_SET_OP+0x48>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1dda:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ddc:	d9 f7       	brne	.-10     	; 0x1dd4 <VALVE_CH_SET_OP+0x46>

                _delay_ms(1000);
                
				TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);  
    1dde:	8d e0       	ldi	r24, 0x0D	; 13
    1de0:	85 bd       	out	0x25, r24	; 37
    1de2:	8d c0       	rjmp	.+282    	; 0x1efe <VALVE_CH_SET_OP+0x170>
    FND_OP(SLA_VAL_CH[0]);
    while(1)
    {
        WD_ON(KEY_WD);			//워치독 온
        
		while(!(SET_SW_FLAG|UP_SW_FLAG|OK_SW_FLAG|DOWN_SW_FLAG))	//스위치 눌린거 없을때XXXX what? 
    1de4:	30 91 1a 05 	lds	r19, 0x051A
    1de8:	80 91 1b 05 	lds	r24, 0x051B
    1dec:	90 91 1c 05 	lds	r25, 0x051C
    1df0:	20 91 1d 05 	lds	r18, 0x051D
    1df4:	83 2b       	or	r24, r19
    1df6:	89 2b       	or	r24, r25
    1df8:	82 2b       	or	r24, r18
    1dfa:	09 f3       	breq	.-62     	; 0x1dbe <VALVE_CH_SET_OP+0x30>
                FND_OP(0);
                return;    
            }
        }

        if(UP_SW_FLAG)        //UP_SW
    1dfc:	80 91 1b 05 	lds	r24, 0x051B
    1e00:	88 23       	and	r24, r24
    1e02:	89 f0       	breq	.+34     	; 0x1e26 <VALVE_CH_SET_OP+0x98>
        {
            if(CH_BUF < 20)
    1e04:	14 31       	cpi	r17, 0x14	; 20
    1e06:	10 f4       	brcc	.+4      	; 0x1e0c <VALVE_CH_SET_OP+0x7e>
            {
                CH_BUF += 1;
    1e08:	1f 5f       	subi	r17, 0xFF	; 255
    1e0a:	14 c0       	rjmp	.+40     	; 0x1e34 <VALVE_CH_SET_OP+0xa6>
                FND_OP(CH_BUF);
            }
            else
            {
                FAULT_LED_ON;
    1e0c:	80 91 65 00 	lds	r24, 0x0065
    1e10:	8f 70       	andi	r24, 0x0F	; 15
    1e12:	80 93 65 00 	sts	0x0065, r24
    1e16:	80 e4       	ldi	r24, 0x40	; 64
    1e18:	9f e1       	ldi	r25, 0x1F	; 31
    1e1a:	fe 01       	movw	r30, r28
    1e1c:	31 97       	sbiw	r30, 0x01	; 1
    1e1e:	f1 f7       	brne	.-4      	; 0x1e1c <VALVE_CH_SET_OP+0x8e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e20:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e22:	d9 f7       	brne	.-10     	; 0x1e1a <VALVE_CH_SET_OP+0x8c>
    1e24:	77 c0       	rjmp	.+238    	; 0x1f14 <VALVE_CH_SET_OP+0x186>
             	//#define FAULT_LED_ON    (PORTG &= 0x0f)
			    _delay_ms(800);                
            }                
        }
        else if(DOWN_SW_FLAG)   //DOWN_SW
    1e26:	80 91 1d 05 	lds	r24, 0x051D
    1e2a:	88 23       	and	r24, r24
    1e2c:	a9 f0       	breq	.+42     	; 0x1e58 <VALVE_CH_SET_OP+0xca>
        {
            if(CH_BUF > 1)
    1e2e:	12 30       	cpi	r17, 0x02	; 2
    1e30:	30 f0       	brcs	.+12     	; 0x1e3e <VALVE_CH_SET_OP+0xb0>
            {
                CH_BUF -= 1;
    1e32:	11 50       	subi	r17, 0x01	; 1
                FND_OP(CH_BUF);
    1e34:	81 2f       	mov	r24, r17
    1e36:	90 e0       	ldi	r25, 0x00	; 0
    1e38:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
    1e3c:	6b c0       	rjmp	.+214    	; 0x1f14 <VALVE_CH_SET_OP+0x186>
            }
            else
            {
                FAULT_LED_ON;
    1e3e:	80 91 65 00 	lds	r24, 0x0065
    1e42:	8f 70       	andi	r24, 0x0F	; 15
    1e44:	80 93 65 00 	sts	0x0065, r24
    1e48:	80 e4       	ldi	r24, 0x40	; 64
    1e4a:	9f e1       	ldi	r25, 0x1F	; 31
    1e4c:	fe 01       	movw	r30, r28
    1e4e:	31 97       	sbiw	r30, 0x01	; 1
    1e50:	f1 f7       	brne	.-4      	; 0x1e4e <VALVE_CH_SET_OP+0xc0>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e52:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e54:	d9 f7       	brne	.-10     	; 0x1e4c <VALVE_CH_SET_OP+0xbe>
    1e56:	5e c0       	rjmp	.+188    	; 0x1f14 <VALVE_CH_SET_OP+0x186>
                _delay_ms(800);
            }
        }
        else if(OK_SW_FLAG)   //OK_SW
    1e58:	80 91 1c 05 	lds	r24, 0x051C
    1e5c:	88 23       	and	r24, r24
    1e5e:	71 f1       	breq	.+92     	; 0x1ebc <VALVE_CH_SET_OP+0x12e>
        {
			//np1
            SLA_VAL_CH[0] = CH_BUF;		//SW0(OK_SW)를 누르면 CH_BUF를 SLA_VAL_CH[0]에 값을 넣음.
    1e60:	81 2f       	mov	r24, r17
    1e62:	90 e0       	ldi	r25, 0x00	; 0
    1e64:	90 93 b4 03 	sts	0x03B4, r25
    1e68:	80 93 b3 03 	sts	0x03B3, r24
			
			ST = VALVE_CH_RESET;		//ST = VALVE_CH_RESET
    1e6c:	f0 92 46 05 	sts	0x0546, r15
											//==> LOAD /SD_CARD 
			if(SD_DETECTION_FLAG)
    1e70:	80 91 21 05 	lds	r24, 0x0521
    1e74:	88 23       	and	r24, r24
    1e76:	b1 f0       	breq	.+44     	; 0x1ea4 <VALVE_CH_SET_OP+0x116>
			{
				if(!SDWR_OP())
    1e78:	0e 94 f5 09 	call	0x13ea	; 0x13ea <SDWR_OP>
    1e7c:	88 23       	and	r24, r24
    1e7e:	91 f4       	brne	.+36     	; 0x1ea4 <VALVE_CH_SET_OP+0x116>
				{
					SD_DETECTION_FLAG = 0;
    1e80:	10 92 21 05 	sts	0x0521, r1
					f_close(&fo);
    1e84:	8f e8       	ldi	r24, 0x8F	; 143
    1e86:	97 e0       	ldi	r25, 0x07	; 7
    1e88:	0e 94 bb 35 	call	0x6b76	; 0x6b76 <f_close>
					f_mount(0,"",0);
    1e8c:	80 e0       	ldi	r24, 0x00	; 0
    1e8e:	90 e0       	ldi	r25, 0x00	; 0
    1e90:	66 e1       	ldi	r22, 0x16	; 22
    1e92:	73 e0       	ldi	r23, 0x03	; 3
    1e94:	40 e0       	ldi	r20, 0x00	; 0
    1e96:	0e 94 a7 1b 	call	0x374e	; 0x374e <f_mount>
					MSD_LED_OFF;
    1e9a:	80 91 65 00 	lds	r24, 0x0065
    1e9e:	88 60       	ori	r24, 0x08	; 8
    1ea0:	80 93 65 00 	sts	0x0065, r24
				}
			}

            FND_BLINK_FLAG = 1;
    1ea4:	e0 92 23 05 	sts	0x0523, r14
    1ea8:	80 e2       	ldi	r24, 0x20	; 32
    1eaa:	9e e4       	ldi	r25, 0x4E	; 78
    1eac:	fe 01       	movw	r30, r28
    1eae:	31 97       	sbiw	r30, 0x01	; 1
    1eb0:	f1 f7       	brne	.-4      	; 0x1eae <VALVE_CH_SET_OP+0x120>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1eb2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1eb4:	d9 f7       	brne	.-10     	; 0x1eac <VALVE_CH_SET_OP+0x11e>
            _delay_ms(2000);
            FND_BLINK_FLAG = 0;
    1eb6:	10 92 23 05 	sts	0x0523, r1
    1eba:	2c c0       	rjmp	.+88     	; 0x1f14 <VALVE_CH_SET_OP+0x186>

        }
        else if(SET_SW_FLAG)   //SET_SW
    1ebc:	80 91 1a 05 	lds	r24, 0x051A
    1ec0:	88 23       	and	r24, r24
    1ec2:	41 f1       	breq	.+80     	; 0x1f14 <VALVE_CH_SET_OP+0x186>
        {
            ALL_FND_OFF;
    1ec4:	15 ba       	out	0x15, r1	; 21
            TCCR2 = 0;
    1ec6:	15 bc       	out	0x25, r1	; 37
    1ec8:	80 e1       	ldi	r24, 0x10	; 16
    1eca:	97 e2       	ldi	r25, 0x27	; 39
    1ecc:	28 ec       	ldi	r18, 0xC8	; 200
    1ece:	30 e0       	ldi	r19, 0x00	; 0
    1ed0:	f9 01       	movw	r30, r18
    1ed2:	31 97       	sbiw	r30, 0x01	; 1
    1ed4:	f1 f7       	brne	.-4      	; 0x1ed2 <VALVE_CH_SET_OP+0x144>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ed6:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ed8:	d9 f7       	brne	.-10     	; 0x1ed0 <VALVE_CH_SET_OP+0x142>
            _delay_ms(1000);
            TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);
    1eda:	8d e0       	ldi	r24, 0x0D	; 13
    1edc:	85 bd       	out	0x25, r24	; 37
            SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;
    1ede:	10 92 1d 05 	sts	0x051D, r1
    1ee2:	80 91 1d 05 	lds	r24, 0x051D
    1ee6:	80 93 1c 05 	sts	0x051C, r24
    1eea:	80 91 1c 05 	lds	r24, 0x051C
    1eee:	80 93 1b 05 	sts	0x051B, r24
    1ef2:	80 91 1b 05 	lds	r24, 0x051B
    1ef6:	80 93 1a 05 	sts	0x051A, r24
            EIFR = 0xff;		//External Interrupt Flag Register = 0xff;
    1efa:	8f ef       	ldi	r24, 0xFF	; 255
    1efc:	88 bf       	out	0x38, r24	; 56
								//To clear External Interrupt EIFR = 0xff. 
								//why?
						
            FND_OP(0);
    1efe:	80 e0       	ldi	r24, 0x00	; 0
    1f00:	90 e0       	ldi	r25, 0x00	; 0
    1f02:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
        _delay_ms(200);
        SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;
        FAULT_LED_OFF;
        EIFR = 0xff;     
    }  
}
    1f06:	df 91       	pop	r29
    1f08:	cf 91       	pop	r28
    1f0a:	1f 91       	pop	r17
    1f0c:	0f 91       	pop	r16
    1f0e:	ff 90       	pop	r15
    1f10:	ef 90       	pop	r14
    1f12:	08 95       	ret
            EIFR = 0xff;		//External Interrupt Flag Register = 0xff;
								//To clear External Interrupt EIFR = 0xff. 
								//why?
						
            FND_OP(0);
            return;                        
    1f14:	80 ed       	ldi	r24, 0xD0	; 208
    1f16:	97 e0       	ldi	r25, 0x07	; 7
    1f18:	fe 01       	movw	r30, r28
    1f1a:	31 97       	sbiw	r30, 0x01	; 1
    1f1c:	f1 f7       	brne	.-4      	; 0x1f1a <VALVE_CH_SET_OP+0x18c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f1e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f20:	d9 f7       	brne	.-10     	; 0x1f18 <VALVE_CH_SET_OP+0x18a>
        }
        _delay_ms(200);
        SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;
    1f22:	10 92 1d 05 	sts	0x051D, r1
    1f26:	80 91 1d 05 	lds	r24, 0x051D
    1f2a:	80 93 1c 05 	sts	0x051C, r24
    1f2e:	80 91 1c 05 	lds	r24, 0x051C
    1f32:	80 93 1b 05 	sts	0x051B, r24
    1f36:	80 91 1b 05 	lds	r24, 0x051B
    1f3a:	80 93 1a 05 	sts	0x051A, r24
        FAULT_LED_OFF;
    1f3e:	80 91 65 00 	lds	r24, 0x0065
    1f42:	80 61       	ori	r24, 0x10	; 16
    1f44:	80 93 65 00 	sts	0x0065, r24
        EIFR = 0xff;     
    1f48:	08 bf       	out	0x38, r16	; 56
    1f4a:	35 cf       	rjmp	.-406    	; 0x1db6 <VALVE_CH_SET_OP+0x28>

00001f4c <OFF_TIME_SET_OP>:
        EIFR = 0xff;       
    }
}
/////////////////////////////////////////////////////////////////////////
unsigned char OFF_TIME_SET_OP(void)
{
    1f4c:	ef 92       	push	r14
    1f4e:	ff 92       	push	r15
    1f50:	0f 93       	push	r16
    1f52:	1f 93       	push	r17
    1f54:	cf 93       	push	r28
    1f56:	df 93       	push	r29
    unsigned char TIME_BUF = OFF_TIME;
    1f58:	80 91 d8 03 	lds	r24, 0x03D8
    1f5c:	90 91 d9 03 	lds	r25, 0x03D9
    1f60:	18 2f       	mov	r17, r24
    FND_OP(OFF_TIME);
    1f62:	80 91 d8 03 	lds	r24, 0x03D8
    1f66:	90 91 d9 03 	lds	r25, 0x03D9
    1f6a:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
            }
        }
        else if(OK_SW_FLAG)   //OK_SW
        {
            OFF_TIME = (unsigned long)TIME_BUF;
            FND_BLINK_FLAG = 1;
    1f6e:	ee 24       	eor	r14, r14
    1f70:	e3 94       	inc	r14
    1f72:	c8 ec       	ldi	r28, 0xC8	; 200
    1f74:	d0 e0       	ldi	r29, 0x00	; 0
            _delay_ms(2000);
            FND_BLINK_FLAG = 0;
			ST = OFF_TIME_RESET;
    1f76:	25 e0       	ldi	r18, 0x05	; 5
    1f78:	f2 2e       	mov	r15, r18
            return 1;                        
        }        
        _delay_ms(200);
        SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;
        FAULT_LED_OFF;
        EIFR = 0xff;       
    1f7a:	0f ef       	ldi	r16, 0xFF	; 255
{
    unsigned char TIME_BUF = OFF_TIME;
    FND_OP(OFF_TIME);
    while(1)
    {
        WD_ON(KEY_WD);
    1f7c:	80 e0       	ldi	r24, 0x00	; 0
    1f7e:	0e 94 75 03 	call	0x6ea	; 0x6ea <WD_ON>
    1f82:	18 c0       	rjmp	.+48     	; 0x1fb4 <OFF_TIME_SET_OP+0x68>
        while(!(SET_SW_FLAG|UP_SW_FLAG|OK_SW_FLAG|DOWN_SW_FLAG))
        {
            if(WD_FLAG)
    1f84:	80 91 26 05 	lds	r24, 0x0526
    1f88:	88 23       	and	r24, r24
    1f8a:	a1 f0       	breq	.+40     	; 0x1fb4 <OFF_TIME_SET_OP+0x68>
            {
                
				ALL_FND_OFF;
    1f8c:	15 ba       	out	0x15, r1	; 21
                TCCR0 = 0;
    1f8e:	13 be       	out	0x33, r1	; 51
                TCCR2 = 0;
    1f90:	15 bc       	out	0x25, r1	; 37
    1f92:	80 e1       	ldi	r24, 0x10	; 16
    1f94:	97 e2       	ldi	r25, 0x27	; 39
    1f96:	28 ec       	ldi	r18, 0xC8	; 200
    1f98:	30 e0       	ldi	r19, 0x00	; 0
    1f9a:	f9 01       	movw	r30, r18
    1f9c:	31 97       	sbiw	r30, 0x01	; 1
    1f9e:	f1 f7       	brne	.-4      	; 0x1f9c <OFF_TIME_SET_OP+0x50>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1fa0:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1fa2:	d9 f7       	brne	.-10     	; 0x1f9a <OFF_TIME_SET_OP+0x4e>
                
				_delay_ms(1000);
                
				TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);     
    1fa4:	8d e0       	ldi	r24, 0x0D	; 13
    1fa6:	85 bd       	out	0x25, r24	; 37
                FND_OP(0);
    1fa8:	80 e0       	ldi	r24, 0x00	; 0
    1faa:	90 e0       	ldi	r25, 0x00	; 0
    1fac:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
    1fb0:	80 e0       	ldi	r24, 0x00	; 0
    1fb2:	b0 c0       	rjmp	.+352    	; 0x2114 <OFF_TIME_SET_OP+0x1c8>
    unsigned char TIME_BUF = OFF_TIME;
    FND_OP(OFF_TIME);
    while(1)
    {
        WD_ON(KEY_WD);
        while(!(SET_SW_FLAG|UP_SW_FLAG|OK_SW_FLAG|DOWN_SW_FLAG))
    1fb4:	30 91 1a 05 	lds	r19, 0x051A
    1fb8:	80 91 1b 05 	lds	r24, 0x051B
    1fbc:	90 91 1c 05 	lds	r25, 0x051C
    1fc0:	20 91 1d 05 	lds	r18, 0x051D
    1fc4:	83 2b       	or	r24, r19
    1fc6:	89 2b       	or	r24, r25
    1fc8:	82 2b       	or	r24, r18
    1fca:	e1 f2       	breq	.-72     	; 0x1f84 <OFF_TIME_SET_OP+0x38>
				TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);     
                FND_OP(0);
                return 0;    
            }
        }
        if(UP_SW_FLAG)        //UP_SW
    1fcc:	80 91 1b 05 	lds	r24, 0x051B
    1fd0:	88 23       	and	r24, r24
    1fd2:	89 f0       	breq	.+34     	; 0x1ff6 <OFF_TIME_SET_OP+0xaa>
        {
            if(TIME_BUF < 100)
    1fd4:	14 36       	cpi	r17, 0x64	; 100
    1fd6:	10 f4       	brcc	.+4      	; 0x1fdc <OFF_TIME_SET_OP+0x90>
            {
                TIME_BUF += 5;
    1fd8:	1b 5f       	subi	r17, 0xFB	; 251
    1fda:	14 c0       	rjmp	.+40     	; 0x2004 <OFF_TIME_SET_OP+0xb8>
                FND_OP(TIME_BUF);          
            }
            else                                 
            {
                FAULT_LED_ON;
    1fdc:	80 91 65 00 	lds	r24, 0x0065
    1fe0:	8f 70       	andi	r24, 0x0F	; 15
    1fe2:	80 93 65 00 	sts	0x0065, r24
    1fe6:	80 e4       	ldi	r24, 0x40	; 64
    1fe8:	9f e1       	ldi	r25, 0x1F	; 31
    1fea:	fe 01       	movw	r30, r28
    1fec:	31 97       	sbiw	r30, 0x01	; 1
    1fee:	f1 f7       	brne	.-4      	; 0x1fec <OFF_TIME_SET_OP+0xa0>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ff0:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ff2:	d9 f7       	brne	.-10     	; 0x1fea <OFF_TIME_SET_OP+0x9e>
    1ff4:	73 c0       	rjmp	.+230    	; 0x20dc <OFF_TIME_SET_OP+0x190>
                _delay_ms(800);
            }               
        }
        else if(DOWN_SW_FLAG)   //DOWN_SW
    1ff6:	80 91 1d 05 	lds	r24, 0x051D
    1ffa:	88 23       	and	r24, r24
    1ffc:	a9 f0       	breq	.+42     	; 0x2028 <OFF_TIME_SET_OP+0xdc>
        {
            if(TIME_BUF > 5)
    1ffe:	16 30       	cpi	r17, 0x06	; 6
    2000:	30 f0       	brcs	.+12     	; 0x200e <OFF_TIME_SET_OP+0xc2>
            {
                TIME_BUF -= 5;
    2002:	15 50       	subi	r17, 0x05	; 5
                FND_OP(TIME_BUF);
    2004:	81 2f       	mov	r24, r17
    2006:	90 e0       	ldi	r25, 0x00	; 0
    2008:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
    200c:	67 c0       	rjmp	.+206    	; 0x20dc <OFF_TIME_SET_OP+0x190>
            }
            else
            {
                FAULT_LED_ON;
    200e:	80 91 65 00 	lds	r24, 0x0065
    2012:	8f 70       	andi	r24, 0x0F	; 15
    2014:	80 93 65 00 	sts	0x0065, r24
    2018:	80 e4       	ldi	r24, 0x40	; 64
    201a:	9f e1       	ldi	r25, 0x1F	; 31
    201c:	fe 01       	movw	r30, r28
    201e:	31 97       	sbiw	r30, 0x01	; 1
    2020:	f1 f7       	brne	.-4      	; 0x201e <OFF_TIME_SET_OP+0xd2>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2022:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2024:	d9 f7       	brne	.-10     	; 0x201c <OFF_TIME_SET_OP+0xd0>
    2026:	5a c0       	rjmp	.+180    	; 0x20dc <OFF_TIME_SET_OP+0x190>
                _delay_ms(800);
            }
        }
        else if(OK_SW_FLAG)   //OK_SW
    2028:	80 91 1c 05 	lds	r24, 0x051C
    202c:	88 23       	and	r24, r24
    202e:	79 f1       	breq	.+94     	; 0x208e <OFF_TIME_SET_OP+0x142>
        {
            OFF_TIME = (unsigned long)TIME_BUF;
    2030:	81 2f       	mov	r24, r17
    2032:	90 e0       	ldi	r25, 0x00	; 0
    2034:	90 93 d9 03 	sts	0x03D9, r25
    2038:	80 93 d8 03 	sts	0x03D8, r24
            FND_BLINK_FLAG = 1;
    203c:	e0 92 23 05 	sts	0x0523, r14
    2040:	80 e2       	ldi	r24, 0x20	; 32
    2042:	9e e4       	ldi	r25, 0x4E	; 78
    2044:	fe 01       	movw	r30, r28
    2046:	31 97       	sbiw	r30, 0x01	; 1
    2048:	f1 f7       	brne	.-4      	; 0x2046 <OFF_TIME_SET_OP+0xfa>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    204a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    204c:	d9 f7       	brne	.-10     	; 0x2044 <OFF_TIME_SET_OP+0xf8>
            _delay_ms(2000);
            FND_BLINK_FLAG = 0;
    204e:	10 92 23 05 	sts	0x0523, r1
			ST = OFF_TIME_RESET;
    2052:	f0 92 46 05 	sts	0x0546, r15
			if(SD_DETECTION_FLAG)
    2056:	80 91 21 05 	lds	r24, 0x0521
    205a:	88 23       	and	r24, r24
    205c:	09 f4       	brne	.+2      	; 0x2060 <OFF_TIME_SET_OP+0x114>
    205e:	3e c0       	rjmp	.+124    	; 0x20dc <OFF_TIME_SET_OP+0x190>
			{
				if(!SDWR_OP())
    2060:	0e 94 f5 09 	call	0x13ea	; 0x13ea <SDWR_OP>
    2064:	88 23       	and	r24, r24
    2066:	d1 f5       	brne	.+116    	; 0x20dc <OFF_TIME_SET_OP+0x190>
				{
					SD_DETECTION_FLAG = 0;
    2068:	10 92 21 05 	sts	0x0521, r1
					f_close(&fo);
    206c:	8f e8       	ldi	r24, 0x8F	; 143
    206e:	97 e0       	ldi	r25, 0x07	; 7
    2070:	0e 94 bb 35 	call	0x6b76	; 0x6b76 <f_close>
					f_mount(0,"",0);
    2074:	80 e0       	ldi	r24, 0x00	; 0
    2076:	90 e0       	ldi	r25, 0x00	; 0
    2078:	66 e1       	ldi	r22, 0x16	; 22
    207a:	73 e0       	ldi	r23, 0x03	; 3
    207c:	40 e0       	ldi	r20, 0x00	; 0
    207e:	0e 94 a7 1b 	call	0x374e	; 0x374e <f_mount>
					MSD_LED_OFF;
    2082:	80 91 65 00 	lds	r24, 0x0065
    2086:	88 60       	ori	r24, 0x08	; 8
    2088:	80 93 65 00 	sts	0x0065, r24
    208c:	27 c0       	rjmp	.+78     	; 0x20dc <OFF_TIME_SET_OP+0x190>
				}
			}
        }
        else if(SET_SW_FLAG)   //SET_SW
    208e:	80 91 1a 05 	lds	r24, 0x051A
    2092:	88 23       	and	r24, r24
    2094:	19 f1       	breq	.+70     	; 0x20dc <OFF_TIME_SET_OP+0x190>
        {
            ALL_FND_OFF;
    2096:	15 ba       	out	0x15, r1	; 21
            TCCR2 = 0;
    2098:	15 bc       	out	0x25, r1	; 37
    209a:	80 e1       	ldi	r24, 0x10	; 16
    209c:	97 e2       	ldi	r25, 0x27	; 39
    209e:	28 ec       	ldi	r18, 0xC8	; 200
    20a0:	30 e0       	ldi	r19, 0x00	; 0
    20a2:	f9 01       	movw	r30, r18
    20a4:	31 97       	sbiw	r30, 0x01	; 1
    20a6:	f1 f7       	brne	.-4      	; 0x20a4 <OFF_TIME_SET_OP+0x158>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20a8:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20aa:	d9 f7       	brne	.-10     	; 0x20a2 <OFF_TIME_SET_OP+0x156>
            _delay_ms(1000);
            TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);
    20ac:	8d e0       	ldi	r24, 0x0D	; 13
    20ae:	85 bd       	out	0x25, r24	; 37
            SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;
    20b0:	10 92 1d 05 	sts	0x051D, r1
    20b4:	80 91 1d 05 	lds	r24, 0x051D
    20b8:	80 93 1c 05 	sts	0x051C, r24
    20bc:	80 91 1c 05 	lds	r24, 0x051C
    20c0:	80 93 1b 05 	sts	0x051B, r24
    20c4:	80 91 1b 05 	lds	r24, 0x051B
    20c8:	80 93 1a 05 	sts	0x051A, r24
            EIFR = 0xff;
    20cc:	8f ef       	ldi	r24, 0xFF	; 255
    20ce:	88 bf       	out	0x38, r24	; 56
            FND_OP(0);
    20d0:	80 e0       	ldi	r24, 0x00	; 0
    20d2:	90 e0       	ldi	r25, 0x00	; 0
    20d4:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
    20d8:	81 e0       	ldi	r24, 0x01	; 1
    20da:	1c c0       	rjmp	.+56     	; 0x2114 <OFF_TIME_SET_OP+0x1c8>
            return 1;                        
    20dc:	80 ed       	ldi	r24, 0xD0	; 208
    20de:	97 e0       	ldi	r25, 0x07	; 7
    20e0:	fe 01       	movw	r30, r28
    20e2:	31 97       	sbiw	r30, 0x01	; 1
    20e4:	f1 f7       	brne	.-4      	; 0x20e2 <OFF_TIME_SET_OP+0x196>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20e6:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20e8:	d9 f7       	brne	.-10     	; 0x20e0 <OFF_TIME_SET_OP+0x194>
        }        
        _delay_ms(200);
        SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;
    20ea:	10 92 1d 05 	sts	0x051D, r1
    20ee:	80 91 1d 05 	lds	r24, 0x051D
    20f2:	80 93 1c 05 	sts	0x051C, r24
    20f6:	80 91 1c 05 	lds	r24, 0x051C
    20fa:	80 93 1b 05 	sts	0x051B, r24
    20fe:	80 91 1b 05 	lds	r24, 0x051B
    2102:	80 93 1a 05 	sts	0x051A, r24
        FAULT_LED_OFF;
    2106:	80 91 65 00 	lds	r24, 0x0065
    210a:	80 61       	ori	r24, 0x10	; 16
    210c:	80 93 65 00 	sts	0x0065, r24
        EIFR = 0xff;       
    2110:	08 bf       	out	0x38, r16	; 56
    2112:	34 cf       	rjmp	.-408    	; 0x1f7c <OFF_TIME_SET_OP+0x30>
    }
}
    2114:	df 91       	pop	r29
    2116:	cf 91       	pop	r28
    2118:	1f 91       	pop	r17
    211a:	0f 91       	pop	r16
    211c:	ff 90       	pop	r15
    211e:	ef 90       	pop	r14
    2120:	08 95       	ret

00002122 <VALVE_OP>:
	
		} 
}

void VALVE_OP(unsigned char TIM_PUL_MODE_FLAG)
{
    2122:	2f 92       	push	r2
    2124:	3f 92       	push	r3
    2126:	4f 92       	push	r4
    2128:	5f 92       	push	r5
    212a:	6f 92       	push	r6
    212c:	7f 92       	push	r7
    212e:	8f 92       	push	r8
    2130:	9f 92       	push	r9
    2132:	af 92       	push	r10
    2134:	bf 92       	push	r11
    2136:	cf 92       	push	r12
    2138:	df 92       	push	r13
    213a:	ef 92       	push	r14
    213c:	ff 92       	push	r15
    213e:	0f 93       	push	r16
    2140:	1f 93       	push	r17
    2142:	cf 93       	push	r28
    2144:	df 93       	push	r29
    2146:	38 2e       	mov	r3, r24
    unsigned char tim_cnt=0;

	if ( I2C_ADDR == MASTER)
    2148:	80 91 12 05 	lds	r24, 0x0512
    214c:	88 23       	and	r24, r24
    214e:	09 f0       	breq	.+2      	; 0x2152 <VALVE_OP+0x30>
    2150:	8b c1       	rjmp	.+790    	; 0x2468 <VALVE_OP+0x346>
	{
		if ( SLAVE_ADDR_CHECK == 0 )	 SLA_CH_SUM = SLA_VAL_CH[0];
    2152:	80 91 b1 09 	lds	r24, 0x09B1
    2156:	90 91 b2 09 	lds	r25, 0x09B2
    215a:	89 2b       	or	r24, r25
    215c:	09 f0       	breq	.+2      	; 0x2160 <VALVE_OP+0x3e>
    215e:	6e c1       	rjmp	.+732    	; 0x243c <VALVE_OP+0x31a>
    2160:	80 91 b3 03 	lds	r24, 0x03B3
    2164:	90 91 b4 03 	lds	r25, 0x03B4
    2168:	90 93 e6 03 	sts	0x03E6, r25
    216c:	80 93 e5 03 	sts	0x03E5, r24
    2170:	65 c1       	rjmp	.+714    	; 0x243c <VALVE_OP+0x31a>

		while(valve_index < SLA_CH_SUM)
    	{
				FND_OP((unsigned int)valve_index+1);
    2172:	80 91 11 05 	lds	r24, 0x0511
    2176:	90 e0       	ldi	r25, 0x00	; 0
    2178:	01 96       	adiw	r24, 0x01	; 1
    217a:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
				ST = VALVE_OPEN;
    217e:	82 e0       	ldi	r24, 0x02	; 2
    2180:	80 93 46 05 	sts	0x0546, r24
				if(SD_DETECTION_FLAG)
    2184:	80 91 21 05 	lds	r24, 0x0521
    2188:	88 23       	and	r24, r24
    218a:	d1 f0       	breq	.+52     	; 0x21c0 <VALVE_OP+0x9e>
				{
					while(NEW_FILE_FLAG);
    218c:	80 91 22 05 	lds	r24, 0x0522
    2190:	88 23       	and	r24, r24
    2192:	e1 f7       	brne	.-8      	; 0x218c <VALVE_OP+0x6a>
					if(!SDWR_OP())
    2194:	0e 94 f5 09 	call	0x13ea	; 0x13ea <SDWR_OP>
    2198:	88 23       	and	r24, r24
    219a:	91 f4       	brne	.+36     	; 0x21c0 <VALVE_OP+0x9e>
					{
						SD_DETECTION_FLAG = 0;
    219c:	10 92 21 05 	sts	0x0521, r1
						f_close(&fo);
    21a0:	8f e8       	ldi	r24, 0x8F	; 143
    21a2:	97 e0       	ldi	r25, 0x07	; 7
    21a4:	0e 94 bb 35 	call	0x6b76	; 0x6b76 <f_close>
						f_mount(0,"",0);
    21a8:	80 e0       	ldi	r24, 0x00	; 0
    21aa:	90 e0       	ldi	r25, 0x00	; 0
    21ac:	66 e1       	ldi	r22, 0x16	; 22
    21ae:	73 e0       	ldi	r23, 0x03	; 3
    21b0:	40 e0       	ldi	r20, 0x00	; 0
    21b2:	0e 94 a7 1b 	call	0x374e	; 0x374e <f_mount>
						MSD_LED_OFF;
    21b6:	80 91 65 00 	lds	r24, 0x0065
    21ba:	88 60       	ori	r24, 0x08	; 8
    21bc:	80 93 65 00 	sts	0x0065, r24
					}
				}
				
				
				if (valve_index < SLA_VAL_CH[0])		
    21c0:	80 91 11 05 	lds	r24, 0x0511
    21c4:	20 91 b3 03 	lds	r18, 0x03B3
    21c8:	30 91 b4 03 	lds	r19, 0x03B4
    21cc:	90 e0       	ldi	r25, 0x00	; 0
    21ce:	82 17       	cp	r24, r18
    21d0:	93 07       	cpc	r25, r19
    21d2:	08 f0       	brcs	.+2      	; 0x21d6 <VALVE_OP+0xb4>
    21d4:	57 c0       	rjmp	.+174    	; 0x2284 <VALVE_OP+0x162>
				{
				
	    			if(valve_index<10)
    21d6:	80 91 11 05 	lds	r24, 0x0511
    21da:	8a 30       	cpi	r24, 0x0A	; 10
    21dc:	28 f4       	brcc	.+10     	; 0x21e8 <VALVE_OP+0xc6>
            			VALVE = valve_index|0xf0;
    21de:	80 91 11 05 	lds	r24, 0x0511
    21e2:	80 6f       	ori	r24, 0xF0	; 240
    21e4:	8b bb       	out	0x1b, r24	; 27
    21e6:	09 c0       	rjmp	.+18     	; 0x21fa <VALVE_OP+0xd8>
        			
					else
            			VALVE = ((valve_index%10)<<4)|0x0f;
    21e8:	80 91 11 05 	lds	r24, 0x0511
    21ec:	6a e0       	ldi	r22, 0x0A	; 10
    21ee:	0e 94 d1 40 	call	0x81a2	; 0x81a2 <__udivmodqi4>
    21f2:	92 95       	swap	r25
    21f4:	90 7f       	andi	r25, 0xF0	; 240
    21f6:	9f 60       	ori	r25, 0x0F	; 15
    21f8:	9b bb       	out	0x1b, r25	; 27

						_delay_ms(ON_TIME);
    21fa:	60 91 d6 03 	lds	r22, 0x03D6
    21fe:	70 91 d7 03 	lds	r23, 0x03D7
    2202:	80 e0       	ldi	r24, 0x00	; 0
    2204:	90 e0       	ldi	r25, 0x00	; 0
    2206:	0e 94 44 3e 	call	0x7c88	; 0x7c88 <__floatunsisf>
    220a:	5b 01       	movw	r10, r22
    220c:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    220e:	20 e0       	ldi	r18, 0x00	; 0
    2210:	30 e0       	ldi	r19, 0x00	; 0
    2212:	4a ef       	ldi	r20, 0xFA	; 250
    2214:	54 e4       	ldi	r21, 0x44	; 68
    2216:	0e 94 08 3c 	call	0x7810	; 0x7810 <__mulsf3>
    221a:	7b 01       	movw	r14, r22
    221c:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
    221e:	20 e0       	ldi	r18, 0x00	; 0
    2220:	30 e0       	ldi	r19, 0x00	; 0
    2222:	40 e8       	ldi	r20, 0x80	; 128
    2224:	5f e3       	ldi	r21, 0x3F	; 63
    2226:	0e 94 62 3d 	call	0x7ac4	; 0x7ac4 <__ltsf2>
    222a:	88 23       	and	r24, r24
    222c:	1c f4       	brge	.+6      	; 0x2234 <VALVE_OP+0x112>
    222e:	61 e0       	ldi	r22, 0x01	; 1
    2230:	70 e0       	ldi	r23, 0x00	; 0
    2232:	22 c0       	rjmp	.+68     	; 0x2278 <VALVE_OP+0x156>
		__ticks = 1;
	else if (__tmp > 65535)
    2234:	c8 01       	movw	r24, r16
    2236:	b7 01       	movw	r22, r14
    2238:	20 e0       	ldi	r18, 0x00	; 0
    223a:	3f ef       	ldi	r19, 0xFF	; 255
    223c:	4f e7       	ldi	r20, 0x7F	; 127
    223e:	57 e4       	ldi	r21, 0x47	; 71
    2240:	0e 94 02 3d 	call	0x7a04	; 0x7a04 <__gtsf2>
    2244:	18 16       	cp	r1, r24
    2246:	a4 f4       	brge	.+40     	; 0x2270 <VALVE_OP+0x14e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2248:	c6 01       	movw	r24, r12
    224a:	b5 01       	movw	r22, r10
    224c:	20 e0       	ldi	r18, 0x00	; 0
    224e:	30 e0       	ldi	r19, 0x00	; 0
    2250:	40 e2       	ldi	r20, 0x20	; 32
    2252:	51 e4       	ldi	r21, 0x41	; 65
    2254:	0e 94 08 3c 	call	0x7810	; 0x7810 <__mulsf3>
    2258:	0e 94 32 3a 	call	0x7464	; 0x7464 <__fixunssfsi>
    225c:	05 c0       	rjmp	.+10     	; 0x2268 <VALVE_OP+0x146>
    225e:	c4 01       	movw	r24, r8
    2260:	01 97       	sbiw	r24, 0x01	; 1
    2262:	f1 f7       	brne	.-4      	; 0x2260 <VALVE_OP+0x13e>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2264:	61 50       	subi	r22, 0x01	; 1
    2266:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2268:	61 15       	cp	r22, r1
    226a:	71 05       	cpc	r23, r1
    226c:	c1 f7       	brne	.-16     	; 0x225e <VALVE_OP+0x13c>
    226e:	07 c0       	rjmp	.+14     	; 0x227e <VALVE_OP+0x15c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2270:	c8 01       	movw	r24, r16
    2272:	b7 01       	movw	r22, r14
    2274:	0e 94 32 3a 	call	0x7464	; 0x7464 <__fixunssfsi>
    2278:	cb 01       	movw	r24, r22
    227a:	01 97       	sbiw	r24, 0x01	; 1
    227c:	f1 f7       	brne	.-4      	; 0x227a <VALVE_OP+0x158>
        				ALL_VALVE_OFF;
    227e:	2b ba       	out	0x1b, r2	; 27
    2280:	10 e0       	ldi	r17, 0x00	; 0
    2282:	70 c0       	rjmp	.+224    	; 0x2364 <VALVE_OP+0x242>
    2284:	c0 e0       	ldi	r28, 0x00	; 0
    2286:	d0 e0       	ldi	r29, 0x00	; 0
    2288:	11 e0       	ldi	r17, 0x01	; 1
				else	//master valve_ch OP
				{
	
							for ( int slave_index = 0 ; slave_index < 16 ; slave_index++)
							{
								if (SLAVE_ADDR_CHECK & 1<<(slave_index))	
    228a:	20 91 b1 09 	lds	r18, 0x09B1
    228e:	30 91 b2 09 	lds	r19, 0x09B2
    2292:	c3 01       	movw	r24, r6
    2294:	0c 2e       	mov	r0, r28
    2296:	02 c0       	rjmp	.+4      	; 0x229c <VALVE_OP+0x17a>
    2298:	88 0f       	add	r24, r24
    229a:	99 1f       	adc	r25, r25
    229c:	0a 94       	dec	r0
    229e:	e2 f7       	brpl	.-8      	; 0x2298 <VALVE_OP+0x176>
    22a0:	82 23       	and	r24, r18
    22a2:	93 23       	and	r25, r19
    22a4:	89 2b       	or	r24, r25
    22a6:	09 f4       	brne	.+2      	; 0x22aa <VALVE_OP+0x188>
    22a8:	42 c0       	rjmp	.+132    	; 0x232e <VALVE_OP+0x20c>
								{
												
										if ( valve_on_flag == 0)
    22aa:	80 91 29 05 	lds	r24, 0x0529
    22ae:	90 91 2a 05 	lds	r25, 0x052A
    22b2:	89 2b       	or	r24, r25
    22b4:	41 f4       	brne	.+16     	; 0x22c6 <VALVE_OP+0x1a4>
										{
										
											twi_master_write(slave_index+1,VALVE_START);
    22b6:	81 2f       	mov	r24, r17
    22b8:	6f ea       	ldi	r22, 0xAF	; 175
    22ba:	0e 94 74 01 	call	0x2e8	; 0x2e8 <twi_master_write>
											valve_on_flag = 1;
    22be:	50 92 2a 05 	sts	0x052A, r5
    22c2:	40 92 29 05 	sts	0x0529, r4
    22c6:	88 ee       	ldi	r24, 0xE8	; 232
    22c8:	93 e0       	ldi	r25, 0x03	; 3
    22ca:	f4 01       	movw	r30, r8
    22cc:	31 97       	sbiw	r30, 0x01	; 1
    22ce:	f1 f7       	brne	.-4      	; 0x22cc <VALVE_OP+0x1aa>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    22d0:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    22d2:	d9 f7       	brne	.-10     	; 0x22ca <VALVE_OP+0x1a8>
										}	
										
											_delay_ms(100);
											
											TWI_DATA_BUF = twi_master_read(slave_index+1);
    22d4:	81 2f       	mov	r24, r17
    22d6:	0e 94 45 01 	call	0x28a	; 0x28a <twi_master_read>
    22da:	90 e0       	ldi	r25, 0x00	; 0
    22dc:	90 93 8d 07 	sts	0x078D, r25
    22e0:	80 93 8c 07 	sts	0x078C, r24
											
											if ( TWI_DATA_BUF == SLAVE_READY)
    22e4:	80 91 8c 07 	lds	r24, 0x078C
    22e8:	90 91 8d 07 	lds	r25, 0x078D
    22ec:	8c 3a       	cpi	r24, 0xAC	; 172
    22ee:	91 05       	cpc	r25, r1
    22f0:	f1 f4       	brne	.+60     	; 0x232e <VALVE_OP+0x20c>
											{
												
												FND_OP((unsigned int)valve_index+1);
    22f2:	80 91 11 05 	lds	r24, 0x0511
    22f6:	90 e0       	ldi	r25, 0x00	; 0
    22f8:	01 96       	adiw	r24, 0x01	; 1
    22fa:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
														
													
												if (valve_index+1 == SLA_CH_SUM)
    22fe:	80 91 11 05 	lds	r24, 0x0511
    2302:	20 91 e5 03 	lds	r18, 0x03E5
    2306:	30 91 e6 03 	lds	r19, 0x03E6
    230a:	90 e0       	ldi	r25, 0x00	; 0
    230c:	01 96       	adiw	r24, 0x01	; 1
    230e:	82 17       	cp	r24, r18
    2310:	93 07       	cpc	r25, r19
    2312:	49 f4       	brne	.+18     	; 0x2326 <VALVE_OP+0x204>
												{	
													twi_master_write(slave_index+1,SLAVE_SLEEP);
    2314:	81 2f       	mov	r24, r17
    2316:	6a eb       	ldi	r22, 0xBA	; 186
    2318:	0e 94 74 01 	call	0x2e8	; 0x2e8 <twi_master_write>
													valve_on_flag = 0;																				
    231c:	10 92 2a 05 	sts	0x052A, r1
    2320:	10 92 29 05 	sts	0x0529, r1
    2324:	04 c0       	rjmp	.+8      	; 0x232e <VALVE_OP+0x20c>
												}
												else	twi_master_write(slave_index+1,VALVE_ON);
    2326:	81 2f       	mov	r24, r17
    2328:	64 e0       	ldi	r22, 0x04	; 4
    232a:	0e 94 74 01 	call	0x2e8	; 0x2e8 <twi_master_write>
        		}		
				
				else	//master valve_ch OP
				{
	
							for ( int slave_index = 0 ; slave_index < 16 ; slave_index++)
    232e:	21 96       	adiw	r28, 0x01	; 1
    2330:	1f 5f       	subi	r17, 0xFF	; 255
    2332:	11 31       	cpi	r17, 0x11	; 17
    2334:	09 f0       	breq	.+2      	; 0x2338 <VALVE_OP+0x216>
    2336:	a9 cf       	rjmp	.-174    	; 0x228a <VALVE_OP+0x168>
    2338:	a3 cf       	rjmp	.-186    	; 0x2280 <VALVE_OP+0x15e>
				}

						
						for(tim_cnt=0; tim_cnt<OFF_TIME-1; tim_cnt++)
						{
							if(tim_cnt == (OFF_TIME-1)/2)
    233a:	80 91 d8 03 	lds	r24, 0x03D8
    233e:	90 91 d9 03 	lds	r25, 0x03D9
    2342:	01 97       	sbiw	r24, 0x01	; 1
    2344:	96 95       	lsr	r25
    2346:	87 95       	ror	r24
    2348:	28 17       	cp	r18, r24
    234a:	39 07       	cpc	r19, r25
    234c:	19 f4       	brne	.+6      	; 0x2354 <VALVE_OP+0x232>
								SENSOR_CHECK(1);
    234e:	81 e0       	ldi	r24, 0x01	; 1
    2350:	0e 94 8f 02 	call	0x51e	; 0x51e <SENSOR_CHECK>
    2354:	80 e1       	ldi	r24, 0x10	; 16
    2356:	97 e2       	ldi	r25, 0x27	; 39
    2358:	f4 01       	movw	r30, r8
    235a:	31 97       	sbiw	r30, 0x01	; 1
    235c:	f1 f7       	brne	.-4      	; 0x235a <VALVE_OP+0x238>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    235e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2360:	d9 f7       	brne	.-10     	; 0x2358 <VALVE_OP+0x236>
								}
							}
				}

						
						for(tim_cnt=0; tim_cnt<OFF_TIME-1; tim_cnt++)
    2362:	1f 5f       	subi	r17, 0xFF	; 255
    2364:	21 2f       	mov	r18, r17
    2366:	30 e0       	ldi	r19, 0x00	; 0
    2368:	80 91 d8 03 	lds	r24, 0x03D8
    236c:	90 91 d9 03 	lds	r25, 0x03D9
    2370:	01 97       	sbiw	r24, 0x01	; 1
    2372:	28 17       	cp	r18, r24
    2374:	39 07       	cpc	r19, r25
    2376:	08 f3       	brcs	.-62     	; 0x233a <VALVE_OP+0x218>
								SENSOR_CHECK(1);
				            _delay_ms(1000);    
				        }


						ST = VALVE_CLOSE;
    2378:	83 e0       	ldi	r24, 0x03	; 3
    237a:	80 93 46 05 	sts	0x0546, r24

						if(SD_DETECTION_FLAG)
    237e:	80 91 21 05 	lds	r24, 0x0521
    2382:	88 23       	and	r24, r24
    2384:	d1 f0       	breq	.+52     	; 0x23ba <VALVE_OP+0x298>
						{
							while(NEW_FILE_FLAG);
    2386:	80 91 22 05 	lds	r24, 0x0522
    238a:	88 23       	and	r24, r24
    238c:	e1 f7       	brne	.-8      	; 0x2386 <VALVE_OP+0x264>
							if(!SDWR_OP())
    238e:	0e 94 f5 09 	call	0x13ea	; 0x13ea <SDWR_OP>
    2392:	88 23       	and	r24, r24
    2394:	91 f4       	brne	.+36     	; 0x23ba <VALVE_OP+0x298>
							{
								SD_DETECTION_FLAG = 0;
    2396:	10 92 21 05 	sts	0x0521, r1
								f_close(&fo);
    239a:	8f e8       	ldi	r24, 0x8F	; 143
    239c:	97 e0       	ldi	r25, 0x07	; 7
    239e:	0e 94 bb 35 	call	0x6b76	; 0x6b76 <f_close>
								f_mount(0,"",0);
    23a2:	80 e0       	ldi	r24, 0x00	; 0
    23a4:	90 e0       	ldi	r25, 0x00	; 0
    23a6:	66 e1       	ldi	r22, 0x16	; 22
    23a8:	73 e0       	ldi	r23, 0x03	; 3
    23aa:	40 e0       	ldi	r20, 0x00	; 0
    23ac:	0e 94 a7 1b 	call	0x374e	; 0x374e <f_mount>
								MSD_LED_OFF;
    23b0:	80 91 65 00 	lds	r24, 0x0065
    23b4:	88 60       	ori	r24, 0x08	; 8
    23b6:	80 93 65 00 	sts	0x0065, r24
							}
						}
				        
						if((++valve_index) == SLA_CH_SUM)
    23ba:	80 91 11 05 	lds	r24, 0x0511
    23be:	8f 5f       	subi	r24, 0xFF	; 255
    23c0:	80 93 11 05 	sts	0x0511, r24
    23c4:	80 91 11 05 	lds	r24, 0x0511
    23c8:	20 91 e5 03 	lds	r18, 0x03E5
    23cc:	30 91 e6 03 	lds	r19, 0x03E6
    23d0:	90 e0       	ldi	r25, 0x00	; 0
    23d2:	82 17       	cp	r24, r18
    23d4:	93 07       	cpc	r25, r19
    23d6:	11 f4       	brne	.+4      	; 0x23dc <VALVE_OP+0x2ba>
				            valve_index = 0;
    23d8:	10 92 11 05 	sts	0x0511, r1
    23dc:	80 ea       	ldi	r24, 0xA0	; 160
    23de:	9f e0       	ldi	r25, 0x0F	; 15
    23e0:	f4 01       	movw	r30, r8
    23e2:	31 97       	sbiw	r30, 0x01	; 1
    23e4:	f1 f7       	brne	.-4      	; 0x23e2 <VALVE_OP+0x2c0>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    23e6:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    23e8:	d9 f7       	brne	.-10     	; 0x23e0 <VALVE_OP+0x2be>
						
						
						
						
						//SET_SW_FLAG = 1;
						if(TIM_PUL_MODE_FLAG)					//ncp0
    23ea:	33 20       	and	r3, r3
    23ec:	e1 f0       	breq	.+56     	; 0x2426 <VALVE_OP+0x304>
						{
							//STATE = ON_TIME_SET;	//minuk
							
							if(SET_SW_FLAG == 1)
    23ee:	80 91 1a 05 	lds	r24, 0x051A
    23f2:	81 30       	cpi	r24, 0x01	; 1
    23f4:	21 f4       	brne	.+8      	; 0x23fe <VALVE_OP+0x2dc>
							{
								//STATE = ON_TIME_SET;
								SET_SW_FLAG = 0;
    23f6:	10 92 1a 05 	sts	0x051A, r1
								OFF_TIME_SET_OP();
    23fa:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <OFF_TIME_SET_OP>
								
	

							}

							if(0x00 == (PINE&0x08))		//4번비트 확인? (PINE의 4번비트가 0이라면.)
    23fe:	0b 99       	sbic	0x01, 3	; 1
    2400:	28 c0       	rjmp	.+80     	; 0x2452 <VALVE_OP+0x330>
							{
								TIM_PULSING_FLAG = 0;			
    2402:	10 92 1f 05 	sts	0x051F, r1
								WARNING_LED_OFF;		//hw0
    2406:	1a 9a       	sbi	0x03, 2	; 3
								
								FND_BLINK_FLAG = 1;
    2408:	81 e0       	ldi	r24, 0x01	; 1
    240a:	80 93 23 05 	sts	0x0523, r24
    240e:	80 e2       	ldi	r24, 0x20	; 32
    2410:	9e e4       	ldi	r25, 0x4E	; 78
    2412:	28 ec       	ldi	r18, 0xC8	; 200
    2414:	30 e0       	ldi	r19, 0x00	; 0
    2416:	f9 01       	movw	r30, r18
    2418:	31 97       	sbiw	r30, 0x01	; 1
    241a:	f1 f7       	brne	.-4      	; 0x2418 <VALVE_OP+0x2f6>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    241c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    241e:	d9 f7       	brne	.-10     	; 0x2416 <VALVE_OP+0x2f4>
								_delay_ms(2000);
								FND_BLINK_FLAG = 0;
    2420:	10 92 23 05 	sts	0x0523, r1
    2424:	21 c0       	rjmp	.+66     	; 0x2468 <VALVE_OP+0x346>
								break;
							} 
						}
						else		//차압펄싱모드
						{
							if(MMAQ < STOP_OP_POINT)
    2426:	20 91 0e 05 	lds	r18, 0x050E
    242a:	30 91 0f 05 	lds	r19, 0x050F
    242e:	80 91 df 03 	lds	r24, 0x03DF
    2432:	90 e0       	ldi	r25, 0x00	; 0
    2434:	28 17       	cp	r18, r24
    2436:	39 07       	cpc	r19, r25
    2438:	64 f4       	brge	.+24     	; 0x2452 <VALVE_OP+0x330>
    243a:	16 c0       	rjmp	.+44     	; 0x2468 <VALVE_OP+0x346>
				else	//master valve_ch OP
				{
	
							for ( int slave_index = 0 ; slave_index < 16 ; slave_index++)
							{
								if (SLAVE_ADDR_CHECK & 1<<(slave_index))	
    243c:	51 e0       	ldi	r21, 0x01	; 1
    243e:	65 2e       	mov	r6, r21
    2440:	71 2c       	mov	r7, r1
    2442:	48 ec       	ldi	r20, 0xC8	; 200
    2444:	84 2e       	mov	r8, r20
    2446:	91 2c       	mov	r9, r1
    2448:	31 e0       	ldi	r19, 0x01	; 1
    244a:	43 2e       	mov	r4, r19
    244c:	51 2c       	mov	r5, r1
        			
					else
            			VALVE = ((valve_index%10)<<4)|0x0f;

						_delay_ms(ON_TIME);
        				ALL_VALVE_OFF;
    244e:	22 24       	eor	r2, r2
    2450:	2a 94       	dec	r2

	if ( I2C_ADDR == MASTER)
	{
		if ( SLAVE_ADDR_CHECK == 0 )	 SLA_CH_SUM = SLA_VAL_CH[0];

		while(valve_index < SLA_CH_SUM)
    2452:	80 91 11 05 	lds	r24, 0x0511
    2456:	20 91 e5 03 	lds	r18, 0x03E5
    245a:	30 91 e6 03 	lds	r19, 0x03E6
    245e:	90 e0       	ldi	r25, 0x00	; 0
    2460:	82 17       	cp	r24, r18
    2462:	93 07       	cpc	r25, r19
    2464:	08 f4       	brcc	.+2      	; 0x2468 <VALVE_OP+0x346>
    2466:	85 ce       	rjmp	.-758    	; 0x2172 <VALVE_OP+0x50>
            
		}                

    } 	
	
	ALL_FND_OFF;
    2468:	15 ba       	out	0x15, r1	; 21
    TCCR2 = 0;
    246a:	15 bc       	out	0x25, r1	; 37
    246c:	80 e1       	ldi	r24, 0x10	; 16
    246e:	97 e2       	ldi	r25, 0x27	; 39
    2470:	28 ec       	ldi	r18, 0xC8	; 200
    2472:	30 e0       	ldi	r19, 0x00	; 0
    2474:	f9 01       	movw	r30, r18
    2476:	31 97       	sbiw	r30, 0x01	; 1
    2478:	f1 f7       	brne	.-4      	; 0x2476 <VALVE_OP+0x354>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    247a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    247c:	d9 f7       	brne	.-10     	; 0x2474 <VALVE_OP+0x352>
    _delay_ms(1000);
    TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);      
    247e:	8d e0       	ldi	r24, 0x0D	; 13
    2480:	85 bd       	out	0x25, r24	; 37
    SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;	
    2482:	10 92 1d 05 	sts	0x051D, r1
    2486:	80 91 1d 05 	lds	r24, 0x051D
    248a:	80 93 1c 05 	sts	0x051C, r24
    248e:	80 91 1c 05 	lds	r24, 0x051C
    2492:	80 93 1b 05 	sts	0x051B, r24
    2496:	80 91 1b 05 	lds	r24, 0x051B
    249a:	80 93 1a 05 	sts	0x051A, r24
   
}
    249e:	df 91       	pop	r29
    24a0:	cf 91       	pop	r28
    24a2:	1f 91       	pop	r17
    24a4:	0f 91       	pop	r16
    24a6:	ff 90       	pop	r15
    24a8:	ef 90       	pop	r14
    24aa:	df 90       	pop	r13
    24ac:	cf 90       	pop	r12
    24ae:	bf 90       	pop	r11
    24b0:	af 90       	pop	r10
    24b2:	9f 90       	pop	r9
    24b4:	8f 90       	pop	r8
    24b6:	7f 90       	pop	r7
    24b8:	6f 90       	pop	r6
    24ba:	5f 90       	pop	r5
    24bc:	4f 90       	pop	r4
    24be:	3f 90       	pop	r3
    24c0:	2f 90       	pop	r2
    24c2:	08 95       	ret

000024c4 <ON_TIME_SET_OP>:
	return 0;
}


unsigned char ON_TIME_SET_OP(void)		
{
    24c4:	df 92       	push	r13
    24c6:	ef 92       	push	r14
    24c8:	ff 92       	push	r15
    24ca:	0f 93       	push	r16
    24cc:	1f 93       	push	r17
    24ce:	cf 93       	push	r28
    24d0:	df 93       	push	r29
    unsigned int TIME_BUF = ON_TIME;
    24d2:	c0 91 d6 03 	lds	r28, 0x03D6
    24d6:	d0 91 d7 03 	lds	r29, 0x03D7
    FND_DOT2 = 1;
    24da:	81 e0       	ldi	r24, 0x01	; 1
    24dc:	80 93 19 05 	sts	0x0519, r24
    FND_OP(ON_TIME/100);
    24e0:	80 91 d6 03 	lds	r24, 0x03D6
    24e4:	90 91 d7 03 	lds	r25, 0x03D7
    24e8:	64 e6       	ldi	r22, 0x64	; 100
    24ea:	70 e0       	ldi	r23, 0x00	; 0
    24ec:	0e 94 dd 40 	call	0x81ba	; 0x81ba <__udivmodhi4>
    24f0:	cb 01       	movw	r24, r22
    24f2:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
        }
        else if(OK_SW_FLAG)   //OK_SW
        {
		//np2
            ON_TIME = TIME_BUF;				//TIME_BUF는 UP_SW_FLAG와 DOWN_SW_FLAG에 의해서 결정
            FND_BLINK_FLAG = 1;				
    24f6:	dd 24       	eor	r13, r13
    24f8:	d3 94       	inc	r13
    24fa:	08 ec       	ldi	r16, 0xC8	; 200
    24fc:	10 e0       	ldi	r17, 0x00	; 0
            _delay_ms(2000);	//minuk
            FND_BLINK_FLAG = 0;
			ST = ON_TIME_RESET;
    24fe:	74 e0       	ldi	r23, 0x04	; 4
    2500:	e7 2e       	mov	r14, r23
            return 1;                        
        }
        _delay_ms(200);
        SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;
        FAULT_LED_OFF;
        EIFR = 0xff;       
    2502:	ff 24       	eor	r15, r15
    2504:	fa 94       	dec	r15
    FND_OP(ON_TIME/100);

    while(1)
    {
	//np3
        WD_ON(KEY_WD);
    2506:	80 e0       	ldi	r24, 0x00	; 0
    2508:	0e 94 75 03 	call	0x6ea	; 0x6ea <WD_ON>
    250c:	1a c0       	rjmp	.+52     	; 0x2542 <ON_TIME_SET_OP+0x7e>
        while(!(SET_SW_FLAG|UP_SW_FLAG|OK_SW_FLAG|DOWN_SW_FLAG))
        {
            if(WD_FLAG)
    250e:	80 91 26 05 	lds	r24, 0x0526
    2512:	88 23       	and	r24, r24
    2514:	b1 f0       	breq	.+44     	; 0x2542 <ON_TIME_SET_OP+0x7e>
            {										//np4
                FND_DOT2 = 0;				//fnd_dot2 ?
    2516:	10 92 19 05 	sts	0x0519, r1
                ALL_FND_OFF;				//all_fnd_off
    251a:	15 ba       	out	0x15, r1	; 21
                TCCR0 = 0;					//timer/counter0 off
    251c:	13 be       	out	0x33, r1	; 51
                TCCR2 = 0;					//timer/counter2 off
    251e:	15 bc       	out	0x25, r1	; 37
    2520:	80 e1       	ldi	r24, 0x10	; 16
    2522:	97 e2       	ldi	r25, 0x27	; 39
    2524:	28 ec       	ldi	r18, 0xC8	; 200
    2526:	30 e0       	ldi	r19, 0x00	; 0
    2528:	f9 01       	movw	r30, r18
    252a:	31 97       	sbiw	r30, 0x01	; 1
    252c:	f1 f7       	brne	.-4      	; 0x252a <ON_TIME_SET_OP+0x66>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    252e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2530:	d9 f7       	brne	.-10     	; 0x2528 <ON_TIME_SET_OP+0x64>

                _delay_ms(1000);			//about 1sec ==> 

                TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);	//timer/counter2 on
    2532:	8d e0       	ldi	r24, 0x0D	; 13
    2534:	85 bd       	out	0x25, r24	; 37
                FND_OP(0);				//101
    2536:	80 e0       	ldi	r24, 0x00	; 0
    2538:	90 e0       	ldi	r25, 0x00	; 0
    253a:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
    253e:	80 e0       	ldi	r24, 0x00	; 0
    2540:	ba c0       	rjmp	.+372    	; 0x26b6 <ON_TIME_SET_OP+0x1f2>

    while(1)
    {
	//np3
        WD_ON(KEY_WD);
        while(!(SET_SW_FLAG|UP_SW_FLAG|OK_SW_FLAG|DOWN_SW_FLAG))
    2542:	30 91 1a 05 	lds	r19, 0x051A
    2546:	80 91 1b 05 	lds	r24, 0x051B
    254a:	90 91 1c 05 	lds	r25, 0x051C
    254e:	20 91 1d 05 	lds	r18, 0x051D
    2552:	83 2b       	or	r24, r19
    2554:	89 2b       	or	r24, r25
    2556:	82 2b       	or	r24, r18
    2558:	d1 f2       	breq	.-76     	; 0x250e <ON_TIME_SET_OP+0x4a>
                TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);	//timer/counter2 on
                FND_OP(0);				//101
                return 0;    
            }            
        }
        if(UP_SW_FLAG)        //UP_SW
    255a:	80 91 1b 05 	lds	r24, 0x051B
    255e:	88 23       	and	r24, r24
    2560:	a1 f0       	breq	.+40     	; 0x258a <ON_TIME_SET_OP+0xc6>
        {
            if(TIME_BUF < 900)
    2562:	83 e0       	ldi	r24, 0x03	; 3
    2564:	c4 38       	cpi	r28, 0x84	; 132
    2566:	d8 07       	cpc	r29, r24
    2568:	18 f4       	brcc	.+6      	; 0x2570 <ON_TIME_SET_OP+0xac>
            {
                TIME_BUF += 100;
    256a:	cc 59       	subi	r28, 0x9C	; 156
    256c:	df 4f       	sbci	r29, 0xFF	; 255
    256e:	16 c0       	rjmp	.+44     	; 0x259c <ON_TIME_SET_OP+0xd8>
                FND_OP(TIME_BUF/100);
            }
            else
            {
                FAULT_LED_ON;
    2570:	80 91 65 00 	lds	r24, 0x0065
    2574:	8f 70       	andi	r24, 0x0F	; 15
    2576:	80 93 65 00 	sts	0x0065, r24
    257a:	80 e4       	ldi	r24, 0x40	; 64
    257c:	9f e1       	ldi	r25, 0x1F	; 31
    257e:	f8 01       	movw	r30, r16
    2580:	31 97       	sbiw	r30, 0x01	; 1
    2582:	f1 f7       	brne	.-4      	; 0x2580 <ON_TIME_SET_OP+0xbc>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2584:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2586:	d9 f7       	brne	.-10     	; 0x257e <ON_TIME_SET_OP+0xba>
    2588:	7a c0       	rjmp	.+244    	; 0x267e <ON_TIME_SET_OP+0x1ba>
                _delay_ms(800);                
            }               
        }
        else if(DOWN_SW_FLAG)   //DOWN_SW
    258a:	80 91 1d 05 	lds	r24, 0x051D
    258e:	88 23       	and	r24, r24
    2590:	d9 f0       	breq	.+54     	; 0x25c8 <ON_TIME_SET_OP+0x104>
        {
            if(TIME_BUF > 100)
    2592:	c5 36       	cpi	r28, 0x65	; 101
    2594:	d1 05       	cpc	r29, r1
    2596:	58 f0       	brcs	.+22     	; 0x25ae <ON_TIME_SET_OP+0xea>
            {
                TIME_BUF -= 100;
    2598:	c4 56       	subi	r28, 0x64	; 100
    259a:	d0 40       	sbci	r29, 0x00	; 0
                FND_OP(TIME_BUF/100);
    259c:	ce 01       	movw	r24, r28
    259e:	64 e6       	ldi	r22, 0x64	; 100
    25a0:	70 e0       	ldi	r23, 0x00	; 0
    25a2:	0e 94 dd 40 	call	0x81ba	; 0x81ba <__udivmodhi4>
    25a6:	cb 01       	movw	r24, r22
    25a8:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
    25ac:	68 c0       	rjmp	.+208    	; 0x267e <ON_TIME_SET_OP+0x1ba>
            }
            else
            {
                FAULT_LED_ON;
    25ae:	80 91 65 00 	lds	r24, 0x0065
    25b2:	8f 70       	andi	r24, 0x0F	; 15
    25b4:	80 93 65 00 	sts	0x0065, r24
    25b8:	80 e4       	ldi	r24, 0x40	; 64
    25ba:	9f e1       	ldi	r25, 0x1F	; 31
    25bc:	f8 01       	movw	r30, r16
    25be:	31 97       	sbiw	r30, 0x01	; 1
    25c0:	f1 f7       	brne	.-4      	; 0x25be <ON_TIME_SET_OP+0xfa>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25c2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    25c4:	d9 f7       	brne	.-10     	; 0x25bc <ON_TIME_SET_OP+0xf8>
    25c6:	5b c0       	rjmp	.+182    	; 0x267e <ON_TIME_SET_OP+0x1ba>
                _delay_ms(800);
            }
        }
        else if(OK_SW_FLAG)   //OK_SW
    25c8:	80 91 1c 05 	lds	r24, 0x051C
    25cc:	88 23       	and	r24, r24
    25ce:	71 f1       	breq	.+92     	; 0x262c <ON_TIME_SET_OP+0x168>
        {
		//np2
            ON_TIME = TIME_BUF;				//TIME_BUF는 UP_SW_FLAG와 DOWN_SW_FLAG에 의해서 결정
    25d0:	d0 93 d7 03 	sts	0x03D7, r29
    25d4:	c0 93 d6 03 	sts	0x03D6, r28
            FND_BLINK_FLAG = 1;				
    25d8:	d0 92 23 05 	sts	0x0523, r13
    25dc:	80 e2       	ldi	r24, 0x20	; 32
    25de:	9e e4       	ldi	r25, 0x4E	; 78
    25e0:	f8 01       	movw	r30, r16
    25e2:	31 97       	sbiw	r30, 0x01	; 1
    25e4:	f1 f7       	brne	.-4      	; 0x25e2 <ON_TIME_SET_OP+0x11e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25e6:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    25e8:	d9 f7       	brne	.-10     	; 0x25e0 <ON_TIME_SET_OP+0x11c>
            _delay_ms(2000);	//minuk
            FND_BLINK_FLAG = 0;
    25ea:	10 92 23 05 	sts	0x0523, r1
			ST = ON_TIME_RESET;
    25ee:	e0 92 46 05 	sts	0x0546, r14
			if(SD_DETECTION_FLAG)
    25f2:	80 91 21 05 	lds	r24, 0x0521
    25f6:	88 23       	and	r24, r24
    25f8:	09 f4       	brne	.+2      	; 0x25fc <ON_TIME_SET_OP+0x138>
    25fa:	41 c0       	rjmp	.+130    	; 0x267e <ON_TIME_SET_OP+0x1ba>
			{
				if(!SDWR_OP())
    25fc:	0e 94 f5 09 	call	0x13ea	; 0x13ea <SDWR_OP>
    2600:	88 23       	and	r24, r24
    2602:	09 f0       	breq	.+2      	; 0x2606 <ON_TIME_SET_OP+0x142>
    2604:	3c c0       	rjmp	.+120    	; 0x267e <ON_TIME_SET_OP+0x1ba>
				{
					SD_DETECTION_FLAG = 0;
    2606:	10 92 21 05 	sts	0x0521, r1
					f_close(&fo);
    260a:	8f e8       	ldi	r24, 0x8F	; 143
    260c:	97 e0       	ldi	r25, 0x07	; 7
    260e:	0e 94 bb 35 	call	0x6b76	; 0x6b76 <f_close>
					f_mount(0,"",0);
    2612:	80 e0       	ldi	r24, 0x00	; 0
    2614:	90 e0       	ldi	r25, 0x00	; 0
    2616:	66 e1       	ldi	r22, 0x16	; 22
    2618:	73 e0       	ldi	r23, 0x03	; 3
    261a:	40 e0       	ldi	r20, 0x00	; 0
    261c:	0e 94 a7 1b 	call	0x374e	; 0x374e <f_mount>
					MSD_LED_OFF;
    2620:	80 91 65 00 	lds	r24, 0x0065
    2624:	88 60       	ori	r24, 0x08	; 8
    2626:	80 93 65 00 	sts	0x0065, r24
    262a:	29 c0       	rjmp	.+82     	; 0x267e <ON_TIME_SET_OP+0x1ba>
				}
			}
        }
        else if(SET_SW_FLAG)   //SET_SW
    262c:	80 91 1a 05 	lds	r24, 0x051A
    2630:	88 23       	and	r24, r24
    2632:	29 f1       	breq	.+74     	; 0x267e <ON_TIME_SET_OP+0x1ba>
        {
            FND_DOT2 = 0;
    2634:	10 92 19 05 	sts	0x0519, r1
            ALL_FND_OFF;
    2638:	15 ba       	out	0x15, r1	; 21
            
			TCCR2 = 0;
    263a:	15 bc       	out	0x25, r1	; 37
    263c:	80 e1       	ldi	r24, 0x10	; 16
    263e:	97 e2       	ldi	r25, 0x27	; 39
    2640:	28 ec       	ldi	r18, 0xC8	; 200
    2642:	30 e0       	ldi	r19, 0x00	; 0
    2644:	f9 01       	movw	r30, r18
    2646:	31 97       	sbiw	r30, 0x01	; 1
    2648:	f1 f7       	brne	.-4      	; 0x2646 <ON_TIME_SET_OP+0x182>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    264a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    264c:	d9 f7       	brne	.-10     	; 0x2644 <ON_TIME_SET_OP+0x180>
            _delay_ms(1000);
            TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);
    264e:	8d e0       	ldi	r24, 0x0D	; 13
    2650:	85 bd       	out	0x25, r24	; 37
            
			SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;   
    2652:	10 92 1d 05 	sts	0x051D, r1
    2656:	80 91 1d 05 	lds	r24, 0x051D
    265a:	80 93 1c 05 	sts	0x051C, r24
    265e:	80 91 1c 05 	lds	r24, 0x051C
    2662:	80 93 1b 05 	sts	0x051B, r24
    2666:	80 91 1b 05 	lds	r24, 0x051B
    266a:	80 93 1a 05 	sts	0x051A, r24
            EIFR = 0xff;    
    266e:	8f ef       	ldi	r24, 0xFF	; 255
    2670:	88 bf       	out	0x38, r24	; 56
            FND_OP(0);
    2672:	80 e0       	ldi	r24, 0x00	; 0
    2674:	90 e0       	ldi	r25, 0x00	; 0
    2676:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
    267a:	81 e0       	ldi	r24, 0x01	; 1
    267c:	1c c0       	rjmp	.+56     	; 0x26b6 <ON_TIME_SET_OP+0x1f2>
            return 1;                        
    267e:	80 ed       	ldi	r24, 0xD0	; 208
    2680:	97 e0       	ldi	r25, 0x07	; 7
    2682:	f8 01       	movw	r30, r16
    2684:	31 97       	sbiw	r30, 0x01	; 1
    2686:	f1 f7       	brne	.-4      	; 0x2684 <ON_TIME_SET_OP+0x1c0>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2688:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    268a:	d9 f7       	brne	.-10     	; 0x2682 <ON_TIME_SET_OP+0x1be>
        }
        _delay_ms(200);
        SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;
    268c:	10 92 1d 05 	sts	0x051D, r1
    2690:	80 91 1d 05 	lds	r24, 0x051D
    2694:	80 93 1c 05 	sts	0x051C, r24
    2698:	80 91 1c 05 	lds	r24, 0x051C
    269c:	80 93 1b 05 	sts	0x051B, r24
    26a0:	80 91 1b 05 	lds	r24, 0x051B
    26a4:	80 93 1a 05 	sts	0x051A, r24
        FAULT_LED_OFF;
    26a8:	80 91 65 00 	lds	r24, 0x0065
    26ac:	80 61       	ori	r24, 0x10	; 16
    26ae:	80 93 65 00 	sts	0x0065, r24
        EIFR = 0xff;       
    26b2:	f8 be       	out	0x38, r15	; 56
    26b4:	28 cf       	rjmp	.-432    	; 0x2506 <ON_TIME_SET_OP+0x42>
    }
}
    26b6:	df 91       	pop	r29
    26b8:	cf 91       	pop	r28
    26ba:	1f 91       	pop	r17
    26bc:	0f 91       	pop	r16
    26be:	ff 90       	pop	r15
    26c0:	ef 90       	pop	r14
    26c2:	df 90       	pop	r13
    26c4:	08 95       	ret

000026c6 <main>:


/////////////////////////////////////////////////////////////////////////  

int main(void)
{   
    26c6:	2f 92       	push	r2
    26c8:	3f 92       	push	r3
    26ca:	4f 92       	push	r4
    26cc:	5f 92       	push	r5
    26ce:	6f 92       	push	r6
    26d0:	7f 92       	push	r7
    26d2:	8f 92       	push	r8
    26d4:	9f 92       	push	r9
    26d6:	af 92       	push	r10
    26d8:	bf 92       	push	r11
    26da:	cf 92       	push	r12
    26dc:	df 92       	push	r13
    26de:	ef 92       	push	r14
    26e0:	ff 92       	push	r15
    26e2:	0f 93       	push	r16
    26e4:	1f 93       	push	r17
    26e6:	cf 93       	push	r28
    26e8:	df 93       	push	r29

    STATE = SYSTEM_INIT;
    26ea:	10 92 8b 07 	sts	0x078B, r1
            {

                SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;

				if (I2C_ADDR == MASTER )               STATE = SENSOR_CHECKING;
                else									STATE = SLAVE_WAITING;
    26ee:	52 e0       	ldi	r21, 0x02	; 2
    26f0:	85 2e       	mov	r8, r21
			 default:
            {

                SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;

				if (I2C_ADDR == MASTER )               STATE = SENSOR_CHECKING;
    26f2:	43 e0       	ldi	r20, 0x03	; 3
    26f4:	94 2e       	mov	r9, r20
			case STOP_POINT_SET:
			{
				SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;
                ALL_LED_OFF;
                if(STOP_POINT_SET_OP())
                    STATE = MASTER_VALVE_SET;
    26f6:	44 24       	eor	r4, r4
    26f8:	43 94       	inc	r4
                SYS_INIT();
				
				if(I2C_ADDR == MASTER)				STATE = SENSOR_CHECKING;					   
				else
				{
					SLA_VAL_CH[I2C_ADDR] = 3;
    26fa:	33 e0       	ldi	r19, 0x03	; 3
    26fc:	63 2e       	mov	r6, r19
    26fe:	71 2c       	mov	r7, r1
			}

			case SLAVE_WAITING:
			{		
					
					FND_OP((I2C_ADDR*100)+SLA_VAL_CH[I2C_ADDR]);
    2700:	24 e6       	ldi	r18, 0x64	; 100
    2702:	32 2e       	mov	r3, r18
    2704:	c8 ec       	ldi	r28, 0xC8	; 200
    2706:	d0 e0       	ldi	r29, 0x00	; 0
									if(valve_index<10)		VALVE = valve_index|0xf0;
       								
									else	           		VALVE = ((valve_index%10)<<4)|0x0f;
            					    
									_delay_ms(ON_TIME);
        							ALL_VALVE_OFF;
    2708:	55 24       	eor	r5, r5
    270a:	5a 94       	dec	r5
		                    ALL_FND_OFF;
		                    TCCR2 = 0;

		                    _delay_ms(1000);

		                    TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);
    270c:	9d e0       	ldi	r25, 0x0D	; 13
    270e:	29 2e       	mov	r2, r25
    STATE = SYSTEM_INIT;
	

    while(1)
    {
        switch(STATE)
    2710:	10 91 8b 07 	lds	r17, 0x078B
    2714:	14 30       	cpi	r17, 0x04	; 4
    2716:	09 f4       	brne	.+2      	; 0x271a <main+0x54>
    2718:	25 c1       	rjmp	.+586    	; 0x2964 <main+0x29e>
    271a:	15 30       	cpi	r17, 0x05	; 5
    271c:	50 f4       	brcc	.+20     	; 0x2732 <main+0x6c>
    271e:	11 30       	cpi	r17, 0x01	; 1
    2720:	31 f1       	breq	.+76     	; 0x276e <main+0xa8>
    2722:	11 30       	cpi	r17, 0x01	; 1
    2724:	98 f0       	brcs	.+38     	; 0x274c <main+0x86>
    2726:	12 30       	cpi	r17, 0x02	; 2
    2728:	d1 f1       	breq	.+116    	; 0x279e <main+0xd8>
    272a:	13 30       	cpi	r17, 0x03	; 3
    272c:	09 f0       	breq	.+2      	; 0x2730 <main+0x6a>
    272e:	be c1       	rjmp	.+892    	; 0x2aac <main+0x3e6>
    2730:	2d c1       	rjmp	.+602    	; 0x298c <main+0x2c6>
    2732:	16 30       	cpi	r17, 0x06	; 6
    2734:	09 f4       	brne	.+2      	; 0x2738 <main+0x72>
    2736:	6b c1       	rjmp	.+726    	; 0x2a0e <main+0x348>
    2738:	16 30       	cpi	r17, 0x06	; 6
    273a:	08 f4       	brcc	.+2      	; 0x273e <main+0x78>
    273c:	4e c1       	rjmp	.+668    	; 0x29da <main+0x314>
    273e:	18 30       	cpi	r17, 0x08	; 8
    2740:	09 f4       	brne	.+2      	; 0x2744 <main+0x7e>
    2742:	7f c1       	rjmp	.+766    	; 0x2a42 <main+0x37c>
    2744:	19 30       	cpi	r17, 0x09	; 9
    2746:	09 f0       	breq	.+2      	; 0x274a <main+0x84>
    2748:	b1 c1       	rjmp	.+866    	; 0x2aac <main+0x3e6>
    274a:	96 c1       	rjmp	.+812    	; 0x2a78 <main+0x3b2>
        {

            case SYSTEM_INIT :                                           
            {
                SYS_INIT();
    274c:	0e 94 7d 0a 	call	0x14fa	; 0x14fa <SYS_INIT>
				
				if(I2C_ADDR == MASTER)				STATE = SENSOR_CHECKING;					   
    2750:	80 91 12 05 	lds	r24, 0x0512
    2754:	88 23       	and	r24, r24
    2756:	09 f4       	brne	.+2      	; 0x275a <main+0x94>
    2758:	bb c1       	rjmp	.+886    	; 0x2ad0 <main+0x40a>
				else
				{
					SLA_VAL_CH[I2C_ADDR] = 3;
    275a:	e0 91 12 05 	lds	r30, 0x0512
    275e:	f0 e0       	ldi	r31, 0x00	; 0
    2760:	ee 0f       	add	r30, r30
    2762:	ff 1f       	adc	r31, r31
    2764:	ed 54       	subi	r30, 0x4D	; 77
    2766:	fc 4f       	sbci	r31, 0xFC	; 252
    2768:	71 82       	std	Z+1, r7	; 0x01
    276a:	60 82       	st	Z, r6
    276c:	b4 c1       	rjmp	.+872    	; 0x2ad6 <main+0x410>
                break;
            }
											//STOP_POINT_SET mode가 되면 STOP_POINT_SET_OP()! 
			case MASTER_VALVE_SET:			//STOP_POINT_SET_OP()에서 SET_SW_FLAG[SW0]을 누르면
			{								//MASTER_VALVE_SET모드가 되고, 동시에 밸브채널 설정을한다.
					SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;
    276e:	10 92 1d 05 	sts	0x051D, r1
    2772:	80 91 1d 05 	lds	r24, 0x051D
    2776:	80 93 1c 05 	sts	0x051C, r24
    277a:	80 91 1c 05 	lds	r24, 0x051C
    277e:	80 93 1b 05 	sts	0x051B, r24
    2782:	80 91 1b 05 	lds	r24, 0x051B
    2786:	80 93 1a 05 	sts	0x051A, r24
					
					if ( I2C_ADDR == MASTER)
    278a:	80 91 12 05 	lds	r24, 0x0512
    278e:	88 23       	and	r24, r24
    2790:	09 f0       	breq	.+2      	; 0x2794 <main+0xce>
    2792:	a1 c1       	rjmp	.+834    	; 0x2ad6 <main+0x410>
					{
						VALVE_CH_SET_OP();		//np01		//Master_Board => VALVE_CH_SET_OP()
    2794:	0e 94 c7 0e 	call	0x1d8e	; 0x1d8e <VALVE_CH_SET_OP>
						SLA_VALVE_CH_SET_OP();				//Slave_Board => SLA_VAVLE_CH_SET_OP()			??????
    2798:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <SLA_VALVE_CH_SET_OP>
    279c:	99 c1       	rjmp	.+818    	; 0x2ad0 <main+0x40a>
			}

			case SLAVE_WAITING:
			{		
					
					FND_OP((I2C_ADDR*100)+SLA_VAL_CH[I2C_ADDR]);
    279e:	80 91 12 05 	lds	r24, 0x0512
    27a2:	e0 91 12 05 	lds	r30, 0x0512
    27a6:	f0 e0       	ldi	r31, 0x00	; 0
    27a8:	ee 0f       	add	r30, r30
    27aa:	ff 1f       	adc	r31, r31
    27ac:	ed 54       	subi	r30, 0x4D	; 77
    27ae:	fc 4f       	sbci	r31, 0xFC	; 252
    27b0:	20 81       	ld	r18, Z
    27b2:	31 81       	ldd	r19, Z+1	; 0x01
    27b4:	83 9d       	mul	r24, r3
    27b6:	c0 01       	movw	r24, r0
    27b8:	11 24       	eor	r1, r1
    27ba:	82 0f       	add	r24, r18
    27bc:	93 1f       	adc	r25, r19
    27be:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
					TWI_DATA_BUF = twi_slave_read(I2C_ADDR);
    27c2:	80 91 12 05 	lds	r24, 0x0512
    27c6:	0e 94 a2 01 	call	0x344	; 0x344 <twi_slave_read>
    27ca:	90 e0       	ldi	r25, 0x00	; 0
    27cc:	90 93 8d 07 	sts	0x078D, r25
    27d0:	80 93 8c 07 	sts	0x078C, r24
					
					switch(TWI_DATA_BUF)
    27d4:	80 91 8c 07 	lds	r24, 0x078C
    27d8:	90 91 8d 07 	lds	r25, 0x078D
    27dc:	8e 3a       	cpi	r24, 0xAE	; 174
    27de:	91 05       	cpc	r25, r1
    27e0:	29 f0       	breq	.+10     	; 0x27ec <main+0x126>
    27e2:	8f 3a       	cpi	r24, 0xAF	; 175
    27e4:	91 05       	cpc	r25, r1
    27e6:	09 f0       	breq	.+2      	; 0x27ea <main+0x124>
    27e8:	9f c0       	rjmp	.+318    	; 0x2928 <main+0x262>
    27ea:	1e c0       	rjmp	.+60     	; 0x2828 <main+0x162>
					{
					
						case SLAVE_CH_SEND:
						{
							twi_slave_write(I2C_ADDR,SLAVE_CH_ASK);			
    27ec:	80 91 12 05 	lds	r24, 0x0512
    27f0:	6d ea       	ldi	r22, 0xAD	; 173
    27f2:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <twi_slave_write>
							TWI_DATA_BUF = twi_slave_read(I2C_ADDR);			
    27f6:	80 91 12 05 	lds	r24, 0x0512
    27fa:	0e 94 a2 01 	call	0x344	; 0x344 <twi_slave_read>
    27fe:	90 e0       	ldi	r25, 0x00	; 0
    2800:	90 93 8d 07 	sts	0x078D, r25
    2804:	80 93 8c 07 	sts	0x078C, r24
							SLA_VAL_CH[I2C_ADDR] = TWI_DATA_BUF;
    2808:	e0 91 12 05 	lds	r30, 0x0512
    280c:	f0 e0       	ldi	r31, 0x00	; 0
    280e:	80 91 8c 07 	lds	r24, 0x078C
    2812:	90 91 8d 07 	lds	r25, 0x078D
    2816:	ee 0f       	add	r30, r30
    2818:	ff 1f       	adc	r31, r31
    281a:	ed 54       	subi	r30, 0x4D	; 77
    281c:	fc 4f       	sbci	r31, 0xFC	; 252
    281e:	91 83       	std	Z+1, r25	; 0x01
    2820:	80 83       	st	Z, r24
							STATE = SLAVE_WAITING;
    2822:	10 93 8b 07 	sts	0x078B, r17
    2826:	80 c0       	rjmp	.+256    	; 0x2928 <main+0x262>
						
						case VALVE_START:
						{
							while(1)
							{
									twi_slave_write(I2C_ADDR,SLAVE_READY);
    2828:	80 91 12 05 	lds	r24, 0x0512
    282c:	6c ea       	ldi	r22, 0xAC	; 172
    282e:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <twi_slave_write>
									TWI_DATA_BUF  = twi_slave_read(I2C_ADDR);
    2832:	80 91 12 05 	lds	r24, 0x0512
    2836:	0e 94 a2 01 	call	0x344	; 0x344 <twi_slave_read>
    283a:	90 e0       	ldi	r25, 0x00	; 0
    283c:	90 93 8d 07 	sts	0x078D, r25
    2840:	80 93 8c 07 	sts	0x078C, r24
									
									if(valve_index<10)		VALVE = valve_index|0xf0;
    2844:	80 91 11 05 	lds	r24, 0x0511
    2848:	8a 30       	cpi	r24, 0x0A	; 10
    284a:	28 f4       	brcc	.+10     	; 0x2856 <main+0x190>
    284c:	80 91 11 05 	lds	r24, 0x0511
    2850:	80 6f       	ori	r24, 0xF0	; 240
    2852:	8b bb       	out	0x1b, r24	; 27
    2854:	09 c0       	rjmp	.+18     	; 0x2868 <main+0x1a2>
       								
									else	           		VALVE = ((valve_index%10)<<4)|0x0f;
    2856:	80 91 11 05 	lds	r24, 0x0511
    285a:	6a e0       	ldi	r22, 0x0A	; 10
    285c:	0e 94 d1 40 	call	0x81a2	; 0x81a2 <__udivmodqi4>
    2860:	92 95       	swap	r25
    2862:	90 7f       	andi	r25, 0xF0	; 240
    2864:	9f 60       	ori	r25, 0x0F	; 15
    2866:	9b bb       	out	0x1b, r25	; 27
            					    
									_delay_ms(ON_TIME);
    2868:	60 91 d6 03 	lds	r22, 0x03D6
    286c:	70 91 d7 03 	lds	r23, 0x03D7
    2870:	80 e0       	ldi	r24, 0x00	; 0
    2872:	90 e0       	ldi	r25, 0x00	; 0
    2874:	0e 94 44 3e 	call	0x7c88	; 0x7c88 <__floatunsisf>
    2878:	5b 01       	movw	r10, r22
    287a:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    287c:	20 e0       	ldi	r18, 0x00	; 0
    287e:	30 e0       	ldi	r19, 0x00	; 0
    2880:	4a ef       	ldi	r20, 0xFA	; 250
    2882:	54 e4       	ldi	r21, 0x44	; 68
    2884:	0e 94 08 3c 	call	0x7810	; 0x7810 <__mulsf3>
    2888:	7b 01       	movw	r14, r22
    288a:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
    288c:	20 e0       	ldi	r18, 0x00	; 0
    288e:	30 e0       	ldi	r19, 0x00	; 0
    2890:	40 e8       	ldi	r20, 0x80	; 128
    2892:	5f e3       	ldi	r21, 0x3F	; 63
    2894:	0e 94 62 3d 	call	0x7ac4	; 0x7ac4 <__ltsf2>
    2898:	88 23       	and	r24, r24
    289a:	1c f4       	brge	.+6      	; 0x28a2 <main+0x1dc>
    289c:	61 e0       	ldi	r22, 0x01	; 1
    289e:	70 e0       	ldi	r23, 0x00	; 0
    28a0:	22 c0       	rjmp	.+68     	; 0x28e6 <main+0x220>
		__ticks = 1;
	else if (__tmp > 65535)
    28a2:	c8 01       	movw	r24, r16
    28a4:	b7 01       	movw	r22, r14
    28a6:	20 e0       	ldi	r18, 0x00	; 0
    28a8:	3f ef       	ldi	r19, 0xFF	; 255
    28aa:	4f e7       	ldi	r20, 0x7F	; 127
    28ac:	57 e4       	ldi	r21, 0x47	; 71
    28ae:	0e 94 02 3d 	call	0x7a04	; 0x7a04 <__gtsf2>
    28b2:	18 16       	cp	r1, r24
    28b4:	a4 f4       	brge	.+40     	; 0x28de <main+0x218>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    28b6:	c6 01       	movw	r24, r12
    28b8:	b5 01       	movw	r22, r10
    28ba:	20 e0       	ldi	r18, 0x00	; 0
    28bc:	30 e0       	ldi	r19, 0x00	; 0
    28be:	40 e2       	ldi	r20, 0x20	; 32
    28c0:	51 e4       	ldi	r21, 0x41	; 65
    28c2:	0e 94 08 3c 	call	0x7810	; 0x7810 <__mulsf3>
    28c6:	0e 94 32 3a 	call	0x7464	; 0x7464 <__fixunssfsi>
    28ca:	05 c0       	rjmp	.+10     	; 0x28d6 <main+0x210>
    28cc:	ce 01       	movw	r24, r28
    28ce:	01 97       	sbiw	r24, 0x01	; 1
    28d0:	f1 f7       	brne	.-4      	; 0x28ce <main+0x208>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    28d2:	61 50       	subi	r22, 0x01	; 1
    28d4:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    28d6:	61 15       	cp	r22, r1
    28d8:	71 05       	cpc	r23, r1
    28da:	c1 f7       	brne	.-16     	; 0x28cc <main+0x206>
    28dc:	07 c0       	rjmp	.+14     	; 0x28ec <main+0x226>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    28de:	c8 01       	movw	r24, r16
    28e0:	b7 01       	movw	r22, r14
    28e2:	0e 94 32 3a 	call	0x7464	; 0x7464 <__fixunssfsi>
    28e6:	cb 01       	movw	r24, r22
    28e8:	01 97       	sbiw	r24, 0x01	; 1
    28ea:	f1 f7       	brne	.-4      	; 0x28e8 <main+0x222>
        							ALL_VALVE_OFF;
    28ec:	5b ba       	out	0x1b, r5	; 27

									if ( TWI_DATA_BUF == VALVE_ON)
    28ee:	80 91 8c 07 	lds	r24, 0x078C
    28f2:	90 91 8d 07 	lds	r25, 0x078D
    28f6:	04 97       	sbiw	r24, 0x04	; 4
    28f8:	59 f4       	brne	.+22     	; 0x2910 <main+0x24a>
									{
										valve_index++;
    28fa:	80 91 11 05 	lds	r24, 0x0511
    28fe:	8f 5f       	subi	r24, 0xFF	; 255
    2900:	80 93 11 05 	sts	0x0511, r24
										FND_OP(valve_index);
    2904:	80 91 11 05 	lds	r24, 0x0511
    2908:	90 e0       	ldi	r25, 0x00	; 0
    290a:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
    290e:	8c cf       	rjmp	.-232    	; 0x2828 <main+0x162>
									}
									else if ( TWI_DATA_BUF == SLAVE_SLEEP)
    2910:	80 91 8c 07 	lds	r24, 0x078C
    2914:	90 91 8d 07 	lds	r25, 0x078D
    2918:	8a 3b       	cpi	r24, 0xBA	; 186
    291a:	91 05       	cpc	r25, r1
    291c:	09 f0       	breq	.+2      	; 0x2920 <main+0x25a>
    291e:	84 cf       	rjmp	.-248    	; 0x2828 <main+0x162>
									{
										valve_index = 0;
    2920:	10 92 11 05 	sts	0x0511, r1
										break;
									}
																
							}
							
							STATE = SLAVE_WAITING;
    2924:	80 92 8b 07 	sts	0x078B, r8
							break;
						}
					}				


					FND_OP((I2C_ADDR*100)+SLA_VAL_CH[I2C_ADDR]);
    2928:	80 91 12 05 	lds	r24, 0x0512
    292c:	e0 91 12 05 	lds	r30, 0x0512
    2930:	f0 e0       	ldi	r31, 0x00	; 0
    2932:	ee 0f       	add	r30, r30
    2934:	ff 1f       	adc	r31, r31
    2936:	ed 54       	subi	r30, 0x4D	; 77
    2938:	fc 4f       	sbci	r31, 0xFC	; 252
    293a:	20 81       	ld	r18, Z
    293c:	31 81       	ldd	r19, Z+1	; 0x01
    293e:	83 9d       	mul	r24, r3
    2940:	c0 01       	movw	r24, r0
    2942:	11 24       	eor	r1, r1
    2944:	82 0f       	add	r24, r18
    2946:	93 1f       	adc	r25, r19
    2948:	0e 94 4b 02 	call	0x496	; 0x496 <FND_OP>
    294c:	88 ee       	ldi	r24, 0xE8	; 232
    294e:	93 e0       	ldi	r25, 0x03	; 3
    2950:	fe 01       	movw	r30, r28
    2952:	31 97       	sbiw	r30, 0x01	; 1
    2954:	f1 f7       	brne	.-4      	; 0x2952 <main+0x28c>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2956:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2958:	d9 f7       	brne	.-10     	; 0x2950 <main+0x28a>
					_delay_ms(100);
					TWI_DATA_BUF = 0;
    295a:	10 92 8d 07 	sts	0x078D, r1
    295e:	10 92 8c 07 	sts	0x078C, r1
    2962:	b9 c0       	rjmp	.+370    	; 0x2ad6 <main+0x410>



			case VALVE_ON :
            {
                SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;
    2964:	10 92 1d 05 	sts	0x051D, r1
    2968:	80 91 1d 05 	lds	r24, 0x051D
    296c:	80 93 1c 05 	sts	0x051C, r24
    2970:	80 91 1c 05 	lds	r24, 0x051C
    2974:	80 93 1b 05 	sts	0x051B, r24
    2978:	80 91 1b 05 	lds	r24, 0x051B
    297c:	80 93 1a 05 	sts	0x051A, r24
                VALVE_OP(TIM_PULSING_FLAG);
    2980:	80 91 1f 05 	lds	r24, 0x051F
    2984:	0e 94 91 10 	call	0x2122	; 0x2122 <VALVE_OP>
				STATE = SENSOR_CHECKING;
    2988:	90 92 8b 07 	sts	0x078B, r9
			}


			case SENSOR_CHECKING:
			{				
						if(SET_SW_FLAG)
    298c:	80 91 1a 05 	lds	r24, 0x051A
    2990:	88 23       	and	r24, r24
    2992:	d9 f0       	breq	.+54     	; 0x29ca <main+0x304>
		                {
		                    ALL_FND_OFF;
    2994:	15 ba       	out	0x15, r1	; 21
		                    TCCR2 = 0;
    2996:	15 bc       	out	0x25, r1	; 37
    2998:	80 e1       	ldi	r24, 0x10	; 16
    299a:	97 e2       	ldi	r25, 0x27	; 39
    299c:	fe 01       	movw	r30, r28
    299e:	31 97       	sbiw	r30, 0x01	; 1
    29a0:	f1 f7       	brne	.-4      	; 0x299e <main+0x2d8>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    29a2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    29a4:	d9 f7       	brne	.-10     	; 0x299c <main+0x2d6>

		                    _delay_ms(1000);

		                    TCCR2 = (1<<WGM21)|(1<<CS22)|(1<<CS20);
    29a6:	25 bc       	out	0x25, r2	; 37
		                    
							SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;
    29a8:	10 92 1d 05 	sts	0x051D, r1
    29ac:	80 91 1d 05 	lds	r24, 0x051D
    29b0:	80 93 1c 05 	sts	0x051C, r24
    29b4:	80 91 1c 05 	lds	r24, 0x051C
    29b8:	80 93 1b 05 	sts	0x051B, r24
    29bc:	80 91 1b 05 	lds	r24, 0x051B
    29c0:	80 93 1a 05 	sts	0x051A, r24
		                    EIFR = 0xff;
    29c4:	58 be       	out	0x38, r5	; 56
		                    STATE = ON_TIME_SET;                        
    29c6:	85 e0       	ldi	r24, 0x05	; 5
    29c8:	54 c0       	rjmp	.+168    	; 0x2a72 <main+0x3ac>
		                }
		                else
		                {
		                   ST = READ_PRESSURE;
    29ca:	40 92 46 05 	sts	0x0546, r4
                    		SENSOR_CHECK(1);
    29ce:	81 e0       	ldi	r24, 0x01	; 1
    29d0:	0e 94 8f 02 	call	0x51e	; 0x51e <SENSOR_CHECK>
							SD_BUF_PRT();
    29d4:	0e 94 27 07 	call	0xe4e	; 0xe4e <SD_BUF_PRT>
    29d8:	9b ce       	rjmp	.-714    	; 0x2710 <main+0x4a>
			}


			case ON_TIME_SET:
			{
				SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;
    29da:	10 92 1d 05 	sts	0x051D, r1
    29de:	80 91 1d 05 	lds	r24, 0x051D
    29e2:	80 93 1c 05 	sts	0x051C, r24
    29e6:	80 91 1c 05 	lds	r24, 0x051C
    29ea:	80 93 1b 05 	sts	0x051B, r24
    29ee:	80 91 1b 05 	lds	r24, 0x051B
    29f2:	80 93 1a 05 	sts	0x051A, r24
                ALL_LED_OFF;
    29f6:	80 91 65 00 	lds	r24, 0x0065
    29fa:	88 61       	ori	r24, 0x18	; 24
    29fc:	80 93 65 00 	sts	0x0065, r24

                if(ON_TIME_SET_OP())
    2a00:	0e 94 62 12 	call	0x24c4	; 0x24c4 <ON_TIME_SET_OP>
    2a04:	88 23       	and	r24, r24
    2a06:	09 f4       	brne	.+2      	; 0x2a0a <main+0x344>
    2a08:	63 c0       	rjmp	.+198    	; 0x2ad0 <main+0x40a>
                    STATE = OFF_TIME_SET;
    2a0a:	86 e0       	ldi	r24, 0x06	; 6
    2a0c:	32 c0       	rjmp	.+100    	; 0x2a72 <main+0x3ac>



			case OFF_TIME_SET:
			{
				 SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;
    2a0e:	10 92 1d 05 	sts	0x051D, r1
    2a12:	80 91 1d 05 	lds	r24, 0x051D
    2a16:	80 93 1c 05 	sts	0x051C, r24
    2a1a:	80 91 1c 05 	lds	r24, 0x051C
    2a1e:	80 93 1b 05 	sts	0x051B, r24
    2a22:	80 91 1b 05 	lds	r24, 0x051B
    2a26:	80 93 1a 05 	sts	0x051A, r24
                ALL_LED_OFF;
    2a2a:	80 91 65 00 	lds	r24, 0x0065
    2a2e:	88 61       	ori	r24, 0x18	; 24
    2a30:	80 93 65 00 	sts	0x0065, r24
                if(OFF_TIME_SET_OP())
    2a34:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <OFF_TIME_SET_OP>
    2a38:	88 23       	and	r24, r24
    2a3a:	09 f4       	brne	.+2      	; 0x2a3e <main+0x378>
    2a3c:	49 c0       	rjmp	.+146    	; 0x2ad0 <main+0x40a>
                    STATE = START_POINT_SET;
    2a3e:	88 e0       	ldi	r24, 0x08	; 8
    2a40:	18 c0       	rjmp	.+48     	; 0x2a72 <main+0x3ac>
			}


			case START_POINT_SET:
			{
				SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;
    2a42:	10 92 1d 05 	sts	0x051D, r1
    2a46:	80 91 1d 05 	lds	r24, 0x051D
    2a4a:	80 93 1c 05 	sts	0x051C, r24
    2a4e:	80 91 1c 05 	lds	r24, 0x051C
    2a52:	80 93 1b 05 	sts	0x051B, r24
    2a56:	80 91 1b 05 	lds	r24, 0x051B
    2a5a:	80 93 1a 05 	sts	0x051A, r24
                ALL_LED_OFF;
    2a5e:	80 91 65 00 	lds	r24, 0x0065
    2a62:	88 61       	ori	r24, 0x18	; 24
    2a64:	80 93 65 00 	sts	0x0065, r24
                if(START_POINT_SET_OP())
    2a68:	0e 94 de 0d 	call	0x1bbc	; 0x1bbc <START_POINT_SET_OP>
    2a6c:	88 23       	and	r24, r24
    2a6e:	81 f1       	breq	.+96     	; 0x2ad0 <main+0x40a>
                    STATE = STOP_POINT_SET;
    2a70:	89 e0       	ldi	r24, 0x09	; 9
    2a72:	80 93 8b 07 	sts	0x078B, r24
    2a76:	4c ce       	rjmp	.-872    	; 0x2710 <main+0x4a>



			case STOP_POINT_SET:
			{
				SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;
    2a78:	10 92 1d 05 	sts	0x051D, r1
    2a7c:	80 91 1d 05 	lds	r24, 0x051D
    2a80:	80 93 1c 05 	sts	0x051C, r24
    2a84:	80 91 1c 05 	lds	r24, 0x051C
    2a88:	80 93 1b 05 	sts	0x051B, r24
    2a8c:	80 91 1b 05 	lds	r24, 0x051B
    2a90:	80 93 1a 05 	sts	0x051A, r24
                ALL_LED_OFF;
    2a94:	80 91 65 00 	lds	r24, 0x0065
    2a98:	88 61       	ori	r24, 0x18	; 24
    2a9a:	80 93 65 00 	sts	0x0065, r24
                if(STOP_POINT_SET_OP())
    2a9e:	0e 94 04 0d 	call	0x1a08	; 0x1a08 <STOP_POINT_SET_OP>
    2aa2:	88 23       	and	r24, r24
    2aa4:	a9 f0       	breq	.+42     	; 0x2ad0 <main+0x40a>
                    STATE = MASTER_VALVE_SET;
    2aa6:	40 92 8b 07 	sts	0x078B, r4
    2aaa:	32 ce       	rjmp	.-924    	; 0x2710 <main+0x4a>


			 default:
            {

                SET_SW_FLAG=UP_SW_FLAG=OK_SW_FLAG=DOWN_SW_FLAG=0;
    2aac:	10 92 1d 05 	sts	0x051D, r1
    2ab0:	80 91 1d 05 	lds	r24, 0x051D
    2ab4:	80 93 1c 05 	sts	0x051C, r24
    2ab8:	80 91 1c 05 	lds	r24, 0x051C
    2abc:	80 93 1b 05 	sts	0x051B, r24
    2ac0:	80 91 1b 05 	lds	r24, 0x051B
    2ac4:	80 93 1a 05 	sts	0x051A, r24

				if (I2C_ADDR == MASTER )               STATE = SENSOR_CHECKING;
    2ac8:	80 91 12 05 	lds	r24, 0x0512
    2acc:	88 23       	and	r24, r24
    2ace:	19 f4       	brne	.+6      	; 0x2ad6 <main+0x410>
    2ad0:	90 92 8b 07 	sts	0x078B, r9
    2ad4:	1d ce       	rjmp	.-966    	; 0x2710 <main+0x4a>
                else									STATE = SLAVE_WAITING;
    2ad6:	80 92 8b 07 	sts	0x078B, r8
    2ada:	1a ce       	rjmp	.-972    	; 0x2710 <main+0x4a>

00002adc <__vector_12>:
}



ISR(TIMER1_COMPA_vect)
{
    2adc:	1f 92       	push	r1
    2ade:	0f 92       	push	r0
    2ae0:	0f b6       	in	r0, 0x3f	; 63
    2ae2:	0f 92       	push	r0
    2ae4:	0b b6       	in	r0, 0x3b	; 59
    2ae6:	0f 92       	push	r0
    2ae8:	11 24       	eor	r1, r1
    2aea:	2f 93       	push	r18
    2aec:	3f 93       	push	r19
    2aee:	4f 93       	push	r20
    2af0:	5f 93       	push	r21
    2af2:	6f 93       	push	r22
    2af4:	7f 93       	push	r23
    2af6:	8f 93       	push	r24
    2af8:	9f 93       	push	r25
    2afa:	af 93       	push	r26
    2afc:	bf 93       	push	r27
    2afe:	ef 93       	push	r30
    2b00:	ff 93       	push	r31
    static unsigned int TIM_CNT = 0;
    
    TIM_CNT++;
    2b02:	80 91 33 05 	lds	r24, 0x0533
    2b06:	90 91 34 05 	lds	r25, 0x0534
    2b0a:	01 96       	adiw	r24, 0x01	; 1
    2b0c:	90 93 34 05 	sts	0x0534, r25
    2b10:	80 93 33 05 	sts	0x0533, r24
    if(TIM_CNT == 1)	//1초마다 실행 -->> 실제 사용시에는 60으로 수정
    2b14:	01 97       	sbiw	r24, 0x01	; 1
    2b16:	09 f0       	breq	.+2      	; 0x2b1a <__vector_12+0x3e>
    2b18:	b4 c0       	rjmp	.+360    	; 0x2c82 <__vector_12+0x1a6>
    {
        TIM_CNT = 0;
    2b1a:	10 92 34 05 	sts	0x0534, r1
    2b1e:	10 92 33 05 	sts	0x0533, r1
		TIM_SDWR_FLAG = 1;
    2b22:	81 e0       	ldi	r24, 0x01	; 1
    2b24:	80 93 1e 05 	sts	0x051E, r24
		MIN++;
    2b28:	80 91 27 05 	lds	r24, 0x0527
    2b2c:	8f 5f       	subi	r24, 0xFF	; 255
    2b2e:	80 93 27 05 	sts	0x0527, r24
	
		if(MIN == 60)
    2b32:	80 91 27 05 	lds	r24, 0x0527
    2b36:	8c 33       	cpi	r24, 0x3C	; 60
    2b38:	09 f0       	breq	.+2      	; 0x2b3c <__vector_12+0x60>
    2b3a:	85 c0       	rjmp	.+266    	; 0x2c46 <__vector_12+0x16a>
		{
			MIN = 0;
    2b3c:	10 92 27 05 	sts	0x0527, r1
			HOUR++;
    2b40:	80 91 28 05 	lds	r24, 0x0528
    2b44:	8f 5f       	subi	r24, 0xFF	; 255
    2b46:	80 93 28 05 	sts	0x0528, r24
			if(SD_DETECTION_FLAG == 1)	///////////테스트 코드
    2b4a:	80 91 21 05 	lds	r24, 0x0521
    2b4e:	81 30       	cpi	r24, 0x01	; 1
    2b50:	a9 f5       	brne	.+106    	; 0x2bbc <__vector_12+0xe0>
			{
				//SD_DETECTION_FLAG=0;
				NEW_FILE_FLAG = 1;
    2b52:	80 93 22 05 	sts	0x0522, r24


					
						MSD_LED_OFF;
    2b56:	80 91 65 00 	lds	r24, 0x0065
    2b5a:	88 60       	ori	r24, 0x08	; 8
    2b5c:	80 93 65 00 	sts	0x0065, r24
						f_close(&fo);
    2b60:	8f e8       	ldi	r24, 0x8F	; 143
    2b62:	97 e0       	ldi	r25, 0x07	; 7
    2b64:	0e 94 bb 35 	call	0x6b76	; 0x6b76 <f_close>
						f_mount(0,"",0);
    2b68:	80 e0       	ldi	r24, 0x00	; 0
    2b6a:	90 e0       	ldi	r25, 0x00	; 0
    2b6c:	66 e1       	ldi	r22, 0x16	; 22
    2b6e:	73 e0       	ldi	r23, 0x03	; 3
    2b70:	40 e0       	ldi	r20, 0x00	; 0
    2b72:	0e 94 a7 1b 	call	0x374e	; 0x374e <f_mount>
						if((SD_DETECTION_FLAG=MSD_INIT()))
    2b76:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <MSD_INIT>
    2b7a:	80 93 21 05 	sts	0x0521, r24
    2b7e:	80 91 21 05 	lds	r24, 0x0521
    2b82:	88 23       	and	r24, r24
    2b84:	d9 f0       	breq	.+54     	; 0x2bbc <__vector_12+0xe0>
						{
							ST = NEW_FILE_OPEN;
    2b86:	8c e0       	ldi	r24, 0x0C	; 12
    2b88:	80 93 46 05 	sts	0x0546, r24
							NEW_FILE_FLAG = 0;
    2b8c:	10 92 22 05 	sts	0x0522, r1
							if(!SDWR_OP())
    2b90:	0e 94 f5 09 	call	0x13ea	; 0x13ea <SDWR_OP>
    2b94:	88 23       	and	r24, r24
    2b96:	91 f4       	brne	.+36     	; 0x2bbc <__vector_12+0xe0>
							{
								SD_DETECTION_FLAG = 0;
    2b98:	10 92 21 05 	sts	0x0521, r1
								f_close(&fo);
    2b9c:	8f e8       	ldi	r24, 0x8F	; 143
    2b9e:	97 e0       	ldi	r25, 0x07	; 7
    2ba0:	0e 94 bb 35 	call	0x6b76	; 0x6b76 <f_close>
								f_mount(0,"",0);
    2ba4:	80 e0       	ldi	r24, 0x00	; 0
    2ba6:	90 e0       	ldi	r25, 0x00	; 0
    2ba8:	66 e1       	ldi	r22, 0x16	; 22
    2baa:	73 e0       	ldi	r23, 0x03	; 3
    2bac:	40 e0       	ldi	r20, 0x00	; 0
    2bae:	0e 94 a7 1b 	call	0x374e	; 0x374e <f_mount>
								MSD_LED_OFF;
    2bb2:	80 91 65 00 	lds	r24, 0x0065
    2bb6:	88 60       	ori	r24, 0x08	; 8
    2bb8:	80 93 65 00 	sts	0x0065, r24
							}
						}
					
			}							//////////여기까지

			if(HOUR == 24)
    2bbc:	80 91 28 05 	lds	r24, 0x0528
    2bc0:	88 31       	cpi	r24, 0x18	; 24
    2bc2:	09 f0       	breq	.+2      	; 0x2bc6 <__vector_12+0xea>
    2bc4:	40 c0       	rjmp	.+128    	; 0x2c46 <__vector_12+0x16a>
			{
				HOUR = 0;
    2bc6:	10 92 28 05 	sts	0x0528, r1
				
				if(SD_DETECTION_FLAG == 1)
    2bca:	90 91 21 05 	lds	r25, 0x0521
    2bce:	91 30       	cpi	r25, 0x01	; 1
    2bd0:	d1 f5       	brne	.+116    	; 0x2c46 <__vector_12+0x16a>
				{
					FIL_NUM++;
    2bd2:	80 91 e0 03 	lds	r24, 0x03E0
    2bd6:	8f 5f       	subi	r24, 0xFF	; 255
    2bd8:	80 93 e0 03 	sts	0x03E0, r24
					//SD_DETECTION_FLAG=0;
					NEW_FILE_FLAG = 1;
    2bdc:	90 93 22 05 	sts	0x0522, r25

					
						MSD_LED_OFF;
    2be0:	80 91 65 00 	lds	r24, 0x0065
    2be4:	88 60       	ori	r24, 0x08	; 8
    2be6:	80 93 65 00 	sts	0x0065, r24
						f_close(&fo);
    2bea:	8f e8       	ldi	r24, 0x8F	; 143
    2bec:	97 e0       	ldi	r25, 0x07	; 7
    2bee:	0e 94 bb 35 	call	0x6b76	; 0x6b76 <f_close>
						f_mount(0,"",0);
    2bf2:	80 e0       	ldi	r24, 0x00	; 0
    2bf4:	90 e0       	ldi	r25, 0x00	; 0
    2bf6:	66 e1       	ldi	r22, 0x16	; 22
    2bf8:	73 e0       	ldi	r23, 0x03	; 3
    2bfa:	40 e0       	ldi	r20, 0x00	; 0
    2bfc:	0e 94 a7 1b 	call	0x374e	; 0x374e <f_mount>
						if((SD_DETECTION_FLAG=MSD_INIT()))
    2c00:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <MSD_INIT>
    2c04:	80 93 21 05 	sts	0x0521, r24
    2c08:	80 91 21 05 	lds	r24, 0x0521
    2c0c:	88 23       	and	r24, r24
    2c0e:	d9 f0       	breq	.+54     	; 0x2c46 <__vector_12+0x16a>
						{
							ST = NEW_FILE_OPEN;
    2c10:	8c e0       	ldi	r24, 0x0C	; 12
    2c12:	80 93 46 05 	sts	0x0546, r24
							NEW_FILE_FLAG = 0;
    2c16:	10 92 22 05 	sts	0x0522, r1
							if(!SDWR_OP())
    2c1a:	0e 94 f5 09 	call	0x13ea	; 0x13ea <SDWR_OP>
    2c1e:	88 23       	and	r24, r24
    2c20:	91 f4       	brne	.+36     	; 0x2c46 <__vector_12+0x16a>
							{
								SD_DETECTION_FLAG = 0;
    2c22:	10 92 21 05 	sts	0x0521, r1
								f_close(&fo);
    2c26:	8f e8       	ldi	r24, 0x8F	; 143
    2c28:	97 e0       	ldi	r25, 0x07	; 7
    2c2a:	0e 94 bb 35 	call	0x6b76	; 0x6b76 <f_close>
								f_mount(0,"",0);
    2c2e:	80 e0       	ldi	r24, 0x00	; 0
    2c30:	90 e0       	ldi	r25, 0x00	; 0
    2c32:	66 e1       	ldi	r22, 0x16	; 22
    2c34:	73 e0       	ldi	r23, 0x03	; 3
    2c36:	40 e0       	ldi	r20, 0x00	; 0
    2c38:	0e 94 a7 1b 	call	0x374e	; 0x374e <f_mount>
								MSD_LED_OFF;
    2c3c:	80 91 65 00 	lds	r24, 0x0065
    2c40:	88 60       	ori	r24, 0x08	; 8
    2c42:	80 93 65 00 	sts	0x0065, r24
				*/
			}
		}
		//SAVE_TIM();
	
		if(SD_DETECTION_FLAG)			//테스트용 코드
    2c46:	80 91 21 05 	lds	r24, 0x0521
    2c4a:	88 23       	and	r24, r24
    2c4c:	d1 f0       	breq	.+52     	; 0x2c82 <__vector_12+0x1a6>
		{
			
			if(ST == READ_PRESSURE)
    2c4e:	80 91 46 05 	lds	r24, 0x0546
    2c52:	81 30       	cpi	r24, 0x01	; 1
    2c54:	b1 f4       	brne	.+44     	; 0x2c82 <__vector_12+0x1a6>
			{				
				if(SDWR_OP() != 1)
    2c56:	0e 94 f5 09 	call	0x13ea	; 0x13ea <SDWR_OP>
    2c5a:	81 30       	cpi	r24, 0x01	; 1
    2c5c:	91 f0       	breq	.+36     	; 0x2c82 <__vector_12+0x1a6>
				{
					SD_DETECTION_FLAG = 0;
    2c5e:	10 92 21 05 	sts	0x0521, r1
					f_close(&fo);
    2c62:	8f e8       	ldi	r24, 0x8F	; 143
    2c64:	97 e0       	ldi	r25, 0x07	; 7
    2c66:	0e 94 bb 35 	call	0x6b76	; 0x6b76 <f_close>
					f_mount(0,"",0);
    2c6a:	80 e0       	ldi	r24, 0x00	; 0
    2c6c:	90 e0       	ldi	r25, 0x00	; 0
    2c6e:	66 e1       	ldi	r22, 0x16	; 22
    2c70:	73 e0       	ldi	r23, 0x03	; 3
    2c72:	40 e0       	ldi	r20, 0x00	; 0
    2c74:	0e 94 a7 1b 	call	0x374e	; 0x374e <f_mount>
					MSD_LED_OFF;
    2c78:	80 91 65 00 	lds	r24, 0x0065
    2c7c:	88 60       	ori	r24, 0x08	; 8
    2c7e:	80 93 65 00 	sts	0x0065, r24
				}
			}
		}*/
    }
    
}
    2c82:	ff 91       	pop	r31
    2c84:	ef 91       	pop	r30
    2c86:	bf 91       	pop	r27
    2c88:	af 91       	pop	r26
    2c8a:	9f 91       	pop	r25
    2c8c:	8f 91       	pop	r24
    2c8e:	7f 91       	pop	r23
    2c90:	6f 91       	pop	r22
    2c92:	5f 91       	pop	r21
    2c94:	4f 91       	pop	r20
    2c96:	3f 91       	pop	r19
    2c98:	2f 91       	pop	r18
    2c9a:	0f 90       	pop	r0
    2c9c:	0b be       	out	0x3b, r0	; 59
    2c9e:	0f 90       	pop	r0
    2ca0:	0f be       	out	0x3f, r0	; 63
    2ca2:	0f 90       	pop	r0
    2ca4:	1f 90       	pop	r1
    2ca6:	18 95       	reti

00002ca8 <mem_cpy>:
    2ca8:	0f 93       	push	r16
    2caa:	1f 93       	push	r17
    2cac:	cf 93       	push	r28
    2cae:	df 93       	push	r29
    2cb0:	8c 01       	movw	r16, r24
    2cb2:	eb 01       	movw	r28, r22
    2cb4:	ba 01       	movw	r22, r20
    2cb6:	20 e0       	ldi	r18, 0x00	; 0
    2cb8:	30 e0       	ldi	r19, 0x00	; 0
    2cba:	0e c0       	rjmp	.+28     	; 0x2cd8 <mem_cpy+0x30>
    2cbc:	f8 01       	movw	r30, r16
    2cbe:	e2 0f       	add	r30, r18
    2cc0:	f3 1f       	adc	r31, r19
    2cc2:	de 01       	movw	r26, r28
    2cc4:	a2 0f       	add	r26, r18
    2cc6:	b3 1f       	adc	r27, r19
    2cc8:	8d 91       	ld	r24, X+
    2cca:	9c 91       	ld	r25, X
    2ccc:	91 83       	std	Z+1, r25	; 0x01
    2cce:	80 83       	st	Z, r24
    2cd0:	42 50       	subi	r20, 0x02	; 2
    2cd2:	50 40       	sbci	r21, 0x00	; 0
    2cd4:	2e 5f       	subi	r18, 0xFE	; 254
    2cd6:	3f 4f       	sbci	r19, 0xFF	; 255
    2cd8:	42 30       	cpi	r20, 0x02	; 2
    2cda:	51 05       	cpc	r21, r1
    2cdc:	78 f7       	brcc	.-34     	; 0x2cbc <mem_cpy+0x14>
    2cde:	cb 01       	movw	r24, r22
    2ce0:	8e 7f       	andi	r24, 0xFE	; 254
    2ce2:	de 01       	movw	r26, r28
    2ce4:	a8 0f       	add	r26, r24
    2ce6:	b9 1f       	adc	r27, r25
    2ce8:	f8 01       	movw	r30, r16
    2cea:	e8 0f       	add	r30, r24
    2cec:	f9 1f       	adc	r31, r25
    2cee:	60 ff       	sbrs	r22, 0
    2cf0:	02 c0       	rjmp	.+4      	; 0x2cf6 <mem_cpy+0x4e>
    2cf2:	8c 91       	ld	r24, X
    2cf4:	80 83       	st	Z, r24
    2cf6:	df 91       	pop	r29
    2cf8:	cf 91       	pop	r28
    2cfa:	1f 91       	pop	r17
    2cfc:	0f 91       	pop	r16
    2cfe:	08 95       	ret

00002d00 <chk_lock>:
    2d00:	fc 01       	movw	r30, r24
    2d02:	20 91 39 05 	lds	r18, 0x0539
    2d06:	30 91 3a 05 	lds	r19, 0x053A
    2d0a:	21 15       	cp	r18, r1
    2d0c:	31 05       	cpc	r19, r1
    2d0e:	69 f1       	breq	.+90     	; 0x2d6a <chk_lock+0x6a>
    2d10:	80 81       	ld	r24, Z
    2d12:	91 81       	ldd	r25, Z+1	; 0x01
    2d14:	28 17       	cp	r18, r24
    2d16:	39 07       	cpc	r19, r25
    2d18:	d1 f4       	brne	.+52     	; 0x2d4e <chk_lock+0x4e>
    2d1a:	20 91 3b 05 	lds	r18, 0x053B
    2d1e:	30 91 3c 05 	lds	r19, 0x053C
    2d22:	40 91 3d 05 	lds	r20, 0x053D
    2d26:	50 91 3e 05 	lds	r21, 0x053E
    2d2a:	86 81       	ldd	r24, Z+6	; 0x06
    2d2c:	97 81       	ldd	r25, Z+7	; 0x07
    2d2e:	a0 85       	ldd	r26, Z+8	; 0x08
    2d30:	b1 85       	ldd	r27, Z+9	; 0x09
    2d32:	28 17       	cp	r18, r24
    2d34:	39 07       	cpc	r19, r25
    2d36:	4a 07       	cpc	r20, r26
    2d38:	5b 07       	cpc	r21, r27
    2d3a:	49 f4       	brne	.+18     	; 0x2d4e <chk_lock+0x4e>
    2d3c:	20 91 3f 05 	lds	r18, 0x053F
    2d40:	30 91 40 05 	lds	r19, 0x0540
    2d44:	84 81       	ldd	r24, Z+4	; 0x04
    2d46:	95 81       	ldd	r25, Z+5	; 0x05
    2d48:	28 17       	cp	r18, r24
    2d4a:	39 07       	cpc	r19, r25
    2d4c:	29 f0       	breq	.+10     	; 0x2d58 <chk_lock+0x58>
    2d4e:	62 30       	cpi	r22, 0x02	; 2
    2d50:	71 05       	cpc	r23, r1
    2d52:	59 f0       	breq	.+22     	; 0x2d6a <chk_lock+0x6a>
    2d54:	82 e1       	ldi	r24, 0x12	; 18
    2d56:	08 95       	ret
    2d58:	67 2b       	or	r22, r23
    2d5a:	49 f4       	brne	.+18     	; 0x2d6e <chk_lock+0x6e>
    2d5c:	80 91 41 05 	lds	r24, 0x0541
    2d60:	90 91 42 05 	lds	r25, 0x0542
    2d64:	80 50       	subi	r24, 0x00	; 0
    2d66:	91 40       	sbci	r25, 0x01	; 1
    2d68:	11 f0       	breq	.+4      	; 0x2d6e <chk_lock+0x6e>
    2d6a:	80 e0       	ldi	r24, 0x00	; 0
    2d6c:	08 95       	ret
    2d6e:	80 e1       	ldi	r24, 0x10	; 16
    2d70:	08 95       	ret

00002d72 <inc_lock>:
    2d72:	0f 93       	push	r16
    2d74:	1f 93       	push	r17
    2d76:	cf 93       	push	r28
    2d78:	df 93       	push	r29
    2d7a:	fc 01       	movw	r30, r24
    2d7c:	8b 01       	movw	r16, r22
    2d7e:	60 91 39 05 	lds	r22, 0x0539
    2d82:	70 91 3a 05 	lds	r23, 0x053A
    2d86:	c0 81       	ld	r28, Z
    2d88:	d1 81       	ldd	r29, Z+1	; 0x01
    2d8a:	6c 17       	cp	r22, r28
    2d8c:	7d 07       	cpc	r23, r29
    2d8e:	d1 f4       	brne	.+52     	; 0x2dc4 <inc_lock+0x52>
    2d90:	20 91 3b 05 	lds	r18, 0x053B
    2d94:	30 91 3c 05 	lds	r19, 0x053C
    2d98:	40 91 3d 05 	lds	r20, 0x053D
    2d9c:	50 91 3e 05 	lds	r21, 0x053E
    2da0:	86 81       	ldd	r24, Z+6	; 0x06
    2da2:	97 81       	ldd	r25, Z+7	; 0x07
    2da4:	a0 85       	ldd	r26, Z+8	; 0x08
    2da6:	b1 85       	ldd	r27, Z+9	; 0x09
    2da8:	28 17       	cp	r18, r24
    2daa:	39 07       	cpc	r19, r25
    2dac:	4a 07       	cpc	r20, r26
    2dae:	5b 07       	cpc	r21, r27
    2db0:	49 f4       	brne	.+18     	; 0x2dc4 <inc_lock+0x52>
    2db2:	20 91 3f 05 	lds	r18, 0x053F
    2db6:	30 91 40 05 	lds	r19, 0x0540
    2dba:	84 81       	ldd	r24, Z+4	; 0x04
    2dbc:	95 81       	ldd	r25, Z+5	; 0x05
    2dbe:	28 17       	cp	r18, r24
    2dc0:	39 07       	cpc	r19, r25
    2dc2:	19 f0       	breq	.+6      	; 0x2dca <inc_lock+0x58>
    2dc4:	67 2b       	or	r22, r23
    2dc6:	c1 f4       	brne	.+48     	; 0x2df8 <inc_lock+0x86>
    2dc8:	1f c0       	rjmp	.+62     	; 0x2e08 <inc_lock+0x96>
    2dca:	01 2b       	or	r16, r17
    2dcc:	49 f0       	breq	.+18     	; 0x2de0 <inc_lock+0x6e>
    2dce:	80 91 41 05 	lds	r24, 0x0541
    2dd2:	90 91 42 05 	lds	r25, 0x0542
    2dd6:	89 2b       	or	r24, r25
    2dd8:	79 f4       	brne	.+30     	; 0x2df8 <inc_lock+0x86>
    2dda:	80 e0       	ldi	r24, 0x00	; 0
    2ddc:	91 e0       	ldi	r25, 0x01	; 1
    2dde:	05 c0       	rjmp	.+10     	; 0x2dea <inc_lock+0x78>
    2de0:	80 91 41 05 	lds	r24, 0x0541
    2de4:	90 91 42 05 	lds	r25, 0x0542
    2de8:	01 96       	adiw	r24, 0x01	; 1
    2dea:	90 93 42 05 	sts	0x0542, r25
    2dee:	80 93 41 05 	sts	0x0541, r24
    2df2:	21 e0       	ldi	r18, 0x01	; 1
    2df4:	30 e0       	ldi	r19, 0x00	; 0
    2df6:	02 c0       	rjmp	.+4      	; 0x2dfc <inc_lock+0x8a>
    2df8:	20 e0       	ldi	r18, 0x00	; 0
    2dfa:	30 e0       	ldi	r19, 0x00	; 0
    2dfc:	c9 01       	movw	r24, r18
    2dfe:	df 91       	pop	r29
    2e00:	cf 91       	pop	r28
    2e02:	1f 91       	pop	r17
    2e04:	0f 91       	pop	r16
    2e06:	08 95       	ret
    2e08:	d0 93 3a 05 	sts	0x053A, r29
    2e0c:	c0 93 39 05 	sts	0x0539, r28
    2e10:	86 81       	ldd	r24, Z+6	; 0x06
    2e12:	97 81       	ldd	r25, Z+7	; 0x07
    2e14:	a0 85       	ldd	r26, Z+8	; 0x08
    2e16:	b1 85       	ldd	r27, Z+9	; 0x09
    2e18:	80 93 3b 05 	sts	0x053B, r24
    2e1c:	90 93 3c 05 	sts	0x053C, r25
    2e20:	a0 93 3d 05 	sts	0x053D, r26
    2e24:	b0 93 3e 05 	sts	0x053E, r27
    2e28:	84 81       	ldd	r24, Z+4	; 0x04
    2e2a:	95 81       	ldd	r25, Z+5	; 0x05
    2e2c:	90 93 40 05 	sts	0x0540, r25
    2e30:	80 93 3f 05 	sts	0x053F, r24
    2e34:	10 92 42 05 	sts	0x0542, r1
    2e38:	10 92 41 05 	sts	0x0541, r1
    2e3c:	c6 cf       	rjmp	.-116    	; 0x2dca <inc_lock+0x58>

00002e3e <clust2sect>:
    2e3e:	ef 92       	push	r14
    2e40:	ff 92       	push	r15
    2e42:	0f 93       	push	r16
    2e44:	1f 93       	push	r17
    2e46:	cf 93       	push	r28
    2e48:	df 93       	push	r29
    2e4a:	ec 01       	movw	r28, r24
    2e4c:	7a 01       	movw	r14, r20
    2e4e:	8b 01       	movw	r16, r22
    2e50:	8e ef       	ldi	r24, 0xFE	; 254
    2e52:	9f ef       	ldi	r25, 0xFF	; 255
    2e54:	af ef       	ldi	r26, 0xFF	; 255
    2e56:	bf ef       	ldi	r27, 0xFF	; 255
    2e58:	e8 0e       	add	r14, r24
    2e5a:	f9 1e       	adc	r15, r25
    2e5c:	0a 1f       	adc	r16, r26
    2e5e:	1b 1f       	adc	r17, r27
    2e60:	8a 89       	ldd	r24, Y+18	; 0x12
    2e62:	9b 89       	ldd	r25, Y+19	; 0x13
    2e64:	ac 89       	ldd	r26, Y+20	; 0x14
    2e66:	bd 89       	ldd	r27, Y+21	; 0x15
    2e68:	02 97       	sbiw	r24, 0x02	; 2
    2e6a:	a1 09       	sbc	r26, r1
    2e6c:	b1 09       	sbc	r27, r1
    2e6e:	e8 16       	cp	r14, r24
    2e70:	f9 06       	cpc	r15, r25
    2e72:	0a 07       	cpc	r16, r26
    2e74:	1b 07       	cpc	r17, r27
    2e76:	28 f0       	brcs	.+10     	; 0x2e82 <clust2sect+0x44>
    2e78:	20 e0       	ldi	r18, 0x00	; 0
    2e7a:	30 e0       	ldi	r19, 0x00	; 0
    2e7c:	40 e0       	ldi	r20, 0x00	; 0
    2e7e:	50 e0       	ldi	r21, 0x00	; 0
    2e80:	12 c0       	rjmp	.+36     	; 0x2ea6 <clust2sect+0x68>
    2e82:	2a 81       	ldd	r18, Y+2	; 0x02
    2e84:	30 e0       	ldi	r19, 0x00	; 0
    2e86:	40 e0       	ldi	r20, 0x00	; 0
    2e88:	50 e0       	ldi	r21, 0x00	; 0
    2e8a:	c8 01       	movw	r24, r16
    2e8c:	b7 01       	movw	r22, r14
    2e8e:	0e 94 b2 40 	call	0x8164	; 0x8164 <__mulsi3>
    2e92:	9b 01       	movw	r18, r22
    2e94:	ac 01       	movw	r20, r24
    2e96:	8e a1       	ldd	r24, Y+38	; 0x26
    2e98:	9f a1       	ldd	r25, Y+39	; 0x27
    2e9a:	a8 a5       	ldd	r26, Y+40	; 0x28
    2e9c:	b9 a5       	ldd	r27, Y+41	; 0x29
    2e9e:	28 0f       	add	r18, r24
    2ea0:	39 1f       	adc	r19, r25
    2ea2:	4a 1f       	adc	r20, r26
    2ea4:	5b 1f       	adc	r21, r27
    2ea6:	b9 01       	movw	r22, r18
    2ea8:	ca 01       	movw	r24, r20
    2eaa:	df 91       	pop	r29
    2eac:	cf 91       	pop	r28
    2eae:	1f 91       	pop	r17
    2eb0:	0f 91       	pop	r16
    2eb2:	ff 90       	pop	r15
    2eb4:	ef 90       	pop	r14
    2eb6:	08 95       	ret

00002eb8 <get_fileinfo>:
    2eb8:	cf 93       	push	r28
    2eba:	df 93       	push	r29
    2ebc:	fc 01       	movw	r30, r24
    2ebe:	9b 01       	movw	r18, r22
    2ec0:	ab 01       	movw	r20, r22
    2ec2:	47 5f       	subi	r20, 0xF7	; 247
    2ec4:	5f 4f       	sbci	r21, 0xFF	; 255
    2ec6:	86 85       	ldd	r24, Z+14	; 0x0e
    2ec8:	97 85       	ldd	r25, Z+15	; 0x0f
    2eca:	a0 89       	ldd	r26, Z+16	; 0x10
    2ecc:	b1 89       	ldd	r27, Z+17	; 0x11
    2ece:	00 97       	sbiw	r24, 0x00	; 0
    2ed0:	a1 05       	cpc	r26, r1
    2ed2:	b1 05       	cpc	r27, r1
    2ed4:	71 f1       	breq	.+92     	; 0x2f32 <get_fileinfo+0x7a>
    2ed6:	c2 89       	ldd	r28, Z+18	; 0x12
    2ed8:	d3 89       	ldd	r29, Z+19	; 0x13
    2eda:	80 e0       	ldi	r24, 0x00	; 0
    2edc:	90 e0       	ldi	r25, 0x00	; 0
    2ede:	6e e2       	ldi	r22, 0x2E	; 46
    2ee0:	fe 01       	movw	r30, r28
    2ee2:	e8 0f       	add	r30, r24
    2ee4:	f9 1f       	adc	r31, r25
    2ee6:	e0 81       	ld	r30, Z
    2ee8:	01 96       	adiw	r24, 0x01	; 1
    2eea:	e0 32       	cpi	r30, 0x20	; 32
    2eec:	61 f0       	breq	.+24     	; 0x2f06 <get_fileinfo+0x4e>
    2eee:	e5 30       	cpi	r30, 0x05	; 5
    2ef0:	09 f4       	brne	.+2      	; 0x2ef4 <get_fileinfo+0x3c>
    2ef2:	e5 ee       	ldi	r30, 0xE5	; 229
    2ef4:	89 30       	cpi	r24, 0x09	; 9
    2ef6:	91 05       	cpc	r25, r1
    2ef8:	19 f4       	brne	.+6      	; 0x2f00 <get_fileinfo+0x48>
    2efa:	da 01       	movw	r26, r20
    2efc:	6d 93       	st	X+, r22
    2efe:	ad 01       	movw	r20, r26
    2f00:	da 01       	movw	r26, r20
    2f02:	ed 93       	st	X+, r30
    2f04:	ad 01       	movw	r20, r26
    2f06:	8b 30       	cpi	r24, 0x0B	; 11
    2f08:	91 05       	cpc	r25, r1
    2f0a:	51 f7       	brne	.-44     	; 0x2ee0 <get_fileinfo+0x28>
    2f0c:	8b 85       	ldd	r24, Y+11	; 0x0b
    2f0e:	f9 01       	movw	r30, r18
    2f10:	80 87       	std	Z+8, r24	; 0x08
    2f12:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2f14:	9d 8d       	ldd	r25, Y+29	; 0x1d
    2f16:	ae 8d       	ldd	r26, Y+30	; 0x1e
    2f18:	bf 8d       	ldd	r27, Y+31	; 0x1f
    2f1a:	80 83       	st	Z, r24
    2f1c:	91 83       	std	Z+1, r25	; 0x01
    2f1e:	a2 83       	std	Z+2, r26	; 0x02
    2f20:	b3 83       	std	Z+3, r27	; 0x03
    2f22:	88 8d       	ldd	r24, Y+24	; 0x18
    2f24:	99 8d       	ldd	r25, Y+25	; 0x19
    2f26:	95 83       	std	Z+5, r25	; 0x05
    2f28:	84 83       	std	Z+4, r24	; 0x04
    2f2a:	8e 89       	ldd	r24, Y+22	; 0x16
    2f2c:	9f 89       	ldd	r25, Y+23	; 0x17
    2f2e:	97 83       	std	Z+7, r25	; 0x07
    2f30:	86 83       	std	Z+6, r24	; 0x06
    2f32:	da 01       	movw	r26, r20
    2f34:	1c 92       	st	X, r1
    2f36:	df 91       	pop	r29
    2f38:	cf 91       	pop	r28
    2f3a:	08 95       	ret

00002f3c <get_ldnumber>:
    2f3c:	cf 93       	push	r28
    2f3e:	df 93       	push	r29
    2f40:	ec 01       	movw	r28, r24
    2f42:	a8 81       	ld	r26, Y
    2f44:	b9 81       	ldd	r27, Y+1	; 0x01
    2f46:	10 97       	sbiw	r26, 0x00	; 0
    2f48:	f1 f0       	breq	.+60     	; 0x2f86 <get_ldnumber+0x4a>
    2f4a:	fd 01       	movw	r30, r26
    2f4c:	01 c0       	rjmp	.+2      	; 0x2f50 <get_ldnumber+0x14>
    2f4e:	31 96       	adiw	r30, 0x01	; 1
    2f50:	80 81       	ld	r24, Z
    2f52:	81 32       	cpi	r24, 0x21	; 33
    2f54:	18 f4       	brcc	.+6      	; 0x2f5c <get_ldnumber+0x20>
    2f56:	20 e0       	ldi	r18, 0x00	; 0
    2f58:	30 e0       	ldi	r19, 0x00	; 0
    2f5a:	17 c0       	rjmp	.+46     	; 0x2f8a <get_ldnumber+0x4e>
    2f5c:	8a 33       	cpi	r24, 0x3A	; 58
    2f5e:	b9 f7       	brne	.-18     	; 0x2f4e <get_ldnumber+0x12>
    2f60:	8c 91       	ld	r24, X
    2f62:	28 2f       	mov	r18, r24
    2f64:	30 e0       	ldi	r19, 0x00	; 0
    2f66:	20 53       	subi	r18, 0x30	; 48
    2f68:	30 40       	sbci	r19, 0x00	; 0
    2f6a:	2a 30       	cpi	r18, 0x0A	; 10
    2f6c:	31 05       	cpc	r19, r1
    2f6e:	58 f4       	brcc	.+22     	; 0x2f86 <get_ldnumber+0x4a>
    2f70:	11 96       	adiw	r26, 0x01	; 1
    2f72:	ae 17       	cp	r26, r30
    2f74:	bf 07       	cpc	r27, r31
    2f76:	39 f4       	brne	.+14     	; 0x2f86 <get_ldnumber+0x4a>
    2f78:	21 15       	cp	r18, r1
    2f7a:	31 05       	cpc	r19, r1
    2f7c:	21 f4       	brne	.+8      	; 0x2f86 <get_ldnumber+0x4a>
    2f7e:	31 96       	adiw	r30, 0x01	; 1
    2f80:	f9 83       	std	Y+1, r31	; 0x01
    2f82:	e8 83       	st	Y, r30
    2f84:	02 c0       	rjmp	.+4      	; 0x2f8a <get_ldnumber+0x4e>
    2f86:	2f ef       	ldi	r18, 0xFF	; 255
    2f88:	3f ef       	ldi	r19, 0xFF	; 255
    2f8a:	c9 01       	movw	r24, r18
    2f8c:	df 91       	pop	r29
    2f8e:	cf 91       	pop	r28
    2f90:	08 95       	ret

00002f92 <validate>:
    2f92:	fc 01       	movw	r30, r24
    2f94:	00 97       	sbiw	r24, 0x00	; 0
    2f96:	d1 f0       	breq	.+52     	; 0x2fcc <validate+0x3a>
    2f98:	a0 81       	ld	r26, Z
    2f9a:	b1 81       	ldd	r27, Z+1	; 0x01
    2f9c:	10 97       	sbiw	r26, 0x00	; 0
    2f9e:	b1 f0       	breq	.+44     	; 0x2fcc <validate+0x3a>
    2fa0:	8c 91       	ld	r24, X
    2fa2:	88 23       	and	r24, r24
    2fa4:	99 f0       	breq	.+38     	; 0x2fcc <validate+0x3a>
    2fa6:	16 96       	adiw	r26, 0x06	; 6
    2fa8:	2d 91       	ld	r18, X+
    2faa:	3c 91       	ld	r19, X
    2fac:	17 97       	sbiw	r26, 0x07	; 7
    2fae:	82 81       	ldd	r24, Z+2	; 0x02
    2fb0:	93 81       	ldd	r25, Z+3	; 0x03
    2fb2:	28 17       	cp	r18, r24
    2fb4:	39 07       	cpc	r19, r25
    2fb6:	51 f4       	brne	.+20     	; 0x2fcc <validate+0x3a>
    2fb8:	11 96       	adiw	r26, 0x01	; 1
    2fba:	8c 91       	ld	r24, X
    2fbc:	0e 94 c8 37 	call	0x6f90	; 0x6f90 <disk_status>
    2fc0:	80 fd       	sbrc	r24, 0
    2fc2:	02 c0       	rjmp	.+4      	; 0x2fc8 <validate+0x36>
    2fc4:	80 e0       	ldi	r24, 0x00	; 0
    2fc6:	08 95       	ret
    2fc8:	83 e0       	ldi	r24, 0x03	; 3
    2fca:	08 95       	ret
    2fcc:	89 e0       	ldi	r24, 0x09	; 9
    2fce:	08 95       	ret

00002fd0 <f_closedir>:
    2fd0:	cf 93       	push	r28
    2fd2:	df 93       	push	r29
    2fd4:	ec 01       	movw	r28, r24
    2fd6:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <validate>
    2fda:	88 23       	and	r24, r24
    2fdc:	31 f5       	brne	.+76     	; 0x302a <f_closedir+0x5a>
    2fde:	2e 89       	ldd	r18, Y+22	; 0x16
    2fe0:	3f 89       	ldd	r19, Y+23	; 0x17
    2fe2:	21 15       	cp	r18, r1
    2fe4:	31 05       	cpc	r19, r1
    2fe6:	f9 f0       	breq	.+62     	; 0x3026 <f_closedir+0x56>
    2fe8:	21 30       	cpi	r18, 0x01	; 1
    2fea:	31 05       	cpc	r19, r1
    2fec:	11 f0       	breq	.+4      	; 0x2ff2 <f_closedir+0x22>
    2fee:	82 e0       	ldi	r24, 0x02	; 2
    2ff0:	1c c0       	rjmp	.+56     	; 0x302a <f_closedir+0x5a>
    2ff2:	20 91 41 05 	lds	r18, 0x0541
    2ff6:	30 91 42 05 	lds	r19, 0x0542
    2ffa:	91 e0       	ldi	r25, 0x01	; 1
    2ffc:	20 30       	cpi	r18, 0x00	; 0
    2ffe:	39 07       	cpc	r19, r25
    3000:	19 f4       	brne	.+6      	; 0x3008 <f_closedir+0x38>
    3002:	20 e0       	ldi	r18, 0x00	; 0
    3004:	30 e0       	ldi	r19, 0x00	; 0
    3006:	05 c0       	rjmp	.+10     	; 0x3012 <f_closedir+0x42>
    3008:	21 15       	cp	r18, r1
    300a:	31 05       	cpc	r19, r1
    300c:	11 f0       	breq	.+4      	; 0x3012 <f_closedir+0x42>
    300e:	21 50       	subi	r18, 0x01	; 1
    3010:	30 40       	sbci	r19, 0x00	; 0
    3012:	30 93 42 05 	sts	0x0542, r19
    3016:	20 93 41 05 	sts	0x0541, r18
    301a:	23 2b       	or	r18, r19
    301c:	21 f4       	brne	.+8      	; 0x3026 <f_closedir+0x56>
    301e:	10 92 3a 05 	sts	0x053A, r1
    3022:	10 92 39 05 	sts	0x0539, r1
    3026:	19 82       	std	Y+1, r1	; 0x01
    3028:	18 82       	st	Y, r1
    302a:	df 91       	pop	r29
    302c:	cf 91       	pop	r28
    302e:	08 95       	ret

00003030 <sync_window>:
    3030:	8f 92       	push	r8
    3032:	9f 92       	push	r9
    3034:	af 92       	push	r10
    3036:	bf 92       	push	r11
    3038:	cf 92       	push	r12
    303a:	df 92       	push	r13
    303c:	ef 92       	push	r14
    303e:	ff 92       	push	r15
    3040:	0f 93       	push	r16
    3042:	1f 93       	push	r17
    3044:	cf 93       	push	r28
    3046:	df 93       	push	r29
    3048:	ec 01       	movw	r28, r24
    304a:	8c 81       	ldd	r24, Y+4	; 0x04
    304c:	88 23       	and	r24, r24
    304e:	09 f4       	brne	.+2      	; 0x3052 <sync_window+0x22>
    3050:	44 c0       	rjmp	.+136    	; 0x30da <sync_window+0xaa>
    3052:	ca a4       	ldd	r12, Y+42	; 0x2a
    3054:	db a4       	ldd	r13, Y+43	; 0x2b
    3056:	ec a4       	ldd	r14, Y+44	; 0x2c
    3058:	fd a4       	ldd	r15, Y+45	; 0x2d
    305a:	8e e2       	ldi	r24, 0x2E	; 46
    305c:	88 2e       	mov	r8, r24
    305e:	91 2c       	mov	r9, r1
    3060:	8c 0e       	add	r8, r28
    3062:	9d 1e       	adc	r9, r29
    3064:	89 81       	ldd	r24, Y+1	; 0x01
    3066:	b4 01       	movw	r22, r8
    3068:	a7 01       	movw	r20, r14
    306a:	96 01       	movw	r18, r12
    306c:	01 e0       	ldi	r16, 0x01	; 1
    306e:	10 e0       	ldi	r17, 0x00	; 0
    3070:	0e 94 25 38 	call	0x704a	; 0x704a <disk_write>
    3074:	88 23       	and	r24, r24
    3076:	11 f0       	breq	.+4      	; 0x307c <sync_window+0x4c>
    3078:	81 e0       	ldi	r24, 0x01	; 1
    307a:	30 c0       	rjmp	.+96     	; 0x30dc <sync_window+0xac>
    307c:	1c 82       	std	Y+4, r1	; 0x04
    307e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3080:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3082:	a8 a1       	ldd	r26, Y+32	; 0x20
    3084:	b9 a1       	ldd	r27, Y+33	; 0x21
    3086:	a7 01       	movw	r20, r14
    3088:	96 01       	movw	r18, r12
    308a:	28 1b       	sub	r18, r24
    308c:	39 0b       	sbc	r19, r25
    308e:	4a 0b       	sbc	r20, r26
    3090:	5b 0b       	sbc	r21, r27
    3092:	8e 89       	ldd	r24, Y+22	; 0x16
    3094:	9f 89       	ldd	r25, Y+23	; 0x17
    3096:	a8 8d       	ldd	r26, Y+24	; 0x18
    3098:	b9 8d       	ldd	r27, Y+25	; 0x19
    309a:	28 17       	cp	r18, r24
    309c:	39 07       	cpc	r19, r25
    309e:	4a 07       	cpc	r20, r26
    30a0:	5b 07       	cpc	r21, r27
    30a2:	d8 f4       	brcc	.+54     	; 0x30da <sync_window+0xaa>
    30a4:	8b 81       	ldd	r24, Y+3	; 0x03
    30a6:	a8 2e       	mov	r10, r24
    30a8:	bb 24       	eor	r11, r11
    30aa:	13 c0       	rjmp	.+38     	; 0x30d2 <sync_window+0xa2>
    30ac:	8e 89       	ldd	r24, Y+22	; 0x16
    30ae:	9f 89       	ldd	r25, Y+23	; 0x17
    30b0:	a8 8d       	ldd	r26, Y+24	; 0x18
    30b2:	b9 8d       	ldd	r27, Y+25	; 0x19
    30b4:	c8 0e       	add	r12, r24
    30b6:	d9 1e       	adc	r13, r25
    30b8:	ea 1e       	adc	r14, r26
    30ba:	fb 1e       	adc	r15, r27
    30bc:	89 81       	ldd	r24, Y+1	; 0x01
    30be:	b4 01       	movw	r22, r8
    30c0:	a7 01       	movw	r20, r14
    30c2:	96 01       	movw	r18, r12
    30c4:	01 e0       	ldi	r16, 0x01	; 1
    30c6:	10 e0       	ldi	r17, 0x00	; 0
    30c8:	0e 94 25 38 	call	0x704a	; 0x704a <disk_write>
    30cc:	08 94       	sec
    30ce:	a1 08       	sbc	r10, r1
    30d0:	b1 08       	sbc	r11, r1
    30d2:	82 e0       	ldi	r24, 0x02	; 2
    30d4:	a8 16       	cp	r10, r24
    30d6:	b1 04       	cpc	r11, r1
    30d8:	48 f7       	brcc	.-46     	; 0x30ac <sync_window+0x7c>
    30da:	80 e0       	ldi	r24, 0x00	; 0
    30dc:	df 91       	pop	r29
    30de:	cf 91       	pop	r28
    30e0:	1f 91       	pop	r17
    30e2:	0f 91       	pop	r16
    30e4:	ff 90       	pop	r15
    30e6:	ef 90       	pop	r14
    30e8:	df 90       	pop	r13
    30ea:	cf 90       	pop	r12
    30ec:	bf 90       	pop	r11
    30ee:	af 90       	pop	r10
    30f0:	9f 90       	pop	r9
    30f2:	8f 90       	pop	r8
    30f4:	08 95       	ret

000030f6 <move_window>:
    30f6:	af 92       	push	r10
    30f8:	bf 92       	push	r11
    30fa:	cf 92       	push	r12
    30fc:	df 92       	push	r13
    30fe:	ef 92       	push	r14
    3100:	ff 92       	push	r15
    3102:	0f 93       	push	r16
    3104:	1f 93       	push	r17
    3106:	df 93       	push	r29
    3108:	cf 93       	push	r28
    310a:	0f 92       	push	r0
    310c:	cd b7       	in	r28, 0x3d	; 61
    310e:	de b7       	in	r29, 0x3e	; 62
    3110:	5c 01       	movw	r10, r24
    3112:	6a 01       	movw	r12, r20
    3114:	7b 01       	movw	r14, r22
    3116:	fc 01       	movw	r30, r24
    3118:	82 a5       	ldd	r24, Z+42	; 0x2a
    311a:	93 a5       	ldd	r25, Z+43	; 0x2b
    311c:	a4 a5       	ldd	r26, Z+44	; 0x2c
    311e:	b5 a5       	ldd	r27, Z+45	; 0x2d
    3120:	48 17       	cp	r20, r24
    3122:	59 07       	cpc	r21, r25
    3124:	6a 07       	cpc	r22, r26
    3126:	7b 07       	cpc	r23, r27
    3128:	11 f4       	brne	.+4      	; 0x312e <move_window+0x38>
    312a:	90 e0       	ldi	r25, 0x00	; 0
    312c:	1f c0       	rjmp	.+62     	; 0x316c <move_window+0x76>
    312e:	c5 01       	movw	r24, r10
    3130:	0e 94 18 18 	call	0x3030	; 0x3030 <sync_window>
    3134:	98 2f       	mov	r25, r24
    3136:	88 23       	and	r24, r24
    3138:	c9 f4       	brne	.+50     	; 0x316c <move_window+0x76>
    313a:	b5 01       	movw	r22, r10
    313c:	62 5d       	subi	r22, 0xD2	; 210
    313e:	7f 4f       	sbci	r23, 0xFF	; 255
    3140:	f5 01       	movw	r30, r10
    3142:	81 81       	ldd	r24, Z+1	; 0x01
    3144:	a7 01       	movw	r20, r14
    3146:	96 01       	movw	r18, r12
    3148:	01 e0       	ldi	r16, 0x01	; 1
    314a:	10 e0       	ldi	r17, 0x00	; 0
    314c:	99 83       	std	Y+1, r25	; 0x01
    314e:	0e 94 cf 37 	call	0x6f9e	; 0x6f9e <disk_read>
    3152:	99 81       	ldd	r25, Y+1	; 0x01
    3154:	88 23       	and	r24, r24
    3156:	29 f0       	breq	.+10     	; 0x3162 <move_window+0x6c>
    3158:	cc 24       	eor	r12, r12
    315a:	ca 94       	dec	r12
    315c:	dc 2c       	mov	r13, r12
    315e:	76 01       	movw	r14, r12
    3160:	91 e0       	ldi	r25, 0x01	; 1
    3162:	f5 01       	movw	r30, r10
    3164:	c2 a6       	std	Z+42, r12	; 0x2a
    3166:	d3 a6       	std	Z+43, r13	; 0x2b
    3168:	e4 a6       	std	Z+44, r14	; 0x2c
    316a:	f5 a6       	std	Z+45, r15	; 0x2d
    316c:	89 2f       	mov	r24, r25
    316e:	0f 90       	pop	r0
    3170:	cf 91       	pop	r28
    3172:	df 91       	pop	r29
    3174:	1f 91       	pop	r17
    3176:	0f 91       	pop	r16
    3178:	ff 90       	pop	r15
    317a:	ef 90       	pop	r14
    317c:	df 90       	pop	r13
    317e:	cf 90       	pop	r12
    3180:	bf 90       	pop	r11
    3182:	af 90       	pop	r10
    3184:	08 95       	ret

00003186 <check_fs>:
    3186:	cf 93       	push	r28
    3188:	df 93       	push	r29
    318a:	ec 01       	movw	r28, r24
    318c:	1c 82       	std	Y+4, r1	; 0x04
    318e:	8f ef       	ldi	r24, 0xFF	; 255
    3190:	9f ef       	ldi	r25, 0xFF	; 255
    3192:	af ef       	ldi	r26, 0xFF	; 255
    3194:	bf ef       	ldi	r27, 0xFF	; 255
    3196:	8a a7       	std	Y+42, r24	; 0x2a
    3198:	9b a7       	std	Y+43, r25	; 0x2b
    319a:	ac a7       	std	Y+44, r26	; 0x2c
    319c:	bd a7       	std	Y+45, r27	; 0x2d
    319e:	ce 01       	movw	r24, r28
    31a0:	0e 94 7b 18 	call	0x30f6	; 0x30f6 <move_window>
    31a4:	88 23       	and	r24, r24
    31a6:	11 f0       	breq	.+4      	; 0x31ac <check_fs+0x26>
    31a8:	23 e0       	ldi	r18, 0x03	; 3
    31aa:	29 c0       	rjmp	.+82     	; 0x31fe <check_fs+0x78>
    31ac:	c4 5d       	subi	r28, 0xD4	; 212
    31ae:	dd 4f       	sbci	r29, 0xFD	; 253
    31b0:	88 81       	ld	r24, Y
    31b2:	99 81       	ldd	r25, Y+1	; 0x01
    31b4:	cc 52       	subi	r28, 0x2C	; 44
    31b6:	d2 40       	sbci	r29, 0x02	; 2
    31b8:	85 55       	subi	r24, 0x55	; 85
    31ba:	9a 4a       	sbci	r25, 0xAA	; 170
    31bc:	11 f0       	breq	.+4      	; 0x31c2 <check_fs+0x3c>
    31be:	22 e0       	ldi	r18, 0x02	; 2
    31c0:	1e c0       	rjmp	.+60     	; 0x31fe <check_fs+0x78>
    31c2:	cc 59       	subi	r28, 0x9C	; 156
    31c4:	df 4f       	sbci	r29, 0xFF	; 255
    31c6:	88 81       	ld	r24, Y
    31c8:	99 81       	ldd	r25, Y+1	; 0x01
    31ca:	aa 81       	ldd	r26, Y+2	; 0x02
    31cc:	bb 81       	ldd	r27, Y+3	; 0x03
    31ce:	c4 56       	subi	r28, 0x64	; 100
    31d0:	d0 40       	sbci	r29, 0x00	; 0
    31d2:	b0 70       	andi	r27, 0x00	; 0
    31d4:	86 54       	subi	r24, 0x46	; 70
    31d6:	91 44       	sbci	r25, 0x41	; 65
    31d8:	a4 45       	sbci	r26, 0x54	; 84
    31da:	b0 40       	sbci	r27, 0x00	; 0
    31dc:	11 f4       	brne	.+4      	; 0x31e2 <check_fs+0x5c>
    31de:	20 e0       	ldi	r18, 0x00	; 0
    31e0:	0e c0       	rjmp	.+28     	; 0x31fe <check_fs+0x78>
    31e2:	20 e0       	ldi	r18, 0x00	; 0
    31e4:	c0 58       	subi	r28, 0x80	; 128
    31e6:	df 4f       	sbci	r29, 0xFF	; 255
    31e8:	88 81       	ld	r24, Y
    31ea:	99 81       	ldd	r25, Y+1	; 0x01
    31ec:	aa 81       	ldd	r26, Y+2	; 0x02
    31ee:	bb 81       	ldd	r27, Y+3	; 0x03
    31f0:	b0 70       	andi	r27, 0x00	; 0
    31f2:	86 54       	subi	r24, 0x46	; 70
    31f4:	91 44       	sbci	r25, 0x41	; 65
    31f6:	a4 45       	sbci	r26, 0x54	; 84
    31f8:	b0 40       	sbci	r27, 0x00	; 0
    31fa:	09 f0       	breq	.+2      	; 0x31fe <check_fs+0x78>
    31fc:	21 e0       	ldi	r18, 0x01	; 1
    31fe:	82 2f       	mov	r24, r18
    3200:	df 91       	pop	r29
    3202:	cf 91       	pop	r28
    3204:	08 95       	ret

00003206 <find_volume>:
    3206:	2f 92       	push	r2
    3208:	3f 92       	push	r3
    320a:	4f 92       	push	r4
    320c:	5f 92       	push	r5
    320e:	6f 92       	push	r6
    3210:	7f 92       	push	r7
    3212:	8f 92       	push	r8
    3214:	9f 92       	push	r9
    3216:	af 92       	push	r10
    3218:	bf 92       	push	r11
    321a:	cf 92       	push	r12
    321c:	df 92       	push	r13
    321e:	ef 92       	push	r14
    3220:	ff 92       	push	r15
    3222:	0f 93       	push	r16
    3224:	1f 93       	push	r17
    3226:	df 93       	push	r29
    3228:	cf 93       	push	r28
    322a:	cd b7       	in	r28, 0x3d	; 61
    322c:	de b7       	in	r29, 0x3e	; 62
    322e:	6a 97       	sbiw	r28, 0x1a	; 26
    3230:	0f b6       	in	r0, 0x3f	; 63
    3232:	f8 94       	cli
    3234:	de bf       	out	0x3e, r29	; 62
    3236:	0f be       	out	0x3f, r0	; 63
    3238:	cd bf       	out	0x3d, r28	; 61
    323a:	6c 01       	movw	r12, r24
    323c:	cb 01       	movw	r24, r22
    323e:	b4 2e       	mov	r11, r20
    3240:	d6 01       	movw	r26, r12
    3242:	1d 92       	st	X+, r1
    3244:	1c 92       	st	X, r1
    3246:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <get_ldnumber>
    324a:	7c 01       	movw	r14, r24
    324c:	97 ff       	sbrs	r25, 7
    324e:	02 c0       	rjmp	.+4      	; 0x3254 <find_volume+0x4e>
    3250:	8b e0       	ldi	r24, 0x0B	; 11
    3252:	64 c2       	rjmp	.+1224   	; 0x371c <find_volume+0x516>
    3254:	fc 01       	movw	r30, r24
    3256:	ee 0f       	add	r30, r30
    3258:	ff 1f       	adc	r31, r31
    325a:	eb 5c       	subi	r30, 0xCB	; 203
    325c:	fa 4f       	sbci	r31, 0xFA	; 250
    325e:	00 81       	ld	r16, Z
    3260:	11 81       	ldd	r17, Z+1	; 0x01
    3262:	01 15       	cp	r16, r1
    3264:	11 05       	cpc	r17, r1
    3266:	11 f4       	brne	.+4      	; 0x326c <find_volume+0x66>
    3268:	8c e0       	ldi	r24, 0x0C	; 12
    326a:	58 c2       	rjmp	.+1200   	; 0x371c <find_volume+0x516>
    326c:	f6 01       	movw	r30, r12
    326e:	11 83       	std	Z+1, r17	; 0x01
    3270:	00 83       	st	Z, r16
    3272:	d8 01       	movw	r26, r16
    3274:	8c 91       	ld	r24, X
    3276:	88 23       	and	r24, r24
    3278:	61 f0       	breq	.+24     	; 0x3292 <find_volume+0x8c>
    327a:	11 96       	adiw	r26, 0x01	; 1
    327c:	8c 91       	ld	r24, X
    327e:	0e 94 c8 37 	call	0x6f90	; 0x6f90 <disk_status>
    3282:	80 fd       	sbrc	r24, 0
    3284:	06 c0       	rjmp	.+12     	; 0x3292 <find_volume+0x8c>
    3286:	bb 20       	and	r11, r11
    3288:	09 f4       	brne	.+2      	; 0x328c <find_volume+0x86>
    328a:	45 c2       	rjmp	.+1162   	; 0x3716 <find_volume+0x510>
    328c:	82 fd       	sbrc	r24, 2
    328e:	41 c2       	rjmp	.+1154   	; 0x3712 <find_volume+0x50c>
    3290:	42 c2       	rjmp	.+1156   	; 0x3716 <find_volume+0x510>
    3292:	f8 01       	movw	r30, r16
    3294:	10 82       	st	Z, r1
    3296:	e1 82       	std	Z+1, r14	; 0x01
    3298:	8e 2d       	mov	r24, r14
    329a:	0e 94 02 37 	call	0x6e04	; 0x6e04 <disk_initialize>
    329e:	80 ff       	sbrs	r24, 0
    32a0:	02 c0       	rjmp	.+4      	; 0x32a6 <find_volume+0xa0>
    32a2:	83 e0       	ldi	r24, 0x03	; 3
    32a4:	3b c2       	rjmp	.+1142   	; 0x371c <find_volume+0x516>
    32a6:	bb 20       	and	r11, r11
    32a8:	11 f0       	breq	.+4      	; 0x32ae <find_volume+0xa8>
    32aa:	82 fd       	sbrc	r24, 2
    32ac:	32 c2       	rjmp	.+1124   	; 0x3712 <find_volume+0x50c>
    32ae:	c8 01       	movw	r24, r16
    32b0:	40 e0       	ldi	r20, 0x00	; 0
    32b2:	50 e0       	ldi	r21, 0x00	; 0
    32b4:	60 e0       	ldi	r22, 0x00	; 0
    32b6:	70 e0       	ldi	r23, 0x00	; 0
    32b8:	0e 94 c3 18 	call	0x3186	; 0x3186 <check_fs>
    32bc:	81 30       	cpi	r24, 0x01	; 1
    32be:	21 f0       	breq	.+8      	; 0x32c8 <find_volume+0xc2>
    32c0:	22 24       	eor	r2, r2
    32c2:	33 24       	eor	r3, r3
    32c4:	21 01       	movw	r4, r2
    32c6:	45 c0       	rjmp	.+138    	; 0x3352 <find_volume+0x14c>
    32c8:	7e 01       	movw	r14, r28
    32ca:	08 94       	sec
    32cc:	e1 1c       	adc	r14, r1
    32ce:	f1 1c       	adc	r15, r1
    32d0:	a7 01       	movw	r20, r14
    32d2:	2e eb       	ldi	r18, 0xBE	; 190
    32d4:	31 e0       	ldi	r19, 0x01	; 1
    32d6:	22 5d       	subi	r18, 0xD2	; 210
    32d8:	3f 4f       	sbci	r19, 0xFF	; 255
    32da:	f8 01       	movw	r30, r16
    32dc:	e2 0f       	add	r30, r18
    32de:	f3 1f       	adc	r31, r19
    32e0:	2e 52       	subi	r18, 0x2E	; 46
    32e2:	30 40       	sbci	r19, 0x00	; 0
    32e4:	84 81       	ldd	r24, Z+4	; 0x04
    32e6:	88 23       	and	r24, r24
    32e8:	29 f4       	brne	.+10     	; 0x32f4 <find_volume+0xee>
    32ea:	80 e0       	ldi	r24, 0x00	; 0
    32ec:	90 e0       	ldi	r25, 0x00	; 0
    32ee:	a0 e0       	ldi	r26, 0x00	; 0
    32f0:	b0 e0       	ldi	r27, 0x00	; 0
    32f2:	04 c0       	rjmp	.+8      	; 0x32fc <find_volume+0xf6>
    32f4:	80 85       	ldd	r24, Z+8	; 0x08
    32f6:	91 85       	ldd	r25, Z+9	; 0x09
    32f8:	a2 85       	ldd	r26, Z+10	; 0x0a
    32fa:	b3 85       	ldd	r27, Z+11	; 0x0b
    32fc:	fa 01       	movw	r30, r20
    32fe:	81 93       	st	Z+, r24
    3300:	91 93       	st	Z+, r25
    3302:	a1 93       	st	Z+, r26
    3304:	b1 93       	st	Z+, r27
    3306:	af 01       	movw	r20, r30
    3308:	20 5f       	subi	r18, 0xF0	; 240
    330a:	3f 4f       	sbci	r19, 0xFF	; 255
    330c:	f1 e0       	ldi	r31, 0x01	; 1
    330e:	2e 3f       	cpi	r18, 0xFE	; 254
    3310:	3f 07       	cpc	r19, r31
    3312:	09 f7       	brne	.-62     	; 0x32d6 <find_volume+0xd0>
    3314:	f1 e1       	ldi	r31, 0x11	; 17
    3316:	cf 2e       	mov	r12, r31
    3318:	d1 2c       	mov	r13, r1
    331a:	cc 0e       	add	r12, r28
    331c:	dd 1e       	adc	r13, r29
    331e:	d7 01       	movw	r26, r14
    3320:	2d 90       	ld	r2, X+
    3322:	3d 90       	ld	r3, X+
    3324:	4d 90       	ld	r4, X+
    3326:	5c 90       	ld	r5, X
    3328:	21 14       	cp	r2, r1
    332a:	31 04       	cpc	r3, r1
    332c:	41 04       	cpc	r4, r1
    332e:	51 04       	cpc	r5, r1
    3330:	11 f4       	brne	.+4      	; 0x3336 <find_volume+0x130>
    3332:	82 e0       	ldi	r24, 0x02	; 2
    3334:	07 c0       	rjmp	.+14     	; 0x3344 <find_volume+0x13e>
    3336:	c8 01       	movw	r24, r16
    3338:	b2 01       	movw	r22, r4
    333a:	a1 01       	movw	r20, r2
    333c:	0e 94 c3 18 	call	0x3186	; 0x3186 <check_fs>
    3340:	88 23       	and	r24, r24
    3342:	71 f0       	breq	.+28     	; 0x3360 <find_volume+0x15a>
    3344:	e4 e0       	ldi	r30, 0x04	; 4
    3346:	f0 e0       	ldi	r31, 0x00	; 0
    3348:	ee 0e       	add	r14, r30
    334a:	ff 1e       	adc	r15, r31
    334c:	ec 14       	cp	r14, r12
    334e:	fd 04       	cpc	r15, r13
    3350:	31 f7       	brne	.-52     	; 0x331e <find_volume+0x118>
    3352:	83 30       	cpi	r24, 0x03	; 3
    3354:	11 f4       	brne	.+4      	; 0x335a <find_volume+0x154>
    3356:	81 e0       	ldi	r24, 0x01	; 1
    3358:	e1 c1       	rjmp	.+962    	; 0x371c <find_volume+0x516>
    335a:	88 23       	and	r24, r24
    335c:	09 f0       	breq	.+2      	; 0x3360 <find_volume+0x15a>
    335e:	dd c1       	rjmp	.+954    	; 0x371a <find_volume+0x514>
    3360:	d8 01       	movw	r26, r16
    3362:	d9 96       	adiw	r26, 0x39	; 57
    3364:	8d 91       	ld	r24, X+
    3366:	9c 91       	ld	r25, X
    3368:	da 97       	sbiw	r26, 0x3a	; 58
    336a:	80 50       	subi	r24, 0x00	; 0
    336c:	92 40       	sbci	r25, 0x02	; 2
    336e:	09 f0       	breq	.+2      	; 0x3372 <find_volume+0x16c>
    3370:	d4 c1       	rjmp	.+936    	; 0x371a <find_volume+0x514>
    3372:	0c 5b       	subi	r16, 0xBC	; 188
    3374:	1f 4f       	sbci	r17, 0xFF	; 255
    3376:	f8 01       	movw	r30, r16
    3378:	80 81       	ld	r24, Z
    337a:	91 81       	ldd	r25, Z+1	; 0x01
    337c:	04 54       	subi	r16, 0x44	; 68
    337e:	10 40       	sbci	r17, 0x00	; 0
    3380:	4c 01       	movw	r8, r24
    3382:	aa 24       	eor	r10, r10
    3384:	bb 24       	eor	r11, r11
    3386:	81 14       	cp	r8, r1
    3388:	91 04       	cpc	r9, r1
    338a:	a1 04       	cpc	r10, r1
    338c:	b1 04       	cpc	r11, r1
    338e:	49 f4       	brne	.+18     	; 0x33a2 <find_volume+0x19c>
    3390:	0e 5a       	subi	r16, 0xAE	; 174
    3392:	1f 4f       	sbci	r17, 0xFF	; 255
    3394:	d8 01       	movw	r26, r16
    3396:	8d 90       	ld	r8, X+
    3398:	9d 90       	ld	r9, X+
    339a:	ad 90       	ld	r10, X+
    339c:	bc 90       	ld	r11, X
    339e:	02 55       	subi	r16, 0x52	; 82
    33a0:	10 40       	sbci	r17, 0x00	; 0
    33a2:	f8 01       	movw	r30, r16
    33a4:	86 8a       	std	Z+22, r8	; 0x16
    33a6:	97 8a       	std	Z+23, r9	; 0x17
    33a8:	a0 8e       	std	Z+24, r10	; 0x18
    33aa:	b1 8e       	std	Z+25, r11	; 0x19
    33ac:	46 ad       	ldd	r20, Z+62	; 0x3e
    33ae:	43 83       	std	Z+3, r20	; 0x03
    33b0:	84 2f       	mov	r24, r20
    33b2:	81 50       	subi	r24, 0x01	; 1
    33b4:	82 30       	cpi	r24, 0x02	; 2
    33b6:	08 f0       	brcs	.+2      	; 0x33ba <find_volume+0x1b4>
    33b8:	b0 c1       	rjmp	.+864    	; 0x371a <find_volume+0x514>
    33ba:	23 ad       	ldd	r18, Z+59	; 0x3b
    33bc:	22 83       	std	Z+2, r18	; 0x02
    33be:	22 23       	and	r18, r18
    33c0:	09 f4       	brne	.+2      	; 0x33c4 <find_volume+0x1be>
    33c2:	ab c1       	rjmp	.+854    	; 0x371a <find_volume+0x514>
    33c4:	30 e0       	ldi	r19, 0x00	; 0
    33c6:	c9 01       	movw	r24, r18
    33c8:	01 97       	sbiw	r24, 0x01	; 1
    33ca:	82 23       	and	r24, r18
    33cc:	93 23       	and	r25, r19
    33ce:	89 2b       	or	r24, r25
    33d0:	09 f0       	breq	.+2      	; 0x33d4 <find_volume+0x1ce>
    33d2:	a3 c1       	rjmp	.+838    	; 0x371a <find_volume+0x514>
    33d4:	01 5c       	subi	r16, 0xC1	; 193
    33d6:	1f 4f       	sbci	r17, 0xFF	; 255
    33d8:	d8 01       	movw	r26, r16
    33da:	6d 90       	ld	r6, X+
    33dc:	7c 90       	ld	r7, X
    33de:	0f 53       	subi	r16, 0x3F	; 63
    33e0:	10 40       	sbci	r17, 0x00	; 0
    33e2:	f8 01       	movw	r30, r16
    33e4:	71 86       	std	Z+9, r7	; 0x09
    33e6:	60 86       	std	Z+8, r6	; 0x08
    33e8:	c3 01       	movw	r24, r6
    33ea:	8f 70       	andi	r24, 0x0F	; 15
    33ec:	90 70       	andi	r25, 0x00	; 0
    33ee:	89 2b       	or	r24, r25
    33f0:	09 f0       	breq	.+2      	; 0x33f4 <find_volume+0x1ee>
    33f2:	93 c1       	rjmp	.+806    	; 0x371a <find_volume+0x514>
    33f4:	0f 5b       	subi	r16, 0xBF	; 191
    33f6:	1f 4f       	sbci	r17, 0xFF	; 255
    33f8:	d8 01       	movw	r26, r16
    33fa:	8d 91       	ld	r24, X+
    33fc:	9c 91       	ld	r25, X
    33fe:	01 54       	subi	r16, 0x41	; 65
    3400:	10 40       	sbci	r17, 0x00	; 0
    3402:	6c 01       	movw	r12, r24
    3404:	ee 24       	eor	r14, r14
    3406:	ff 24       	eor	r15, r15
    3408:	c1 14       	cp	r12, r1
    340a:	d1 04       	cpc	r13, r1
    340c:	e1 04       	cpc	r14, r1
    340e:	f1 04       	cpc	r15, r1
    3410:	49 f4       	brne	.+18     	; 0x3424 <find_volume+0x21e>
    3412:	02 5b       	subi	r16, 0xB2	; 178
    3414:	1f 4f       	sbci	r17, 0xFF	; 255
    3416:	f8 01       	movw	r30, r16
    3418:	c0 80       	ld	r12, Z
    341a:	d1 80       	ldd	r13, Z+1	; 0x01
    341c:	e2 80       	ldd	r14, Z+2	; 0x02
    341e:	f3 80       	ldd	r15, Z+3	; 0x03
    3420:	0e 54       	subi	r16, 0x4E	; 78
    3422:	10 40       	sbci	r17, 0x00	; 0
    3424:	d8 01       	movw	r26, r16
    3426:	dc 96       	adiw	r26, 0x3c	; 60
    3428:	0d 90       	ld	r0, X+
    342a:	bc 91       	ld	r27, X
    342c:	a0 2d       	mov	r26, r0
    342e:	be 8b       	std	Y+22, r27	; 0x16
    3430:	ad 8b       	std	Y+21, r26	; 0x15
    3432:	ab 2b       	or	r26, r27
    3434:	09 f4       	brne	.+2      	; 0x3438 <find_volume+0x232>
    3436:	71 c1       	rjmp	.+738    	; 0x371a <find_volume+0x514>
    3438:	24 2f       	mov	r18, r20
    343a:	30 e0       	ldi	r19, 0x00	; 0
    343c:	40 e0       	ldi	r20, 0x00	; 0
    343e:	50 e0       	ldi	r21, 0x00	; 0
    3440:	c5 01       	movw	r24, r10
    3442:	b4 01       	movw	r22, r8
    3444:	0e 94 b2 40 	call	0x8164	; 0x8164 <__mulsi3>
    3448:	69 8b       	std	Y+17, r22	; 0x11
    344a:	7a 8b       	std	Y+18, r23	; 0x12
    344c:	8b 8b       	std	Y+19, r24	; 0x13
    344e:	9c 8b       	std	Y+20, r25	; 0x14
    3450:	4d 89       	ldd	r20, Y+21	; 0x15
    3452:	5e 89       	ldd	r21, Y+22	; 0x16
    3454:	9a 01       	movw	r18, r20
    3456:	40 e0       	ldi	r20, 0x00	; 0
    3458:	50 e0       	ldi	r21, 0x00	; 0
    345a:	2f 8b       	std	Y+23, r18	; 0x17
    345c:	38 8f       	std	Y+24, r19	; 0x18
    345e:	49 8f       	std	Y+25, r20	; 0x19
    3460:	5a 8f       	std	Y+26, r21	; 0x1a
    3462:	e4 e0       	ldi	r30, 0x04	; 4
    3464:	76 94       	lsr	r7
    3466:	67 94       	ror	r6
    3468:	ea 95       	dec	r30
    346a:	e1 f7       	brne	.-8      	; 0x3464 <find_volume+0x25e>
    346c:	43 01       	movw	r8, r6
    346e:	aa 24       	eor	r10, r10
    3470:	bb 24       	eor	r11, r11
    3472:	82 0e       	add	r8, r18
    3474:	93 1e       	adc	r9, r19
    3476:	a4 1e       	adc	r10, r20
    3478:	b5 1e       	adc	r11, r21
    347a:	86 0e       	add	r8, r22
    347c:	97 1e       	adc	r9, r23
    347e:	a8 1e       	adc	r10, r24
    3480:	b9 1e       	adc	r11, r25
    3482:	c8 14       	cp	r12, r8
    3484:	d9 04       	cpc	r13, r9
    3486:	ea 04       	cpc	r14, r10
    3488:	fb 04       	cpc	r15, r11
    348a:	08 f4       	brcc	.+2      	; 0x348e <find_volume+0x288>
    348c:	46 c1       	rjmp	.+652    	; 0x371a <find_volume+0x514>
    348e:	c8 18       	sub	r12, r8
    3490:	d9 08       	sbc	r13, r9
    3492:	ea 08       	sbc	r14, r10
    3494:	fb 08       	sbc	r15, r11
    3496:	d8 01       	movw	r26, r16
    3498:	12 96       	adiw	r26, 0x02	; 2
    349a:	2c 91       	ld	r18, X
    349c:	30 e0       	ldi	r19, 0x00	; 0
    349e:	40 e0       	ldi	r20, 0x00	; 0
    34a0:	50 e0       	ldi	r21, 0x00	; 0
    34a2:	c7 01       	movw	r24, r14
    34a4:	b6 01       	movw	r22, r12
    34a6:	0e 94 04 41 	call	0x8208	; 0x8208 <__udivmodsi4>
    34aa:	c9 01       	movw	r24, r18
    34ac:	da 01       	movw	r26, r20
    34ae:	00 97       	sbiw	r24, 0x00	; 0
    34b0:	a1 05       	cpc	r26, r1
    34b2:	b1 05       	cpc	r27, r1
    34b4:	09 f4       	brne	.+2      	; 0x34b8 <find_volume+0x2b2>
    34b6:	31 c1       	rjmp	.+610    	; 0x371a <find_volume+0x514>
    34b8:	86 3f       	cpi	r24, 0xF6	; 246
    34ba:	ef e0       	ldi	r30, 0x0F	; 15
    34bc:	9e 07       	cpc	r25, r30
    34be:	e0 e0       	ldi	r30, 0x00	; 0
    34c0:	ae 07       	cpc	r26, r30
    34c2:	e0 e0       	ldi	r30, 0x00	; 0
    34c4:	be 07       	cpc	r27, r30
    34c6:	18 f4       	brcc	.+6      	; 0x34ce <find_volume+0x2c8>
    34c8:	77 24       	eor	r7, r7
    34ca:	73 94       	inc	r7
    34cc:	0d c0       	rjmp	.+26     	; 0x34e8 <find_volume+0x2e2>
    34ce:	86 3f       	cpi	r24, 0xF6	; 246
    34d0:	ff ef       	ldi	r31, 0xFF	; 255
    34d2:	9f 07       	cpc	r25, r31
    34d4:	f0 e0       	ldi	r31, 0x00	; 0
    34d6:	af 07       	cpc	r26, r31
    34d8:	f0 e0       	ldi	r31, 0x00	; 0
    34da:	bf 07       	cpc	r27, r31
    34dc:	18 f0       	brcs	.+6      	; 0x34e4 <find_volume+0x2de>
    34de:	33 e0       	ldi	r19, 0x03	; 3
    34e0:	73 2e       	mov	r7, r19
    34e2:	02 c0       	rjmp	.+4      	; 0x34e8 <find_volume+0x2e2>
    34e4:	22 e0       	ldi	r18, 0x02	; 2
    34e6:	72 2e       	mov	r7, r18
    34e8:	f2 e0       	ldi	r31, 0x02	; 2
    34ea:	cf 2e       	mov	r12, r31
    34ec:	d1 2c       	mov	r13, r1
    34ee:	e1 2c       	mov	r14, r1
    34f0:	f1 2c       	mov	r15, r1
    34f2:	c8 0e       	add	r12, r24
    34f4:	d9 1e       	adc	r13, r25
    34f6:	ea 1e       	adc	r14, r26
    34f8:	fb 1e       	adc	r15, r27
    34fa:	d8 01       	movw	r26, r16
    34fc:	52 96       	adiw	r26, 0x12	; 18
    34fe:	cd 92       	st	X+, r12
    3500:	dd 92       	st	X+, r13
    3502:	ed 92       	st	X+, r14
    3504:	fc 92       	st	X, r15
    3506:	55 97       	sbiw	r26, 0x15	; 21
    3508:	f8 01       	movw	r30, r16
    350a:	22 8e       	std	Z+26, r2	; 0x1a
    350c:	33 8e       	std	Z+27, r3	; 0x1b
    350e:	44 8e       	std	Z+28, r4	; 0x1c
    3510:	55 8e       	std	Z+29, r5	; 0x1d
    3512:	8f 89       	ldd	r24, Y+23	; 0x17
    3514:	98 8d       	ldd	r25, Y+24	; 0x18
    3516:	a9 8d       	ldd	r26, Y+25	; 0x19
    3518:	ba 8d       	ldd	r27, Y+26	; 0x1a
    351a:	82 0d       	add	r24, r2
    351c:	93 1d       	adc	r25, r3
    351e:	a4 1d       	adc	r26, r4
    3520:	b5 1d       	adc	r27, r5
    3522:	86 8f       	std	Z+30, r24	; 0x1e
    3524:	97 8f       	std	Z+31, r25	; 0x1f
    3526:	a0 a3       	std	Z+32, r26	; 0x20
    3528:	b1 a3       	std	Z+33, r27	; 0x21
    352a:	82 0c       	add	r8, r2
    352c:	93 1c       	adc	r9, r3
    352e:	a4 1c       	adc	r10, r4
    3530:	b5 1c       	adc	r11, r5
    3532:	86 a2       	std	Z+38, r8	; 0x26
    3534:	97 a2       	std	Z+39, r9	; 0x27
    3536:	a0 a6       	std	Z+40, r10	; 0x28
    3538:	b1 a6       	std	Z+41, r11	; 0x29
    353a:	20 85       	ldd	r18, Z+8	; 0x08
    353c:	31 85       	ldd	r19, Z+9	; 0x09
    353e:	f3 e0       	ldi	r31, 0x03	; 3
    3540:	7f 16       	cp	r7, r31
    3542:	d9 f4       	brne	.+54     	; 0x357a <find_volume+0x374>
    3544:	23 2b       	or	r18, r19
    3546:	09 f0       	breq	.+2      	; 0x354a <find_volume+0x344>
    3548:	e8 c0       	rjmp	.+464    	; 0x371a <find_volume+0x514>
    354a:	06 5a       	subi	r16, 0xA6	; 166
    354c:	1f 4f       	sbci	r17, 0xFF	; 255
    354e:	f8 01       	movw	r30, r16
    3550:	80 81       	ld	r24, Z
    3552:	91 81       	ldd	r25, Z+1	; 0x01
    3554:	a2 81       	ldd	r26, Z+2	; 0x02
    3556:	b3 81       	ldd	r27, Z+3	; 0x03
    3558:	0a 55       	subi	r16, 0x5A	; 90
    355a:	10 40       	sbci	r17, 0x00	; 0
    355c:	f8 01       	movw	r30, r16
    355e:	82 a3       	std	Z+34, r24	; 0x22
    3560:	93 a3       	std	Z+35, r25	; 0x23
    3562:	a4 a3       	std	Z+36, r26	; 0x24
    3564:	b5 a3       	std	Z+37, r27	; 0x25
    3566:	a7 01       	movw	r20, r14
    3568:	96 01       	movw	r18, r12
    356a:	e2 e0       	ldi	r30, 0x02	; 2
    356c:	22 0f       	add	r18, r18
    356e:	33 1f       	adc	r19, r19
    3570:	44 1f       	adc	r20, r20
    3572:	55 1f       	adc	r21, r21
    3574:	ea 95       	dec	r30
    3576:	d1 f7       	brne	.-12     	; 0x356c <find_volume+0x366>
    3578:	32 c0       	rjmp	.+100    	; 0x35de <find_volume+0x3d8>
    357a:	23 2b       	or	r18, r19
    357c:	09 f4       	brne	.+2      	; 0x3580 <find_volume+0x37a>
    357e:	cd c0       	rjmp	.+410    	; 0x371a <find_volume+0x514>
    3580:	29 89       	ldd	r18, Y+17	; 0x11
    3582:	3a 89       	ldd	r19, Y+18	; 0x12
    3584:	4b 89       	ldd	r20, Y+19	; 0x13
    3586:	5c 89       	ldd	r21, Y+20	; 0x14
    3588:	82 0f       	add	r24, r18
    358a:	93 1f       	adc	r25, r19
    358c:	a4 1f       	adc	r26, r20
    358e:	b5 1f       	adc	r27, r21
    3590:	f8 01       	movw	r30, r16
    3592:	82 a3       	std	Z+34, r24	; 0x22
    3594:	93 a3       	std	Z+35, r25	; 0x23
    3596:	a4 a3       	std	Z+36, r26	; 0x24
    3598:	b5 a3       	std	Z+37, r27	; 0x25
    359a:	d7 01       	movw	r26, r14
    359c:	c6 01       	movw	r24, r12
    359e:	88 0f       	add	r24, r24
    35a0:	99 1f       	adc	r25, r25
    35a2:	aa 1f       	adc	r26, r26
    35a4:	bb 1f       	adc	r27, r27
    35a6:	f2 e0       	ldi	r31, 0x02	; 2
    35a8:	7f 16       	cp	r7, r31
    35aa:	19 f4       	brne	.+6      	; 0x35b2 <find_volume+0x3ac>
    35ac:	9c 01       	movw	r18, r24
    35ae:	ad 01       	movw	r20, r26
    35b0:	16 c0       	rjmp	.+44     	; 0x35de <find_volume+0x3d8>
    35b2:	9c 01       	movw	r18, r24
    35b4:	ad 01       	movw	r20, r26
    35b6:	2c 0d       	add	r18, r12
    35b8:	3d 1d       	adc	r19, r13
    35ba:	4e 1d       	adc	r20, r14
    35bc:	5f 1d       	adc	r21, r15
    35be:	56 95       	lsr	r21
    35c0:	47 95       	ror	r20
    35c2:	37 95       	ror	r19
    35c4:	27 95       	ror	r18
    35c6:	81 e0       	ldi	r24, 0x01	; 1
    35c8:	90 e0       	ldi	r25, 0x00	; 0
    35ca:	a0 e0       	ldi	r26, 0x00	; 0
    35cc:	b0 e0       	ldi	r27, 0x00	; 0
    35ce:	c8 22       	and	r12, r24
    35d0:	d9 22       	and	r13, r25
    35d2:	ea 22       	and	r14, r26
    35d4:	fb 22       	and	r15, r27
    35d6:	2c 0d       	add	r18, r12
    35d8:	3d 1d       	adc	r19, r13
    35da:	4e 1d       	adc	r20, r14
    35dc:	5f 1d       	adc	r21, r15
    35de:	21 50       	subi	r18, 0x01	; 1
    35e0:	3e 4f       	sbci	r19, 0xFE	; 254
    35e2:	4f 4f       	sbci	r20, 0xFF	; 255
    35e4:	5f 4f       	sbci	r21, 0xFF	; 255
    35e6:	99 e0       	ldi	r25, 0x09	; 9
    35e8:	56 95       	lsr	r21
    35ea:	47 95       	ror	r20
    35ec:	37 95       	ror	r19
    35ee:	27 95       	ror	r18
    35f0:	9a 95       	dec	r25
    35f2:	d1 f7       	brne	.-12     	; 0x35e8 <find_volume+0x3e2>
    35f4:	f8 01       	movw	r30, r16
    35f6:	86 89       	ldd	r24, Z+22	; 0x16
    35f8:	97 89       	ldd	r25, Z+23	; 0x17
    35fa:	a0 8d       	ldd	r26, Z+24	; 0x18
    35fc:	b1 8d       	ldd	r27, Z+25	; 0x19
    35fe:	82 17       	cp	r24, r18
    3600:	93 07       	cpc	r25, r19
    3602:	a4 07       	cpc	r26, r20
    3604:	b5 07       	cpc	r27, r21
    3606:	08 f4       	brcc	.+2      	; 0x360a <find_volume+0x404>
    3608:	88 c0       	rjmp	.+272    	; 0x371a <find_volume+0x514>
    360a:	8f ef       	ldi	r24, 0xFF	; 255
    360c:	9f ef       	ldi	r25, 0xFF	; 255
    360e:	af ef       	ldi	r26, 0xFF	; 255
    3610:	bf ef       	ldi	r27, 0xFF	; 255
    3612:	86 87       	std	Z+14, r24	; 0x0e
    3614:	97 87       	std	Z+15, r25	; 0x0f
    3616:	a0 8b       	std	Z+16, r26	; 0x10
    3618:	b1 8b       	std	Z+17, r27	; 0x11
    361a:	82 87       	std	Z+10, r24	; 0x0a
    361c:	93 87       	std	Z+11, r25	; 0x0b
    361e:	a4 87       	std	Z+12, r26	; 0x0c
    3620:	b5 87       	std	Z+13, r27	; 0x0d
    3622:	80 e8       	ldi	r24, 0x80	; 128
    3624:	85 83       	std	Z+5, r24	; 0x05
    3626:	f3 e0       	ldi	r31, 0x03	; 3
    3628:	7f 16       	cp	r7, r31
    362a:	09 f0       	breq	.+2      	; 0x362e <find_volume+0x428>
    362c:	57 c0       	rjmp	.+174    	; 0x36dc <find_volume+0x4d6>
    362e:	02 5a       	subi	r16, 0xA2	; 162
    3630:	1f 4f       	sbci	r17, 0xFF	; 255
    3632:	d8 01       	movw	r26, r16
    3634:	8d 91       	ld	r24, X+
    3636:	9c 91       	ld	r25, X
    3638:	0e 55       	subi	r16, 0x5E	; 94
    363a:	10 40       	sbci	r17, 0x00	; 0
    363c:	01 97       	sbiw	r24, 0x01	; 1
    363e:	09 f0       	breq	.+2      	; 0x3642 <find_volume+0x43c>
    3640:	4d c0       	rjmp	.+154    	; 0x36dc <find_volume+0x4d6>
    3642:	08 94       	sec
    3644:	21 1c       	adc	r2, r1
    3646:	31 1c       	adc	r3, r1
    3648:	41 1c       	adc	r4, r1
    364a:	51 1c       	adc	r5, r1
    364c:	c8 01       	movw	r24, r16
    364e:	b2 01       	movw	r22, r4
    3650:	a1 01       	movw	r20, r2
    3652:	0e 94 7b 18 	call	0x30f6	; 0x30f6 <move_window>
    3656:	88 23       	and	r24, r24
    3658:	09 f0       	breq	.+2      	; 0x365c <find_volume+0x456>
    365a:	40 c0       	rjmp	.+128    	; 0x36dc <find_volume+0x4d6>
    365c:	f8 01       	movw	r30, r16
    365e:	15 82       	std	Z+5, r1	; 0x05
    3660:	04 5d       	subi	r16, 0xD4	; 212
    3662:	1d 4f       	sbci	r17, 0xFD	; 253
    3664:	d8 01       	movw	r26, r16
    3666:	8d 91       	ld	r24, X+
    3668:	9c 91       	ld	r25, X
    366a:	0c 52       	subi	r16, 0x2C	; 44
    366c:	12 40       	sbci	r17, 0x02	; 2
    366e:	85 55       	subi	r24, 0x55	; 85
    3670:	9a 4a       	sbci	r25, 0xAA	; 170
    3672:	a1 f5       	brne	.+104    	; 0x36dc <find_volume+0x4d6>
    3674:	f8 01       	movw	r30, r16
    3676:	86 a5       	ldd	r24, Z+46	; 0x2e
    3678:	97 a5       	ldd	r25, Z+47	; 0x2f
    367a:	a0 a9       	ldd	r26, Z+48	; 0x30
    367c:	b1 a9       	ldd	r27, Z+49	; 0x31
    367e:	82 55       	subi	r24, 0x52	; 82
    3680:	92 45       	sbci	r25, 0x52	; 82
    3682:	a1 46       	sbci	r26, 0x61	; 97
    3684:	b1 44       	sbci	r27, 0x41	; 65
    3686:	51 f5       	brne	.+84     	; 0x36dc <find_volume+0x4d6>
    3688:	0e 5e       	subi	r16, 0xEE	; 238
    368a:	1d 4f       	sbci	r17, 0xFD	; 253
    368c:	f8 01       	movw	r30, r16
    368e:	80 81       	ld	r24, Z
    3690:	91 81       	ldd	r25, Z+1	; 0x01
    3692:	a2 81       	ldd	r26, Z+2	; 0x02
    3694:	b3 81       	ldd	r27, Z+3	; 0x03
    3696:	02 51       	subi	r16, 0x12	; 18
    3698:	12 40       	sbci	r17, 0x02	; 2
    369a:	82 57       	subi	r24, 0x72	; 114
    369c:	92 47       	sbci	r25, 0x72	; 114
    369e:	a1 44       	sbci	r26, 0x41	; 65
    36a0:	b1 46       	sbci	r27, 0x61	; 97
    36a2:	e1 f4       	brne	.+56     	; 0x36dc <find_volume+0x4d6>
    36a4:	0a 5e       	subi	r16, 0xEA	; 234
    36a6:	1d 4f       	sbci	r17, 0xFD	; 253
    36a8:	f8 01       	movw	r30, r16
    36aa:	80 81       	ld	r24, Z
    36ac:	91 81       	ldd	r25, Z+1	; 0x01
    36ae:	a2 81       	ldd	r26, Z+2	; 0x02
    36b0:	b3 81       	ldd	r27, Z+3	; 0x03
    36b2:	06 51       	subi	r16, 0x16	; 22
    36b4:	12 40       	sbci	r17, 0x02	; 2
    36b6:	f8 01       	movw	r30, r16
    36b8:	86 87       	std	Z+14, r24	; 0x0e
    36ba:	97 87       	std	Z+15, r25	; 0x0f
    36bc:	a0 8b       	std	Z+16, r26	; 0x10
    36be:	b1 8b       	std	Z+17, r27	; 0x11
    36c0:	06 5e       	subi	r16, 0xE6	; 230
    36c2:	1d 4f       	sbci	r17, 0xFD	; 253
    36c4:	f8 01       	movw	r30, r16
    36c6:	80 81       	ld	r24, Z
    36c8:	91 81       	ldd	r25, Z+1	; 0x01
    36ca:	a2 81       	ldd	r26, Z+2	; 0x02
    36cc:	b3 81       	ldd	r27, Z+3	; 0x03
    36ce:	0a 51       	subi	r16, 0x1A	; 26
    36d0:	12 40       	sbci	r17, 0x02	; 2
    36d2:	f8 01       	movw	r30, r16
    36d4:	82 87       	std	Z+10, r24	; 0x0a
    36d6:	93 87       	std	Z+11, r25	; 0x0b
    36d8:	a4 87       	std	Z+12, r26	; 0x0c
    36da:	b5 87       	std	Z+13, r27	; 0x0d
    36dc:	d8 01       	movw	r26, r16
    36de:	7c 92       	st	X, r7
    36e0:	80 91 37 05 	lds	r24, 0x0537
    36e4:	90 91 38 05 	lds	r25, 0x0538
    36e8:	01 96       	adiw	r24, 0x01	; 1
    36ea:	90 93 38 05 	sts	0x0538, r25
    36ee:	80 93 37 05 	sts	0x0537, r24
    36f2:	17 96       	adiw	r26, 0x07	; 7
    36f4:	9c 93       	st	X, r25
    36f6:	8e 93       	st	-X, r24
    36f8:	16 97       	sbiw	r26, 0x06	; 6
    36fa:	80 91 39 05 	lds	r24, 0x0539
    36fe:	90 91 3a 05 	lds	r25, 0x053A
    3702:	80 17       	cp	r24, r16
    3704:	91 07       	cpc	r25, r17
    3706:	39 f4       	brne	.+14     	; 0x3716 <find_volume+0x510>
    3708:	10 92 3a 05 	sts	0x053A, r1
    370c:	10 92 39 05 	sts	0x0539, r1
    3710:	02 c0       	rjmp	.+4      	; 0x3716 <find_volume+0x510>
    3712:	8a e0       	ldi	r24, 0x0A	; 10
    3714:	03 c0       	rjmp	.+6      	; 0x371c <find_volume+0x516>
    3716:	80 e0       	ldi	r24, 0x00	; 0
    3718:	01 c0       	rjmp	.+2      	; 0x371c <find_volume+0x516>
    371a:	8d e0       	ldi	r24, 0x0D	; 13
    371c:	6a 96       	adiw	r28, 0x1a	; 26
    371e:	0f b6       	in	r0, 0x3f	; 63
    3720:	f8 94       	cli
    3722:	de bf       	out	0x3e, r29	; 62
    3724:	0f be       	out	0x3f, r0	; 63
    3726:	cd bf       	out	0x3d, r28	; 61
    3728:	cf 91       	pop	r28
    372a:	df 91       	pop	r29
    372c:	1f 91       	pop	r17
    372e:	0f 91       	pop	r16
    3730:	ff 90       	pop	r15
    3732:	ef 90       	pop	r14
    3734:	df 90       	pop	r13
    3736:	cf 90       	pop	r12
    3738:	bf 90       	pop	r11
    373a:	af 90       	pop	r10
    373c:	9f 90       	pop	r9
    373e:	8f 90       	pop	r8
    3740:	7f 90       	pop	r7
    3742:	6f 90       	pop	r6
    3744:	5f 90       	pop	r5
    3746:	4f 90       	pop	r4
    3748:	3f 90       	pop	r3
    374a:	2f 90       	pop	r2
    374c:	08 95       	ret

0000374e <f_mount>:
    374e:	1f 93       	push	r17
    3750:	df 93       	push	r29
    3752:	cf 93       	push	r28
    3754:	00 d0       	rcall	.+0      	; 0x3756 <f_mount+0x8>
    3756:	00 d0       	rcall	.+0      	; 0x3758 <f_mount+0xa>
    3758:	00 d0       	rcall	.+0      	; 0x375a <f_mount+0xc>
    375a:	cd b7       	in	r28, 0x3d	; 61
    375c:	de b7       	in	r29, 0x3e	; 62
    375e:	9c 83       	std	Y+4, r25	; 0x04
    3760:	8b 83       	std	Y+3, r24	; 0x03
    3762:	7e 83       	std	Y+6, r23	; 0x06
    3764:	6d 83       	std	Y+5, r22	; 0x05
    3766:	14 2f       	mov	r17, r20
    3768:	7a 83       	std	Y+2, r23	; 0x02
    376a:	69 83       	std	Y+1, r22	; 0x01
    376c:	ce 01       	movw	r24, r28
    376e:	01 96       	adiw	r24, 0x01	; 1
    3770:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <get_ldnumber>
    3774:	dc 01       	movw	r26, r24
    3776:	97 ff       	sbrs	r25, 7
    3778:	02 c0       	rjmp	.+4      	; 0x377e <f_mount+0x30>
    377a:	8b e0       	ldi	r24, 0x0B	; 11
    377c:	2f c0       	rjmp	.+94     	; 0x37dc <f_mount+0x8e>
    377e:	fc 01       	movw	r30, r24
    3780:	ee 0f       	add	r30, r30
    3782:	ff 1f       	adc	r31, r31
    3784:	eb 5c       	subi	r30, 0xCB	; 203
    3786:	fa 4f       	sbci	r31, 0xFA	; 250
    3788:	01 90       	ld	r0, Z+
    378a:	f0 81       	ld	r31, Z
    378c:	e0 2d       	mov	r30, r0
    378e:	30 97       	sbiw	r30, 0x00	; 0
    3790:	61 f0       	breq	.+24     	; 0x37aa <f_mount+0x5c>
    3792:	80 91 39 05 	lds	r24, 0x0539
    3796:	90 91 3a 05 	lds	r25, 0x053A
    379a:	8e 17       	cp	r24, r30
    379c:	9f 07       	cpc	r25, r31
    379e:	21 f4       	brne	.+8      	; 0x37a8 <f_mount+0x5a>
    37a0:	10 92 3a 05 	sts	0x053A, r1
    37a4:	10 92 39 05 	sts	0x0539, r1
    37a8:	10 82       	st	Z, r1
    37aa:	eb 81       	ldd	r30, Y+3	; 0x03
    37ac:	fc 81       	ldd	r31, Y+4	; 0x04
    37ae:	30 97       	sbiw	r30, 0x00	; 0
    37b0:	09 f0       	breq	.+2      	; 0x37b4 <f_mount+0x66>
    37b2:	10 82       	st	Z, r1
    37b4:	aa 0f       	add	r26, r26
    37b6:	bb 1f       	adc	r27, r27
    37b8:	ab 5c       	subi	r26, 0xCB	; 203
    37ba:	ba 4f       	sbci	r27, 0xFA	; 250
    37bc:	ed 93       	st	X+, r30
    37be:	fc 93       	st	X, r31
    37c0:	ef 2b       	or	r30, r31
    37c2:	59 f0       	breq	.+22     	; 0x37da <f_mount+0x8c>
    37c4:	11 30       	cpi	r17, 0x01	; 1
    37c6:	49 f4       	brne	.+18     	; 0x37da <f_mount+0x8c>
    37c8:	ce 01       	movw	r24, r28
    37ca:	03 96       	adiw	r24, 0x03	; 3
    37cc:	be 01       	movw	r22, r28
    37ce:	6b 5f       	subi	r22, 0xFB	; 251
    37d0:	7f 4f       	sbci	r23, 0xFF	; 255
    37d2:	40 e0       	ldi	r20, 0x00	; 0
    37d4:	0e 94 03 19 	call	0x3206	; 0x3206 <find_volume>
    37d8:	01 c0       	rjmp	.+2      	; 0x37dc <f_mount+0x8e>
    37da:	80 e0       	ldi	r24, 0x00	; 0
    37dc:	26 96       	adiw	r28, 0x06	; 6
    37de:	0f b6       	in	r0, 0x3f	; 63
    37e0:	f8 94       	cli
    37e2:	de bf       	out	0x3e, r29	; 62
    37e4:	0f be       	out	0x3f, r0	; 63
    37e6:	cd bf       	out	0x3d, r28	; 61
    37e8:	cf 91       	pop	r28
    37ea:	df 91       	pop	r29
    37ec:	1f 91       	pop	r17
    37ee:	08 95       	ret

000037f0 <put_fat>:
    37f0:	6f 92       	push	r6
    37f2:	7f 92       	push	r7
    37f4:	8f 92       	push	r8
    37f6:	9f 92       	push	r9
    37f8:	af 92       	push	r10
    37fa:	bf 92       	push	r11
    37fc:	cf 92       	push	r12
    37fe:	df 92       	push	r13
    3800:	ef 92       	push	r14
    3802:	ff 92       	push	r15
    3804:	0f 93       	push	r16
    3806:	1f 93       	push	r17
    3808:	cf 93       	push	r28
    380a:	df 93       	push	r29
    380c:	5c 01       	movw	r10, r24
    380e:	6a 01       	movw	r12, r20
    3810:	7b 01       	movw	r14, r22
    3812:	38 01       	movw	r6, r16
    3814:	49 01       	movw	r8, r18
    3816:	42 30       	cpi	r20, 0x02	; 2
    3818:	51 05       	cpc	r21, r1
    381a:	61 05       	cpc	r22, r1
    381c:	71 05       	cpc	r23, r1
    381e:	08 f4       	brcc	.+2      	; 0x3822 <put_fat+0x32>
    3820:	d1 c0       	rjmp	.+418    	; 0x39c4 <put_fat+0x1d4>
    3822:	f5 01       	movw	r30, r10
    3824:	82 89       	ldd	r24, Z+18	; 0x12
    3826:	93 89       	ldd	r25, Z+19	; 0x13
    3828:	a4 89       	ldd	r26, Z+20	; 0x14
    382a:	b5 89       	ldd	r27, Z+21	; 0x15
    382c:	48 17       	cp	r20, r24
    382e:	59 07       	cpc	r21, r25
    3830:	6a 07       	cpc	r22, r26
    3832:	7b 07       	cpc	r23, r27
    3834:	08 f0       	brcs	.+2      	; 0x3838 <put_fat+0x48>
    3836:	c6 c0       	rjmp	.+396    	; 0x39c4 <put_fat+0x1d4>
    3838:	80 81       	ld	r24, Z
    383a:	82 30       	cpi	r24, 0x02	; 2
    383c:	09 f4       	brne	.+2      	; 0x3840 <put_fat+0x50>
    383e:	6c c0       	rjmp	.+216    	; 0x3918 <put_fat+0x128>
    3840:	83 30       	cpi	r24, 0x03	; 3
    3842:	09 f4       	brne	.+2      	; 0x3846 <put_fat+0x56>
    3844:	89 c0       	rjmp	.+274    	; 0x3958 <put_fat+0x168>
    3846:	81 30       	cpi	r24, 0x01	; 1
    3848:	09 f0       	breq	.+2      	; 0x384c <put_fat+0x5c>
    384a:	bc c0       	rjmp	.+376    	; 0x39c4 <put_fat+0x1d4>
    384c:	ea 01       	movw	r28, r20
    384e:	d6 95       	lsr	r29
    3850:	c7 95       	ror	r28
    3852:	c4 0f       	add	r28, r20
    3854:	d5 1f       	adc	r29, r21
    3856:	ae 01       	movw	r20, r28
    3858:	45 2f       	mov	r20, r21
    385a:	55 27       	eor	r21, r21
    385c:	46 95       	lsr	r20
    385e:	60 e0       	ldi	r22, 0x00	; 0
    3860:	70 e0       	ldi	r23, 0x00	; 0
    3862:	f5 01       	movw	r30, r10
    3864:	86 8d       	ldd	r24, Z+30	; 0x1e
    3866:	97 8d       	ldd	r25, Z+31	; 0x1f
    3868:	a0 a1       	ldd	r26, Z+32	; 0x20
    386a:	b1 a1       	ldd	r27, Z+33	; 0x21
    386c:	48 0f       	add	r20, r24
    386e:	59 1f       	adc	r21, r25
    3870:	6a 1f       	adc	r22, r26
    3872:	7b 1f       	adc	r23, r27
    3874:	c5 01       	movw	r24, r10
    3876:	0e 94 7b 18 	call	0x30f6	; 0x30f6 <move_window>
    387a:	28 2f       	mov	r18, r24
    387c:	88 23       	and	r24, r24
    387e:	09 f0       	breq	.+2      	; 0x3882 <put_fat+0x92>
    3880:	a2 c0       	rjmp	.+324    	; 0x39c6 <put_fat+0x1d6>
    3882:	de 01       	movw	r26, r28
    3884:	b1 70       	andi	r27, 0x01	; 1
    3886:	21 96       	adiw	r28, 0x01	; 1
    3888:	86 01       	movw	r16, r12
    388a:	01 70       	andi	r16, 0x01	; 1
    388c:	10 70       	andi	r17, 0x00	; 0
    388e:	01 15       	cp	r16, r1
    3890:	11 05       	cpc	r17, r1
    3892:	51 f0       	breq	.+20     	; 0x38a8 <put_fat+0xb8>
    3894:	f5 01       	movw	r30, r10
    3896:	ea 0f       	add	r30, r26
    3898:	fb 1f       	adc	r31, r27
    389a:	86 a5       	ldd	r24, Z+46	; 0x2e
    389c:	8f 70       	andi	r24, 0x0F	; 15
    389e:	96 2d       	mov	r25, r6
    38a0:	92 95       	swap	r25
    38a2:	90 7f       	andi	r25, 0xF0	; 240
    38a4:	98 2b       	or	r25, r24
    38a6:	01 c0       	rjmp	.+2      	; 0x38aa <put_fat+0xba>
    38a8:	96 2d       	mov	r25, r6
    38aa:	aa 0d       	add	r26, r10
    38ac:	bb 1d       	adc	r27, r11
    38ae:	9e 96       	adiw	r26, 0x2e	; 46
    38b0:	9c 93       	st	X, r25
    38b2:	81 e0       	ldi	r24, 0x01	; 1
    38b4:	f5 01       	movw	r30, r10
    38b6:	84 83       	std	Z+4, r24	; 0x04
    38b8:	ae 01       	movw	r20, r28
    38ba:	45 2f       	mov	r20, r21
    38bc:	55 27       	eor	r21, r21
    38be:	46 95       	lsr	r20
    38c0:	60 e0       	ldi	r22, 0x00	; 0
    38c2:	70 e0       	ldi	r23, 0x00	; 0
    38c4:	86 8d       	ldd	r24, Z+30	; 0x1e
    38c6:	97 8d       	ldd	r25, Z+31	; 0x1f
    38c8:	a0 a1       	ldd	r26, Z+32	; 0x20
    38ca:	b1 a1       	ldd	r27, Z+33	; 0x21
    38cc:	48 0f       	add	r20, r24
    38ce:	59 1f       	adc	r21, r25
    38d0:	6a 1f       	adc	r22, r26
    38d2:	7b 1f       	adc	r23, r27
    38d4:	c5 01       	movw	r24, r10
    38d6:	0e 94 7b 18 	call	0x30f6	; 0x30f6 <move_window>
    38da:	28 2f       	mov	r18, r24
    38dc:	88 23       	and	r24, r24
    38de:	09 f0       	breq	.+2      	; 0x38e2 <put_fat+0xf2>
    38e0:	72 c0       	rjmp	.+228    	; 0x39c6 <put_fat+0x1d6>
    38e2:	d1 70       	andi	r29, 0x01	; 1
    38e4:	01 2b       	or	r16, r17
    38e6:	49 f0       	breq	.+18     	; 0x38fa <put_fat+0x10a>
    38e8:	14 e0       	ldi	r17, 0x04	; 4
    38ea:	96 94       	lsr	r9
    38ec:	87 94       	ror	r8
    38ee:	77 94       	ror	r7
    38f0:	67 94       	ror	r6
    38f2:	1a 95       	dec	r17
    38f4:	d1 f7       	brne	.-12     	; 0x38ea <put_fat+0xfa>
    38f6:	46 2d       	mov	r20, r6
    38f8:	0b c0       	rjmp	.+22     	; 0x3910 <put_fat+0x120>
    38fa:	f5 01       	movw	r30, r10
    38fc:	ec 0f       	add	r30, r28
    38fe:	fd 1f       	adc	r31, r29
    3900:	46 a5       	ldd	r20, Z+46	; 0x2e
    3902:	40 7f       	andi	r20, 0xF0	; 240
    3904:	bb 27       	eor	r27, r27
    3906:	a9 2d       	mov	r26, r9
    3908:	98 2d       	mov	r25, r8
    390a:	87 2d       	mov	r24, r7
    390c:	8f 70       	andi	r24, 0x0F	; 15
    390e:	48 2b       	or	r20, r24
    3910:	ca 0d       	add	r28, r10
    3912:	db 1d       	adc	r29, r11
    3914:	4e a7       	std	Y+46, r20	; 0x2e
    3916:	52 c0       	rjmp	.+164    	; 0x39bc <put_fat+0x1cc>
    3918:	45 2f       	mov	r20, r21
    391a:	56 2f       	mov	r21, r22
    391c:	67 2f       	mov	r22, r23
    391e:	77 27       	eor	r23, r23
    3920:	f5 01       	movw	r30, r10
    3922:	86 8d       	ldd	r24, Z+30	; 0x1e
    3924:	97 8d       	ldd	r25, Z+31	; 0x1f
    3926:	a0 a1       	ldd	r26, Z+32	; 0x20
    3928:	b1 a1       	ldd	r27, Z+33	; 0x21
    392a:	48 0f       	add	r20, r24
    392c:	59 1f       	adc	r21, r25
    392e:	6a 1f       	adc	r22, r26
    3930:	7b 1f       	adc	r23, r27
    3932:	c5 01       	movw	r24, r10
    3934:	0e 94 7b 18 	call	0x30f6	; 0x30f6 <move_window>
    3938:	28 2f       	mov	r18, r24
    393a:	88 23       	and	r24, r24
    393c:	09 f0       	breq	.+2      	; 0x3940 <put_fat+0x150>
    393e:	43 c0       	rjmp	.+134    	; 0x39c6 <put_fat+0x1d6>
    3940:	cc 0c       	add	r12, r12
    3942:	dd 1c       	adc	r13, r13
    3944:	ee 1c       	adc	r14, r14
    3946:	ff 1c       	adc	r15, r15
    3948:	f6 01       	movw	r30, r12
    394a:	f1 70       	andi	r31, 0x01	; 1
    394c:	be 96       	adiw	r30, 0x2e	; 46
    394e:	ea 0d       	add	r30, r10
    3950:	fb 1d       	adc	r31, r11
    3952:	71 82       	std	Z+1, r7	; 0x01
    3954:	60 82       	st	Z, r6
    3956:	32 c0       	rjmp	.+100    	; 0x39bc <put_fat+0x1cc>
    3958:	e7 e0       	ldi	r30, 0x07	; 7
    395a:	76 95       	lsr	r23
    395c:	67 95       	ror	r22
    395e:	57 95       	ror	r21
    3960:	47 95       	ror	r20
    3962:	ea 95       	dec	r30
    3964:	d1 f7       	brne	.-12     	; 0x395a <put_fat+0x16a>
    3966:	f5 01       	movw	r30, r10
    3968:	86 8d       	ldd	r24, Z+30	; 0x1e
    396a:	97 8d       	ldd	r25, Z+31	; 0x1f
    396c:	a0 a1       	ldd	r26, Z+32	; 0x20
    396e:	b1 a1       	ldd	r27, Z+33	; 0x21
    3970:	48 0f       	add	r20, r24
    3972:	59 1f       	adc	r21, r25
    3974:	6a 1f       	adc	r22, r26
    3976:	7b 1f       	adc	r23, r27
    3978:	c5 01       	movw	r24, r10
    397a:	0e 94 7b 18 	call	0x30f6	; 0x30f6 <move_window>
    397e:	28 2f       	mov	r18, r24
    3980:	88 23       	and	r24, r24
    3982:	09 f5       	brne	.+66     	; 0x39c6 <put_fat+0x1d6>
    3984:	32 e0       	ldi	r19, 0x02	; 2
    3986:	cc 0c       	add	r12, r12
    3988:	dd 1c       	adc	r13, r13
    398a:	ee 1c       	adc	r14, r14
    398c:	ff 1c       	adc	r15, r15
    398e:	3a 95       	dec	r19
    3990:	d1 f7       	brne	.-12     	; 0x3986 <put_fat+0x196>
    3992:	f6 01       	movw	r30, r12
    3994:	f1 70       	andi	r31, 0x01	; 1
    3996:	be 96       	adiw	r30, 0x2e	; 46
    3998:	ea 0d       	add	r30, r10
    399a:	fb 1d       	adc	r31, r11
    399c:	80 81       	ld	r24, Z
    399e:	91 81       	ldd	r25, Z+1	; 0x01
    39a0:	a2 81       	ldd	r26, Z+2	; 0x02
    39a2:	b3 81       	ldd	r27, Z+3	; 0x03
    39a4:	80 70       	andi	r24, 0x00	; 0
    39a6:	90 70       	andi	r25, 0x00	; 0
    39a8:	a0 70       	andi	r26, 0x00	; 0
    39aa:	b0 7f       	andi	r27, 0xF0	; 240
    39ac:	86 29       	or	r24, r6
    39ae:	97 29       	or	r25, r7
    39b0:	a8 29       	or	r26, r8
    39b2:	b9 29       	or	r27, r9
    39b4:	80 83       	st	Z, r24
    39b6:	91 83       	std	Z+1, r25	; 0x01
    39b8:	a2 83       	std	Z+2, r26	; 0x02
    39ba:	b3 83       	std	Z+3, r27	; 0x03
    39bc:	81 e0       	ldi	r24, 0x01	; 1
    39be:	f5 01       	movw	r30, r10
    39c0:	84 83       	std	Z+4, r24	; 0x04
    39c2:	01 c0       	rjmp	.+2      	; 0x39c6 <put_fat+0x1d6>
    39c4:	22 e0       	ldi	r18, 0x02	; 2
    39c6:	82 2f       	mov	r24, r18
    39c8:	df 91       	pop	r29
    39ca:	cf 91       	pop	r28
    39cc:	1f 91       	pop	r17
    39ce:	0f 91       	pop	r16
    39d0:	ff 90       	pop	r15
    39d2:	ef 90       	pop	r14
    39d4:	df 90       	pop	r13
    39d6:	cf 90       	pop	r12
    39d8:	bf 90       	pop	r11
    39da:	af 90       	pop	r10
    39dc:	9f 90       	pop	r9
    39de:	8f 90       	pop	r8
    39e0:	7f 90       	pop	r7
    39e2:	6f 90       	pop	r6
    39e4:	08 95       	ret

000039e6 <get_fat>:
    39e6:	bf 92       	push	r11
    39e8:	cf 92       	push	r12
    39ea:	df 92       	push	r13
    39ec:	ef 92       	push	r14
    39ee:	ff 92       	push	r15
    39f0:	0f 93       	push	r16
    39f2:	1f 93       	push	r17
    39f4:	cf 93       	push	r28
    39f6:	df 93       	push	r29
    39f8:	6c 01       	movw	r12, r24
    39fa:	7a 01       	movw	r14, r20
    39fc:	8b 01       	movw	r16, r22
    39fe:	42 30       	cpi	r20, 0x02	; 2
    3a00:	51 05       	cpc	r21, r1
    3a02:	61 05       	cpc	r22, r1
    3a04:	71 05       	cpc	r23, r1
    3a06:	08 f4       	brcc	.+2      	; 0x3a0a <get_fat+0x24>
    3a08:	ac c0       	rjmp	.+344    	; 0x3b62 <get_fat+0x17c>
    3a0a:	f6 01       	movw	r30, r12
    3a0c:	82 89       	ldd	r24, Z+18	; 0x12
    3a0e:	93 89       	ldd	r25, Z+19	; 0x13
    3a10:	a4 89       	ldd	r26, Z+20	; 0x14
    3a12:	b5 89       	ldd	r27, Z+21	; 0x15
    3a14:	48 17       	cp	r20, r24
    3a16:	59 07       	cpc	r21, r25
    3a18:	6a 07       	cpc	r22, r26
    3a1a:	7b 07       	cpc	r23, r27
    3a1c:	08 f0       	brcs	.+2      	; 0x3a20 <get_fat+0x3a>
    3a1e:	a1 c0       	rjmp	.+322    	; 0x3b62 <get_fat+0x17c>
    3a20:	80 81       	ld	r24, Z
    3a22:	82 30       	cpi	r24, 0x02	; 2
    3a24:	09 f4       	brne	.+2      	; 0x3a28 <get_fat+0x42>
    3a26:	57 c0       	rjmp	.+174    	; 0x3ad6 <get_fat+0xf0>
    3a28:	83 30       	cpi	r24, 0x03	; 3
    3a2a:	09 f4       	brne	.+2      	; 0x3a2e <get_fat+0x48>
    3a2c:	74 c0       	rjmp	.+232    	; 0x3b16 <get_fat+0x130>
    3a2e:	81 30       	cpi	r24, 0x01	; 1
    3a30:	09 f0       	breq	.+2      	; 0x3a34 <get_fat+0x4e>
    3a32:	97 c0       	rjmp	.+302    	; 0x3b62 <get_fat+0x17c>
    3a34:	ea 01       	movw	r28, r20
    3a36:	d6 95       	lsr	r29
    3a38:	c7 95       	ror	r28
    3a3a:	c4 0f       	add	r28, r20
    3a3c:	d5 1f       	adc	r29, r21
    3a3e:	ae 01       	movw	r20, r28
    3a40:	45 2f       	mov	r20, r21
    3a42:	55 27       	eor	r21, r21
    3a44:	46 95       	lsr	r20
    3a46:	60 e0       	ldi	r22, 0x00	; 0
    3a48:	70 e0       	ldi	r23, 0x00	; 0
    3a4a:	f6 01       	movw	r30, r12
    3a4c:	86 8d       	ldd	r24, Z+30	; 0x1e
    3a4e:	97 8d       	ldd	r25, Z+31	; 0x1f
    3a50:	a0 a1       	ldd	r26, Z+32	; 0x20
    3a52:	b1 a1       	ldd	r27, Z+33	; 0x21
    3a54:	48 0f       	add	r20, r24
    3a56:	59 1f       	adc	r21, r25
    3a58:	6a 1f       	adc	r22, r26
    3a5a:	7b 1f       	adc	r23, r27
    3a5c:	c6 01       	movw	r24, r12
    3a5e:	0e 94 7b 18 	call	0x30f6	; 0x30f6 <move_window>
    3a62:	88 23       	and	r24, r24
    3a64:	09 f0       	breq	.+2      	; 0x3a68 <get_fat+0x82>
    3a66:	82 c0       	rjmp	.+260    	; 0x3b6c <get_fat+0x186>
    3a68:	fe 01       	movw	r30, r28
    3a6a:	f1 70       	andi	r31, 0x01	; 1
    3a6c:	ec 0d       	add	r30, r12
    3a6e:	fd 1d       	adc	r31, r13
    3a70:	b6 a4       	ldd	r11, Z+46	; 0x2e
    3a72:	21 96       	adiw	r28, 0x01	; 1
    3a74:	ae 01       	movw	r20, r28
    3a76:	45 2f       	mov	r20, r21
    3a78:	55 27       	eor	r21, r21
    3a7a:	46 95       	lsr	r20
    3a7c:	60 e0       	ldi	r22, 0x00	; 0
    3a7e:	70 e0       	ldi	r23, 0x00	; 0
    3a80:	f6 01       	movw	r30, r12
    3a82:	86 8d       	ldd	r24, Z+30	; 0x1e
    3a84:	97 8d       	ldd	r25, Z+31	; 0x1f
    3a86:	a0 a1       	ldd	r26, Z+32	; 0x20
    3a88:	b1 a1       	ldd	r27, Z+33	; 0x21
    3a8a:	48 0f       	add	r20, r24
    3a8c:	59 1f       	adc	r21, r25
    3a8e:	6a 1f       	adc	r22, r26
    3a90:	7b 1f       	adc	r23, r27
    3a92:	c6 01       	movw	r24, r12
    3a94:	0e 94 7b 18 	call	0x30f6	; 0x30f6 <move_window>
    3a98:	88 23       	and	r24, r24
    3a9a:	09 f0       	breq	.+2      	; 0x3a9e <get_fat+0xb8>
    3a9c:	67 c0       	rjmp	.+206    	; 0x3b6c <get_fat+0x186>
    3a9e:	6b 2d       	mov	r22, r11
    3aa0:	70 e0       	ldi	r23, 0x00	; 0
    3aa2:	d1 70       	andi	r29, 0x01	; 1
    3aa4:	cc 0d       	add	r28, r12
    3aa6:	dd 1d       	adc	r29, r13
    3aa8:	9e a5       	ldd	r25, Y+46	; 0x2e
    3aaa:	80 e0       	ldi	r24, 0x00	; 0
    3aac:	68 2b       	or	r22, r24
    3aae:	79 2b       	or	r23, r25
    3ab0:	c7 01       	movw	r24, r14
    3ab2:	81 70       	andi	r24, 0x01	; 1
    3ab4:	90 70       	andi	r25, 0x00	; 0
    3ab6:	89 2b       	or	r24, r25
    3ab8:	39 f0       	breq	.+14     	; 0x3ac8 <get_fat+0xe2>
    3aba:	b4 e0       	ldi	r27, 0x04	; 4
    3abc:	76 95       	lsr	r23
    3abe:	67 95       	ror	r22
    3ac0:	ba 95       	dec	r27
    3ac2:	e1 f7       	brne	.-8      	; 0x3abc <get_fat+0xd6>
    3ac4:	9b 01       	movw	r18, r22
    3ac6:	24 c0       	rjmp	.+72     	; 0x3b10 <get_fat+0x12a>
    3ac8:	9b 01       	movw	r18, r22
    3aca:	40 e0       	ldi	r20, 0x00	; 0
    3acc:	50 e0       	ldi	r21, 0x00	; 0
    3ace:	3f 70       	andi	r19, 0x0F	; 15
    3ad0:	40 70       	andi	r20, 0x00	; 0
    3ad2:	50 70       	andi	r21, 0x00	; 0
    3ad4:	4f c0       	rjmp	.+158    	; 0x3b74 <get_fat+0x18e>
    3ad6:	45 2f       	mov	r20, r21
    3ad8:	56 2f       	mov	r21, r22
    3ada:	67 2f       	mov	r22, r23
    3adc:	77 27       	eor	r23, r23
    3ade:	f6 01       	movw	r30, r12
    3ae0:	86 8d       	ldd	r24, Z+30	; 0x1e
    3ae2:	97 8d       	ldd	r25, Z+31	; 0x1f
    3ae4:	a0 a1       	ldd	r26, Z+32	; 0x20
    3ae6:	b1 a1       	ldd	r27, Z+33	; 0x21
    3ae8:	48 0f       	add	r20, r24
    3aea:	59 1f       	adc	r21, r25
    3aec:	6a 1f       	adc	r22, r26
    3aee:	7b 1f       	adc	r23, r27
    3af0:	c6 01       	movw	r24, r12
    3af2:	0e 94 7b 18 	call	0x30f6	; 0x30f6 <move_window>
    3af6:	88 23       	and	r24, r24
    3af8:	c9 f5       	brne	.+114    	; 0x3b6c <get_fat+0x186>
    3afa:	ee 0c       	add	r14, r14
    3afc:	ff 1c       	adc	r15, r15
    3afe:	00 1f       	adc	r16, r16
    3b00:	11 1f       	adc	r17, r17
    3b02:	f7 01       	movw	r30, r14
    3b04:	f1 70       	andi	r31, 0x01	; 1
    3b06:	ec 0d       	add	r30, r12
    3b08:	fd 1d       	adc	r31, r13
    3b0a:	86 a5       	ldd	r24, Z+46	; 0x2e
    3b0c:	97 a5       	ldd	r25, Z+47	; 0x2f
    3b0e:	9c 01       	movw	r18, r24
    3b10:	40 e0       	ldi	r20, 0x00	; 0
    3b12:	50 e0       	ldi	r21, 0x00	; 0
    3b14:	2f c0       	rjmp	.+94     	; 0x3b74 <get_fat+0x18e>
    3b16:	e7 e0       	ldi	r30, 0x07	; 7
    3b18:	76 95       	lsr	r23
    3b1a:	67 95       	ror	r22
    3b1c:	57 95       	ror	r21
    3b1e:	47 95       	ror	r20
    3b20:	ea 95       	dec	r30
    3b22:	d1 f7       	brne	.-12     	; 0x3b18 <get_fat+0x132>
    3b24:	f6 01       	movw	r30, r12
    3b26:	86 8d       	ldd	r24, Z+30	; 0x1e
    3b28:	97 8d       	ldd	r25, Z+31	; 0x1f
    3b2a:	a0 a1       	ldd	r26, Z+32	; 0x20
    3b2c:	b1 a1       	ldd	r27, Z+33	; 0x21
    3b2e:	48 0f       	add	r20, r24
    3b30:	59 1f       	adc	r21, r25
    3b32:	6a 1f       	adc	r22, r26
    3b34:	7b 1f       	adc	r23, r27
    3b36:	c6 01       	movw	r24, r12
    3b38:	0e 94 7b 18 	call	0x30f6	; 0x30f6 <move_window>
    3b3c:	88 23       	and	r24, r24
    3b3e:	b1 f4       	brne	.+44     	; 0x3b6c <get_fat+0x186>
    3b40:	32 e0       	ldi	r19, 0x02	; 2
    3b42:	ee 0c       	add	r14, r14
    3b44:	ff 1c       	adc	r15, r15
    3b46:	00 1f       	adc	r16, r16
    3b48:	11 1f       	adc	r17, r17
    3b4a:	3a 95       	dec	r19
    3b4c:	d1 f7       	brne	.-12     	; 0x3b42 <get_fat+0x15c>
    3b4e:	f7 01       	movw	r30, r14
    3b50:	f1 70       	andi	r31, 0x01	; 1
    3b52:	ec 0d       	add	r30, r12
    3b54:	fd 1d       	adc	r31, r13
    3b56:	26 a5       	ldd	r18, Z+46	; 0x2e
    3b58:	37 a5       	ldd	r19, Z+47	; 0x2f
    3b5a:	40 a9       	ldd	r20, Z+48	; 0x30
    3b5c:	51 a9       	ldd	r21, Z+49	; 0x31
    3b5e:	5f 70       	andi	r21, 0x0F	; 15
    3b60:	09 c0       	rjmp	.+18     	; 0x3b74 <get_fat+0x18e>
    3b62:	21 e0       	ldi	r18, 0x01	; 1
    3b64:	30 e0       	ldi	r19, 0x00	; 0
    3b66:	40 e0       	ldi	r20, 0x00	; 0
    3b68:	50 e0       	ldi	r21, 0x00	; 0
    3b6a:	04 c0       	rjmp	.+8      	; 0x3b74 <get_fat+0x18e>
    3b6c:	2f ef       	ldi	r18, 0xFF	; 255
    3b6e:	3f ef       	ldi	r19, 0xFF	; 255
    3b70:	4f ef       	ldi	r20, 0xFF	; 255
    3b72:	5f ef       	ldi	r21, 0xFF	; 255
    3b74:	b9 01       	movw	r22, r18
    3b76:	ca 01       	movw	r24, r20
    3b78:	df 91       	pop	r29
    3b7a:	cf 91       	pop	r28
    3b7c:	1f 91       	pop	r17
    3b7e:	0f 91       	pop	r16
    3b80:	ff 90       	pop	r15
    3b82:	ef 90       	pop	r14
    3b84:	df 90       	pop	r13
    3b86:	cf 90       	pop	r12
    3b88:	bf 90       	pop	r11
    3b8a:	08 95       	ret

00003b8c <dir_sdi>:
    3b8c:	6f 92       	push	r6
    3b8e:	7f 92       	push	r7
    3b90:	8f 92       	push	r8
    3b92:	9f 92       	push	r9
    3b94:	af 92       	push	r10
    3b96:	bf 92       	push	r11
    3b98:	cf 92       	push	r12
    3b9a:	df 92       	push	r13
    3b9c:	ef 92       	push	r14
    3b9e:	ff 92       	push	r15
    3ba0:	0f 93       	push	r16
    3ba2:	1f 93       	push	r17
    3ba4:	cf 93       	push	r28
    3ba6:	df 93       	push	r29
    3ba8:	3c 01       	movw	r6, r24
    3baa:	4b 01       	movw	r8, r22
    3bac:	dc 01       	movw	r26, r24
    3bae:	15 96       	adiw	r26, 0x05	; 5
    3bb0:	7c 93       	st	X, r23
    3bb2:	6e 93       	st	-X, r22
    3bb4:	14 97       	sbiw	r26, 0x04	; 4
    3bb6:	16 96       	adiw	r26, 0x06	; 6
    3bb8:	ed 90       	ld	r14, X+
    3bba:	fd 90       	ld	r15, X+
    3bbc:	0d 91       	ld	r16, X+
    3bbe:	1c 91       	ld	r17, X
    3bc0:	19 97       	sbiw	r26, 0x09	; 9
    3bc2:	b1 e0       	ldi	r27, 0x01	; 1
    3bc4:	eb 16       	cp	r14, r27
    3bc6:	f1 04       	cpc	r15, r1
    3bc8:	01 05       	cpc	r16, r1
    3bca:	11 05       	cpc	r17, r1
    3bcc:	09 f4       	brne	.+2      	; 0x3bd0 <dir_sdi+0x44>
    3bce:	c3 c0       	rjmp	.+390    	; 0x3d56 <dir_sdi+0x1ca>
    3bd0:	dc 01       	movw	r26, r24
    3bd2:	ed 91       	ld	r30, X+
    3bd4:	fc 91       	ld	r31, X
    3bd6:	82 89       	ldd	r24, Z+18	; 0x12
    3bd8:	93 89       	ldd	r25, Z+19	; 0x13
    3bda:	a4 89       	ldd	r26, Z+20	; 0x14
    3bdc:	b5 89       	ldd	r27, Z+21	; 0x15
    3bde:	e8 16       	cp	r14, r24
    3be0:	f9 06       	cpc	r15, r25
    3be2:	0a 07       	cpc	r16, r26
    3be4:	1b 07       	cpc	r17, r27
    3be6:	08 f0       	brcs	.+2      	; 0x3bea <dir_sdi+0x5e>
    3be8:	b6 c0       	rjmp	.+364    	; 0x3d56 <dir_sdi+0x1ca>
    3bea:	e1 14       	cp	r14, r1
    3bec:	f1 04       	cpc	r15, r1
    3bee:	01 05       	cpc	r16, r1
    3bf0:	11 05       	cpc	r17, r1
    3bf2:	c1 f4       	brne	.+48     	; 0x3c24 <dir_sdi+0x98>
    3bf4:	80 81       	ld	r24, Z
    3bf6:	83 30       	cpi	r24, 0x03	; 3
    3bf8:	41 f4       	brne	.+16     	; 0x3c0a <dir_sdi+0x7e>
    3bfa:	82 a1       	ldd	r24, Z+34	; 0x22
    3bfc:	93 a1       	ldd	r25, Z+35	; 0x23
    3bfe:	a4 a1       	ldd	r26, Z+36	; 0x24
    3c00:	b5 a1       	ldd	r27, Z+37	; 0x25
    3c02:	00 97       	sbiw	r24, 0x00	; 0
    3c04:	a1 05       	cpc	r26, r1
    3c06:	b1 05       	cpc	r27, r1
    3c08:	59 f4       	brne	.+22     	; 0x3c20 <dir_sdi+0x94>
    3c0a:	80 85       	ldd	r24, Z+8	; 0x08
    3c0c:	91 85       	ldd	r25, Z+9	; 0x09
    3c0e:	88 16       	cp	r8, r24
    3c10:	99 06       	cpc	r9, r25
    3c12:	08 f0       	brcs	.+2      	; 0x3c16 <dir_sdi+0x8a>
    3c14:	a0 c0       	rjmp	.+320    	; 0x3d56 <dir_sdi+0x1ca>
    3c16:	22 a1       	ldd	r18, Z+34	; 0x22
    3c18:	33 a1       	ldd	r19, Z+35	; 0x23
    3c1a:	44 a1       	ldd	r20, Z+36	; 0x24
    3c1c:	55 a1       	ldd	r21, Z+37	; 0x25
    3c1e:	66 c0       	rjmp	.+204    	; 0x3cec <dir_sdi+0x160>
    3c20:	7c 01       	movw	r14, r24
    3c22:	8d 01       	movw	r16, r26
    3c24:	82 81       	ldd	r24, Z+2	; 0x02
    3c26:	c8 2e       	mov	r12, r24
    3c28:	dd 24       	eor	r13, r13
    3c2a:	e4 e0       	ldi	r30, 0x04	; 4
    3c2c:	cc 0c       	add	r12, r12
    3c2e:	dd 1c       	adc	r13, r13
    3c30:	ea 95       	dec	r30
    3c32:	e1 f7       	brne	.-8      	; 0x3c2c <dir_sdi+0xa0>
    3c34:	26 c0       	rjmp	.+76     	; 0x3c82 <dir_sdi+0xf6>
    3c36:	ce 01       	movw	r24, r28
    3c38:	b8 01       	movw	r22, r16
    3c3a:	a7 01       	movw	r20, r14
    3c3c:	0e 94 f3 1c 	call	0x39e6	; 0x39e6 <get_fat>
    3c40:	7b 01       	movw	r14, r22
    3c42:	8c 01       	movw	r16, r24
    3c44:	6f 3f       	cpi	r22, 0xFF	; 255
    3c46:	bf ef       	ldi	r27, 0xFF	; 255
    3c48:	7b 07       	cpc	r23, r27
    3c4a:	bf ef       	ldi	r27, 0xFF	; 255
    3c4c:	8b 07       	cpc	r24, r27
    3c4e:	bf ef       	ldi	r27, 0xFF	; 255
    3c50:	9b 07       	cpc	r25, r27
    3c52:	11 f4       	brne	.+4      	; 0x3c58 <dir_sdi+0xcc>
    3c54:	81 e0       	ldi	r24, 0x01	; 1
    3c56:	80 c0       	rjmp	.+256    	; 0x3d58 <dir_sdi+0x1cc>
    3c58:	62 30       	cpi	r22, 0x02	; 2
    3c5a:	71 05       	cpc	r23, r1
    3c5c:	81 05       	cpc	r24, r1
    3c5e:	91 05       	cpc	r25, r1
    3c60:	08 f4       	brcc	.+2      	; 0x3c64 <dir_sdi+0xd8>
    3c62:	79 c0       	rjmp	.+242    	; 0x3d56 <dir_sdi+0x1ca>
    3c64:	d3 01       	movw	r26, r6
    3c66:	ed 91       	ld	r30, X+
    3c68:	fc 91       	ld	r31, X
    3c6a:	82 89       	ldd	r24, Z+18	; 0x12
    3c6c:	93 89       	ldd	r25, Z+19	; 0x13
    3c6e:	a4 89       	ldd	r26, Z+20	; 0x14
    3c70:	b5 89       	ldd	r27, Z+21	; 0x15
    3c72:	e8 16       	cp	r14, r24
    3c74:	f9 06       	cpc	r15, r25
    3c76:	0a 07       	cpc	r16, r26
    3c78:	1b 07       	cpc	r17, r27
    3c7a:	08 f0       	brcs	.+2      	; 0x3c7e <dir_sdi+0xf2>
    3c7c:	6c c0       	rjmp	.+216    	; 0x3d56 <dir_sdi+0x1ca>
    3c7e:	8c 18       	sub	r8, r12
    3c80:	9d 08       	sbc	r9, r13
    3c82:	f3 01       	movw	r30, r6
    3c84:	c0 81       	ld	r28, Z
    3c86:	d1 81       	ldd	r29, Z+1	; 0x01
    3c88:	8c 14       	cp	r8, r12
    3c8a:	9d 04       	cpc	r9, r13
    3c8c:	a0 f6       	brcc	.-88     	; 0x3c36 <dir_sdi+0xaa>
    3c8e:	7e ef       	ldi	r23, 0xFE	; 254
    3c90:	a7 2e       	mov	r10, r23
    3c92:	7f ef       	ldi	r23, 0xFF	; 255
    3c94:	b7 2e       	mov	r11, r23
    3c96:	7f ef       	ldi	r23, 0xFF	; 255
    3c98:	c7 2e       	mov	r12, r23
    3c9a:	7f ef       	ldi	r23, 0xFF	; 255
    3c9c:	d7 2e       	mov	r13, r23
    3c9e:	ae 0c       	add	r10, r14
    3ca0:	bf 1c       	adc	r11, r15
    3ca2:	c0 1e       	adc	r12, r16
    3ca4:	d1 1e       	adc	r13, r17
    3ca6:	8a 89       	ldd	r24, Y+18	; 0x12
    3ca8:	9b 89       	ldd	r25, Y+19	; 0x13
    3caa:	ac 89       	ldd	r26, Y+20	; 0x14
    3cac:	bd 89       	ldd	r27, Y+21	; 0x15
    3cae:	02 97       	sbiw	r24, 0x02	; 2
    3cb0:	a1 09       	sbc	r26, r1
    3cb2:	b1 09       	sbc	r27, r1
    3cb4:	a8 16       	cp	r10, r24
    3cb6:	b9 06       	cpc	r11, r25
    3cb8:	ca 06       	cpc	r12, r26
    3cba:	db 06       	cpc	r13, r27
    3cbc:	28 f0       	brcs	.+10     	; 0x3cc8 <dir_sdi+0x13c>
    3cbe:	20 e0       	ldi	r18, 0x00	; 0
    3cc0:	30 e0       	ldi	r19, 0x00	; 0
    3cc2:	40 e0       	ldi	r20, 0x00	; 0
    3cc4:	50 e0       	ldi	r21, 0x00	; 0
    3cc6:	12 c0       	rjmp	.+36     	; 0x3cec <dir_sdi+0x160>
    3cc8:	2a 81       	ldd	r18, Y+2	; 0x02
    3cca:	30 e0       	ldi	r19, 0x00	; 0
    3ccc:	40 e0       	ldi	r20, 0x00	; 0
    3cce:	50 e0       	ldi	r21, 0x00	; 0
    3cd0:	c6 01       	movw	r24, r12
    3cd2:	b5 01       	movw	r22, r10
    3cd4:	0e 94 b2 40 	call	0x8164	; 0x8164 <__mulsi3>
    3cd8:	9b 01       	movw	r18, r22
    3cda:	ac 01       	movw	r20, r24
    3cdc:	8e a1       	ldd	r24, Y+38	; 0x26
    3cde:	9f a1       	ldd	r25, Y+39	; 0x27
    3ce0:	a8 a5       	ldd	r26, Y+40	; 0x28
    3ce2:	b9 a5       	ldd	r27, Y+41	; 0x29
    3ce4:	28 0f       	add	r18, r24
    3ce6:	39 1f       	adc	r19, r25
    3ce8:	4a 1f       	adc	r20, r26
    3cea:	5b 1f       	adc	r21, r27
    3cec:	d3 01       	movw	r26, r6
    3cee:	1a 96       	adiw	r26, 0x0a	; 10
    3cf0:	ed 92       	st	X+, r14
    3cf2:	fd 92       	st	X+, r15
    3cf4:	0d 93       	st	X+, r16
    3cf6:	1c 93       	st	X, r17
    3cf8:	1d 97       	sbiw	r26, 0x0d	; 13
    3cfa:	21 15       	cp	r18, r1
    3cfc:	31 05       	cpc	r19, r1
    3cfe:	41 05       	cpc	r20, r1
    3d00:	51 05       	cpc	r21, r1
    3d02:	49 f1       	breq	.+82     	; 0x3d56 <dir_sdi+0x1ca>
    3d04:	c4 01       	movw	r24, r8
    3d06:	64 e0       	ldi	r22, 0x04	; 4
    3d08:	96 95       	lsr	r25
    3d0a:	87 95       	ror	r24
    3d0c:	6a 95       	dec	r22
    3d0e:	e1 f7       	brne	.-8      	; 0x3d08 <dir_sdi+0x17c>
    3d10:	a0 e0       	ldi	r26, 0x00	; 0
    3d12:	b0 e0       	ldi	r27, 0x00	; 0
    3d14:	82 0f       	add	r24, r18
    3d16:	93 1f       	adc	r25, r19
    3d18:	a4 1f       	adc	r26, r20
    3d1a:	b5 1f       	adc	r27, r21
    3d1c:	f3 01       	movw	r30, r6
    3d1e:	86 87       	std	Z+14, r24	; 0x0e
    3d20:	97 87       	std	Z+15, r25	; 0x0f
    3d22:	a0 8b       	std	Z+16, r26	; 0x10
    3d24:	b1 8b       	std	Z+17, r27	; 0x11
    3d26:	ff e0       	ldi	r31, 0x0F	; 15
    3d28:	8f 22       	and	r8, r31
    3d2a:	99 24       	eor	r9, r9
    3d2c:	35 e0       	ldi	r19, 0x05	; 5
    3d2e:	88 0c       	add	r8, r8
    3d30:	99 1c       	adc	r9, r9
    3d32:	3a 95       	dec	r19
    3d34:	e1 f7       	brne	.-8      	; 0x3d2e <dir_sdi+0x1a2>
    3d36:	8e e2       	ldi	r24, 0x2E	; 46
    3d38:	90 e0       	ldi	r25, 0x00	; 0
    3d3a:	88 0e       	add	r8, r24
    3d3c:	99 1e       	adc	r9, r25
    3d3e:	d3 01       	movw	r26, r6
    3d40:	8d 91       	ld	r24, X+
    3d42:	9c 91       	ld	r25, X
    3d44:	11 97       	sbiw	r26, 0x01	; 1
    3d46:	88 0d       	add	r24, r8
    3d48:	99 1d       	adc	r25, r9
    3d4a:	53 96       	adiw	r26, 0x13	; 19
    3d4c:	9c 93       	st	X, r25
    3d4e:	8e 93       	st	-X, r24
    3d50:	52 97       	sbiw	r26, 0x12	; 18
    3d52:	80 e0       	ldi	r24, 0x00	; 0
    3d54:	01 c0       	rjmp	.+2      	; 0x3d58 <dir_sdi+0x1cc>
    3d56:	82 e0       	ldi	r24, 0x02	; 2
    3d58:	df 91       	pop	r29
    3d5a:	cf 91       	pop	r28
    3d5c:	1f 91       	pop	r17
    3d5e:	0f 91       	pop	r16
    3d60:	ff 90       	pop	r15
    3d62:	ef 90       	pop	r14
    3d64:	df 90       	pop	r13
    3d66:	cf 90       	pop	r12
    3d68:	bf 90       	pop	r11
    3d6a:	af 90       	pop	r10
    3d6c:	9f 90       	pop	r9
    3d6e:	8f 90       	pop	r8
    3d70:	7f 90       	pop	r7
    3d72:	6f 90       	pop	r6
    3d74:	08 95       	ret

00003d76 <create_chain>:
    3d76:	4f 92       	push	r4
    3d78:	5f 92       	push	r5
    3d7a:	6f 92       	push	r6
    3d7c:	7f 92       	push	r7
    3d7e:	8f 92       	push	r8
    3d80:	9f 92       	push	r9
    3d82:	af 92       	push	r10
    3d84:	bf 92       	push	r11
    3d86:	cf 92       	push	r12
    3d88:	df 92       	push	r13
    3d8a:	ef 92       	push	r14
    3d8c:	ff 92       	push	r15
    3d8e:	0f 93       	push	r16
    3d90:	1f 93       	push	r17
    3d92:	cf 93       	push	r28
    3d94:	df 93       	push	r29
    3d96:	ec 01       	movw	r28, r24
    3d98:	2a 01       	movw	r4, r20
    3d9a:	3b 01       	movw	r6, r22
    3d9c:	41 15       	cp	r20, r1
    3d9e:	51 05       	cpc	r21, r1
    3da0:	61 05       	cpc	r22, r1
    3da2:	71 05       	cpc	r23, r1
    3da4:	99 f4       	brne	.+38     	; 0x3dcc <create_chain+0x56>
    3da6:	8a 84       	ldd	r8, Y+10	; 0x0a
    3da8:	9b 84       	ldd	r9, Y+11	; 0x0b
    3daa:	ac 84       	ldd	r10, Y+12	; 0x0c
    3dac:	bd 84       	ldd	r11, Y+13	; 0x0d
    3dae:	81 14       	cp	r8, r1
    3db0:	91 04       	cpc	r9, r1
    3db2:	a1 04       	cpc	r10, r1
    3db4:	b1 04       	cpc	r11, r1
    3db6:	51 f1       	breq	.+84     	; 0x3e0c <create_chain+0x96>
    3db8:	8a 89       	ldd	r24, Y+18	; 0x12
    3dba:	9b 89       	ldd	r25, Y+19	; 0x13
    3dbc:	ac 89       	ldd	r26, Y+20	; 0x14
    3dbe:	bd 89       	ldd	r27, Y+21	; 0x15
    3dc0:	88 16       	cp	r8, r24
    3dc2:	99 06       	cpc	r9, r25
    3dc4:	aa 06       	cpc	r10, r26
    3dc6:	bb 06       	cpc	r11, r27
    3dc8:	08 f5       	brcc	.+66     	; 0x3e0c <create_chain+0x96>
    3dca:	25 c0       	rjmp	.+74     	; 0x3e16 <create_chain+0xa0>
    3dcc:	0e 94 f3 1c 	call	0x39e6	; 0x39e6 <get_fat>
    3dd0:	9b 01       	movw	r18, r22
    3dd2:	ac 01       	movw	r20, r24
    3dd4:	62 30       	cpi	r22, 0x02	; 2
    3dd6:	71 05       	cpc	r23, r1
    3dd8:	81 05       	cpc	r24, r1
    3dda:	91 05       	cpc	r25, r1
    3ddc:	08 f4       	brcc	.+2      	; 0x3de0 <create_chain+0x6a>
    3dde:	94 c0       	rjmp	.+296    	; 0x3f08 <create_chain+0x192>
    3de0:	2f 3f       	cpi	r18, 0xFF	; 255
    3de2:	8f ef       	ldi	r24, 0xFF	; 255
    3de4:	38 07       	cpc	r19, r24
    3de6:	8f ef       	ldi	r24, 0xFF	; 255
    3de8:	48 07       	cpc	r20, r24
    3dea:	8f ef       	ldi	r24, 0xFF	; 255
    3dec:	58 07       	cpc	r21, r24
    3dee:	09 f4       	brne	.+2      	; 0x3df2 <create_chain+0x7c>
    3df0:	99 c0       	rjmp	.+306    	; 0x3f24 <create_chain+0x1ae>
    3df2:	8a 89       	ldd	r24, Y+18	; 0x12
    3df4:	9b 89       	ldd	r25, Y+19	; 0x13
    3df6:	ac 89       	ldd	r26, Y+20	; 0x14
    3df8:	bd 89       	ldd	r27, Y+21	; 0x15
    3dfa:	28 17       	cp	r18, r24
    3dfc:	39 07       	cpc	r19, r25
    3dfe:	4a 07       	cpc	r20, r26
    3e00:	5b 07       	cpc	r21, r27
    3e02:	08 f4       	brcc	.+2      	; 0x3e06 <create_chain+0x90>
    3e04:	8f c0       	rjmp	.+286    	; 0x3f24 <create_chain+0x1ae>
    3e06:	53 01       	movw	r10, r6
    3e08:	42 01       	movw	r8, r4
    3e0a:	05 c0       	rjmp	.+10     	; 0x3e16 <create_chain+0xa0>
    3e0c:	a1 e0       	ldi	r26, 0x01	; 1
    3e0e:	8a 2e       	mov	r8, r26
    3e10:	91 2c       	mov	r9, r1
    3e12:	a1 2c       	mov	r10, r1
    3e14:	b1 2c       	mov	r11, r1
    3e16:	75 01       	movw	r14, r10
    3e18:	64 01       	movw	r12, r8
    3e1a:	08 94       	sec
    3e1c:	c1 1c       	adc	r12, r1
    3e1e:	d1 1c       	adc	r13, r1
    3e20:	e1 1c       	adc	r14, r1
    3e22:	f1 1c       	adc	r15, r1
    3e24:	8a 89       	ldd	r24, Y+18	; 0x12
    3e26:	9b 89       	ldd	r25, Y+19	; 0x13
    3e28:	ac 89       	ldd	r26, Y+20	; 0x14
    3e2a:	bd 89       	ldd	r27, Y+21	; 0x15
    3e2c:	c8 16       	cp	r12, r24
    3e2e:	d9 06       	cpc	r13, r25
    3e30:	ea 06       	cpc	r14, r26
    3e32:	fb 06       	cpc	r15, r27
    3e34:	60 f0       	brcs	.+24     	; 0x3e4e <create_chain+0xd8>
    3e36:	22 e0       	ldi	r18, 0x02	; 2
    3e38:	82 16       	cp	r8, r18
    3e3a:	91 04       	cpc	r9, r1
    3e3c:	a1 04       	cpc	r10, r1
    3e3e:	b1 04       	cpc	r11, r1
    3e40:	08 f4       	brcc	.+2      	; 0x3e44 <create_chain+0xce>
    3e42:	6c c0       	rjmp	.+216    	; 0x3f1c <create_chain+0x1a6>
    3e44:	f2 e0       	ldi	r31, 0x02	; 2
    3e46:	cf 2e       	mov	r12, r31
    3e48:	d1 2c       	mov	r13, r1
    3e4a:	e1 2c       	mov	r14, r1
    3e4c:	f1 2c       	mov	r15, r1
    3e4e:	ce 01       	movw	r24, r28
    3e50:	b7 01       	movw	r22, r14
    3e52:	a6 01       	movw	r20, r12
    3e54:	0e 94 f3 1c 	call	0x39e6	; 0x39e6 <get_fat>
    3e58:	9b 01       	movw	r18, r22
    3e5a:	ac 01       	movw	r20, r24
    3e5c:	61 15       	cp	r22, r1
    3e5e:	71 05       	cpc	r23, r1
    3e60:	81 05       	cpc	r24, r1
    3e62:	91 05       	cpc	r25, r1
    3e64:	a9 f0       	breq	.+42     	; 0x3e90 <create_chain+0x11a>
    3e66:	2f 3f       	cpi	r18, 0xFF	; 255
    3e68:	8f ef       	ldi	r24, 0xFF	; 255
    3e6a:	38 07       	cpc	r19, r24
    3e6c:	8f ef       	ldi	r24, 0xFF	; 255
    3e6e:	48 07       	cpc	r20, r24
    3e70:	8f ef       	ldi	r24, 0xFF	; 255
    3e72:	58 07       	cpc	r21, r24
    3e74:	09 f4       	brne	.+2      	; 0x3e78 <create_chain+0x102>
    3e76:	56 c0       	rjmp	.+172    	; 0x3f24 <create_chain+0x1ae>
    3e78:	21 30       	cpi	r18, 0x01	; 1
    3e7a:	31 05       	cpc	r19, r1
    3e7c:	41 05       	cpc	r20, r1
    3e7e:	51 05       	cpc	r21, r1
    3e80:	09 f4       	brne	.+2      	; 0x3e84 <create_chain+0x10e>
    3e82:	50 c0       	rjmp	.+160    	; 0x3f24 <create_chain+0x1ae>
    3e84:	c8 14       	cp	r12, r8
    3e86:	d9 04       	cpc	r13, r9
    3e88:	ea 04       	cpc	r14, r10
    3e8a:	fb 04       	cpc	r15, r11
    3e8c:	31 f6       	brne	.-116    	; 0x3e1a <create_chain+0xa4>
    3e8e:	46 c0       	rjmp	.+140    	; 0x3f1c <create_chain+0x1a6>
    3e90:	bc 2c       	mov	r11, r12
    3e92:	ad 2c       	mov	r10, r13
    3e94:	9e 2c       	mov	r9, r14
    3e96:	8f 2c       	mov	r8, r15
    3e98:	ce 01       	movw	r24, r28
    3e9a:	a6 01       	movw	r20, r12
    3e9c:	b7 01       	movw	r22, r14
    3e9e:	0f ef       	ldi	r16, 0xFF	; 255
    3ea0:	1f ef       	ldi	r17, 0xFF	; 255
    3ea2:	2f ef       	ldi	r18, 0xFF	; 255
    3ea4:	3f e0       	ldi	r19, 0x0F	; 15
    3ea6:	0e 94 f8 1b 	call	0x37f0	; 0x37f0 <put_fat>
    3eaa:	88 23       	and	r24, r24
    3eac:	59 f5       	brne	.+86     	; 0x3f04 <create_chain+0x18e>
    3eae:	41 14       	cp	r4, r1
    3eb0:	51 04       	cpc	r5, r1
    3eb2:	61 04       	cpc	r6, r1
    3eb4:	71 04       	cpc	r7, r1
    3eb6:	49 f0       	breq	.+18     	; 0x3eca <create_chain+0x154>
    3eb8:	ce 01       	movw	r24, r28
    3eba:	b3 01       	movw	r22, r6
    3ebc:	a2 01       	movw	r20, r4
    3ebe:	86 01       	movw	r16, r12
    3ec0:	97 01       	movw	r18, r14
    3ec2:	0e 94 f8 1b 	call	0x37f0	; 0x37f0 <put_fat>
    3ec6:	88 23       	and	r24, r24
    3ec8:	e9 f4       	brne	.+58     	; 0x3f04 <create_chain+0x18e>
    3eca:	ba 86       	std	Y+10, r11	; 0x0a
    3ecc:	ab 86       	std	Y+11, r10	; 0x0b
    3ece:	9c 86       	std	Y+12, r9	; 0x0c
    3ed0:	8d 86       	std	Y+13, r8	; 0x0d
    3ed2:	8e 85       	ldd	r24, Y+14	; 0x0e
    3ed4:	9f 85       	ldd	r25, Y+15	; 0x0f
    3ed6:	a8 89       	ldd	r26, Y+16	; 0x10
    3ed8:	b9 89       	ldd	r27, Y+17	; 0x11
    3eda:	8f 3f       	cpi	r24, 0xFF	; 255
    3edc:	2f ef       	ldi	r18, 0xFF	; 255
    3ede:	92 07       	cpc	r25, r18
    3ee0:	2f ef       	ldi	r18, 0xFF	; 255
    3ee2:	a2 07       	cpc	r26, r18
    3ee4:	2f ef       	ldi	r18, 0xFF	; 255
    3ee6:	b2 07       	cpc	r27, r18
    3ee8:	51 f0       	breq	.+20     	; 0x3efe <create_chain+0x188>
    3eea:	01 97       	sbiw	r24, 0x01	; 1
    3eec:	a1 09       	sbc	r26, r1
    3eee:	b1 09       	sbc	r27, r1
    3ef0:	8e 87       	std	Y+14, r24	; 0x0e
    3ef2:	9f 87       	std	Y+15, r25	; 0x0f
    3ef4:	a8 8b       	std	Y+16, r26	; 0x10
    3ef6:	b9 8b       	std	Y+17, r27	; 0x11
    3ef8:	8d 81       	ldd	r24, Y+5	; 0x05
    3efa:	81 60       	ori	r24, 0x01	; 1
    3efc:	8d 83       	std	Y+5, r24	; 0x05
    3efe:	a7 01       	movw	r20, r14
    3f00:	96 01       	movw	r18, r12
    3f02:	10 c0       	rjmp	.+32     	; 0x3f24 <create_chain+0x1ae>
    3f04:	81 30       	cpi	r24, 0x01	; 1
    3f06:	29 f0       	breq	.+10     	; 0x3f12 <create_chain+0x19c>
    3f08:	21 e0       	ldi	r18, 0x01	; 1
    3f0a:	30 e0       	ldi	r19, 0x00	; 0
    3f0c:	40 e0       	ldi	r20, 0x00	; 0
    3f0e:	50 e0       	ldi	r21, 0x00	; 0
    3f10:	09 c0       	rjmp	.+18     	; 0x3f24 <create_chain+0x1ae>
    3f12:	2f ef       	ldi	r18, 0xFF	; 255
    3f14:	3f ef       	ldi	r19, 0xFF	; 255
    3f16:	4f ef       	ldi	r20, 0xFF	; 255
    3f18:	5f ef       	ldi	r21, 0xFF	; 255
    3f1a:	04 c0       	rjmp	.+8      	; 0x3f24 <create_chain+0x1ae>
    3f1c:	20 e0       	ldi	r18, 0x00	; 0
    3f1e:	30 e0       	ldi	r19, 0x00	; 0
    3f20:	40 e0       	ldi	r20, 0x00	; 0
    3f22:	50 e0       	ldi	r21, 0x00	; 0
    3f24:	b9 01       	movw	r22, r18
    3f26:	ca 01       	movw	r24, r20
    3f28:	df 91       	pop	r29
    3f2a:	cf 91       	pop	r28
    3f2c:	1f 91       	pop	r17
    3f2e:	0f 91       	pop	r16
    3f30:	ff 90       	pop	r15
    3f32:	ef 90       	pop	r14
    3f34:	df 90       	pop	r13
    3f36:	cf 90       	pop	r12
    3f38:	bf 90       	pop	r11
    3f3a:	af 90       	pop	r10
    3f3c:	9f 90       	pop	r9
    3f3e:	8f 90       	pop	r8
    3f40:	7f 90       	pop	r7
    3f42:	6f 90       	pop	r6
    3f44:	5f 90       	pop	r5
    3f46:	4f 90       	pop	r4
    3f48:	08 95       	ret

00003f4a <remove_chain>:
    3f4a:	af 92       	push	r10
    3f4c:	bf 92       	push	r11
    3f4e:	cf 92       	push	r12
    3f50:	df 92       	push	r13
    3f52:	ef 92       	push	r14
    3f54:	ff 92       	push	r15
    3f56:	0f 93       	push	r16
    3f58:	1f 93       	push	r17
    3f5a:	cf 93       	push	r28
    3f5c:	df 93       	push	r29
    3f5e:	ec 01       	movw	r28, r24
    3f60:	7a 01       	movw	r14, r20
    3f62:	8b 01       	movw	r16, r22
    3f64:	42 30       	cpi	r20, 0x02	; 2
    3f66:	51 05       	cpc	r21, r1
    3f68:	61 05       	cpc	r22, r1
    3f6a:	71 05       	cpc	r23, r1
    3f6c:	08 f4       	brcc	.+2      	; 0x3f70 <remove_chain+0x26>
    3f6e:	57 c0       	rjmp	.+174    	; 0x401e <remove_chain+0xd4>
    3f70:	8a 89       	ldd	r24, Y+18	; 0x12
    3f72:	9b 89       	ldd	r25, Y+19	; 0x13
    3f74:	ac 89       	ldd	r26, Y+20	; 0x14
    3f76:	bd 89       	ldd	r27, Y+21	; 0x15
    3f78:	48 17       	cp	r20, r24
    3f7a:	59 07       	cpc	r21, r25
    3f7c:	6a 07       	cpc	r22, r26
    3f7e:	7b 07       	cpc	r23, r27
    3f80:	08 f4       	brcc	.+2      	; 0x3f84 <remove_chain+0x3a>
    3f82:	42 c0       	rjmp	.+132    	; 0x4008 <remove_chain+0xbe>
    3f84:	4c c0       	rjmp	.+152    	; 0x401e <remove_chain+0xd4>
    3f86:	ce 01       	movw	r24, r28
    3f88:	b8 01       	movw	r22, r16
    3f8a:	a7 01       	movw	r20, r14
    3f8c:	0e 94 f3 1c 	call	0x39e6	; 0x39e6 <get_fat>
    3f90:	5b 01       	movw	r10, r22
    3f92:	6c 01       	movw	r12, r24
    3f94:	61 15       	cp	r22, r1
    3f96:	71 05       	cpc	r23, r1
    3f98:	81 05       	cpc	r24, r1
    3f9a:	91 05       	cpc	r25, r1
    3f9c:	09 f4       	brne	.+2      	; 0x3fa0 <remove_chain+0x56>
    3f9e:	41 c0       	rjmp	.+130    	; 0x4022 <remove_chain+0xd8>
    3fa0:	81 e0       	ldi	r24, 0x01	; 1
    3fa2:	a8 16       	cp	r10, r24
    3fa4:	b1 04       	cpc	r11, r1
    3fa6:	c1 04       	cpc	r12, r1
    3fa8:	d1 04       	cpc	r13, r1
    3faa:	c9 f1       	breq	.+114    	; 0x401e <remove_chain+0xd4>
    3fac:	2f ef       	ldi	r18, 0xFF	; 255
    3fae:	a2 16       	cp	r10, r18
    3fb0:	2f ef       	ldi	r18, 0xFF	; 255
    3fb2:	b2 06       	cpc	r11, r18
    3fb4:	2f ef       	ldi	r18, 0xFF	; 255
    3fb6:	c2 06       	cpc	r12, r18
    3fb8:	2f ef       	ldi	r18, 0xFF	; 255
    3fba:	d2 06       	cpc	r13, r18
    3fbc:	11 f4       	brne	.+4      	; 0x3fc2 <remove_chain+0x78>
    3fbe:	81 e0       	ldi	r24, 0x01	; 1
    3fc0:	31 c0       	rjmp	.+98     	; 0x4024 <remove_chain+0xda>
    3fc2:	ce 01       	movw	r24, r28
    3fc4:	b8 01       	movw	r22, r16
    3fc6:	a7 01       	movw	r20, r14
    3fc8:	00 e0       	ldi	r16, 0x00	; 0
    3fca:	10 e0       	ldi	r17, 0x00	; 0
    3fcc:	20 e0       	ldi	r18, 0x00	; 0
    3fce:	30 e0       	ldi	r19, 0x00	; 0
    3fd0:	0e 94 f8 1b 	call	0x37f0	; 0x37f0 <put_fat>
    3fd4:	88 23       	and	r24, r24
    3fd6:	31 f5       	brne	.+76     	; 0x4024 <remove_chain+0xda>
    3fd8:	8e 85       	ldd	r24, Y+14	; 0x0e
    3fda:	9f 85       	ldd	r25, Y+15	; 0x0f
    3fdc:	a8 89       	ldd	r26, Y+16	; 0x10
    3fde:	b9 89       	ldd	r27, Y+17	; 0x11
    3fe0:	8f 3f       	cpi	r24, 0xFF	; 255
    3fe2:	2f ef       	ldi	r18, 0xFF	; 255
    3fe4:	92 07       	cpc	r25, r18
    3fe6:	2f ef       	ldi	r18, 0xFF	; 255
    3fe8:	a2 07       	cpc	r26, r18
    3fea:	2f ef       	ldi	r18, 0xFF	; 255
    3fec:	b2 07       	cpc	r27, r18
    3fee:	51 f0       	breq	.+20     	; 0x4004 <remove_chain+0xba>
    3ff0:	01 96       	adiw	r24, 0x01	; 1
    3ff2:	a1 1d       	adc	r26, r1
    3ff4:	b1 1d       	adc	r27, r1
    3ff6:	8e 87       	std	Y+14, r24	; 0x0e
    3ff8:	9f 87       	std	Y+15, r25	; 0x0f
    3ffa:	a8 8b       	std	Y+16, r26	; 0x10
    3ffc:	b9 8b       	std	Y+17, r27	; 0x11
    3ffe:	8d 81       	ldd	r24, Y+5	; 0x05
    4000:	81 60       	ori	r24, 0x01	; 1
    4002:	8d 83       	std	Y+5, r24	; 0x05
    4004:	86 01       	movw	r16, r12
    4006:	75 01       	movw	r14, r10
    4008:	8a 89       	ldd	r24, Y+18	; 0x12
    400a:	9b 89       	ldd	r25, Y+19	; 0x13
    400c:	ac 89       	ldd	r26, Y+20	; 0x14
    400e:	bd 89       	ldd	r27, Y+21	; 0x15
    4010:	e8 16       	cp	r14, r24
    4012:	f9 06       	cpc	r15, r25
    4014:	0a 07       	cpc	r16, r26
    4016:	1b 07       	cpc	r17, r27
    4018:	08 f4       	brcc	.+2      	; 0x401c <remove_chain+0xd2>
    401a:	b5 cf       	rjmp	.-150    	; 0x3f86 <remove_chain+0x3c>
    401c:	02 c0       	rjmp	.+4      	; 0x4022 <remove_chain+0xd8>
    401e:	82 e0       	ldi	r24, 0x02	; 2
    4020:	01 c0       	rjmp	.+2      	; 0x4024 <remove_chain+0xda>
    4022:	80 e0       	ldi	r24, 0x00	; 0
    4024:	df 91       	pop	r29
    4026:	cf 91       	pop	r28
    4028:	1f 91       	pop	r17
    402a:	0f 91       	pop	r16
    402c:	ff 90       	pop	r15
    402e:	ef 90       	pop	r14
    4030:	df 90       	pop	r13
    4032:	cf 90       	pop	r12
    4034:	bf 90       	pop	r11
    4036:	af 90       	pop	r10
    4038:	08 95       	ret

0000403a <dir_remove>:
    403a:	cf 93       	push	r28
    403c:	df 93       	push	r29
    403e:	ec 01       	movw	r28, r24
    4040:	6c 81       	ldd	r22, Y+4	; 0x04
    4042:	7d 81       	ldd	r23, Y+5	; 0x05
    4044:	0e 94 c6 1d 	call	0x3b8c	; 0x3b8c <dir_sdi>
    4048:	28 2f       	mov	r18, r24
    404a:	88 23       	and	r24, r24
    404c:	f1 f4       	brne	.+60     	; 0x408a <dir_remove+0x50>
    404e:	4e 85       	ldd	r20, Y+14	; 0x0e
    4050:	5f 85       	ldd	r21, Y+15	; 0x0f
    4052:	68 89       	ldd	r22, Y+16	; 0x10
    4054:	79 89       	ldd	r23, Y+17	; 0x11
    4056:	88 81       	ld	r24, Y
    4058:	99 81       	ldd	r25, Y+1	; 0x01
    405a:	0e 94 7b 18 	call	0x30f6	; 0x30f6 <move_window>
    405e:	28 2f       	mov	r18, r24
    4060:	88 23       	and	r24, r24
    4062:	99 f4       	brne	.+38     	; 0x408a <dir_remove+0x50>
    4064:	ea 89       	ldd	r30, Y+18	; 0x12
    4066:	fb 89       	ldd	r31, Y+19	; 0x13
    4068:	80 e2       	ldi	r24, 0x20	; 32
    406a:	90 e0       	ldi	r25, 0x00	; 0
    406c:	01 c0       	rjmp	.+2      	; 0x4070 <dir_remove+0x36>
    406e:	11 92       	st	Z+, r1
    4070:	01 97       	sbiw	r24, 0x01	; 1
    4072:	3f ef       	ldi	r19, 0xFF	; 255
    4074:	8f 3f       	cpi	r24, 0xFF	; 255
    4076:	93 07       	cpc	r25, r19
    4078:	d1 f7       	brne	.-12     	; 0x406e <dir_remove+0x34>
    407a:	ea 89       	ldd	r30, Y+18	; 0x12
    407c:	fb 89       	ldd	r31, Y+19	; 0x13
    407e:	85 ee       	ldi	r24, 0xE5	; 229
    4080:	80 83       	st	Z, r24
    4082:	e8 81       	ld	r30, Y
    4084:	f9 81       	ldd	r31, Y+1	; 0x01
    4086:	81 e0       	ldi	r24, 0x01	; 1
    4088:	84 83       	std	Z+4, r24	; 0x04
    408a:	82 2f       	mov	r24, r18
    408c:	df 91       	pop	r29
    408e:	cf 91       	pop	r28
    4090:	08 95       	ret

00004092 <f_getfree>:
    4092:	2f 92       	push	r2
    4094:	3f 92       	push	r3
    4096:	4f 92       	push	r4
    4098:	5f 92       	push	r5
    409a:	6f 92       	push	r6
    409c:	7f 92       	push	r7
    409e:	8f 92       	push	r8
    40a0:	9f 92       	push	r9
    40a2:	af 92       	push	r10
    40a4:	bf 92       	push	r11
    40a6:	cf 92       	push	r12
    40a8:	df 92       	push	r13
    40aa:	ef 92       	push	r14
    40ac:	ff 92       	push	r15
    40ae:	0f 93       	push	r16
    40b0:	1f 93       	push	r17
    40b2:	df 93       	push	r29
    40b4:	cf 93       	push	r28
    40b6:	00 d0       	rcall	.+0      	; 0x40b8 <f_getfree+0x26>
    40b8:	00 d0       	rcall	.+0      	; 0x40ba <f_getfree+0x28>
    40ba:	0f 92       	push	r0
    40bc:	cd b7       	in	r28, 0x3d	; 61
    40be:	de b7       	in	r29, 0x3e	; 62
    40c0:	9a 83       	std	Y+2, r25	; 0x02
    40c2:	89 83       	std	Y+1, r24	; 0x01
    40c4:	7d 83       	std	Y+5, r23	; 0x05
    40c6:	6c 83       	std	Y+4, r22	; 0x04
    40c8:	8a 01       	movw	r16, r20
    40ca:	ca 01       	movw	r24, r20
    40cc:	be 01       	movw	r22, r28
    40ce:	6f 5f       	subi	r22, 0xFF	; 255
    40d0:	7f 4f       	sbci	r23, 0xFF	; 255
    40d2:	40 e0       	ldi	r20, 0x00	; 0
    40d4:	0e 94 03 19 	call	0x3206	; 0x3206 <find_volume>
    40d8:	68 2f       	mov	r22, r24
    40da:	f8 01       	movw	r30, r16
    40dc:	80 80       	ld	r8, Z
    40de:	91 80       	ldd	r9, Z+1	; 0x01
    40e0:	88 23       	and	r24, r24
    40e2:	09 f0       	breq	.+2      	; 0x40e6 <f_getfree+0x54>
    40e4:	b6 c0       	rjmp	.+364    	; 0x4252 <f_getfree+0x1c0>
    40e6:	f4 01       	movw	r30, r8
    40e8:	26 85       	ldd	r18, Z+14	; 0x0e
    40ea:	37 85       	ldd	r19, Z+15	; 0x0f
    40ec:	40 89       	ldd	r20, Z+16	; 0x10
    40ee:	51 89       	ldd	r21, Z+17	; 0x11
    40f0:	e2 88       	ldd	r14, Z+18	; 0x12
    40f2:	f3 88       	ldd	r15, Z+19	; 0x13
    40f4:	04 89       	ldd	r16, Z+20	; 0x14
    40f6:	15 89       	ldd	r17, Z+21	; 0x15
    40f8:	d8 01       	movw	r26, r16
    40fa:	c7 01       	movw	r24, r14
    40fc:	02 97       	sbiw	r24, 0x02	; 2
    40fe:	a1 09       	sbc	r26, r1
    4100:	b1 09       	sbc	r27, r1
    4102:	82 17       	cp	r24, r18
    4104:	93 07       	cpc	r25, r19
    4106:	a4 07       	cpc	r26, r20
    4108:	b5 07       	cpc	r27, r21
    410a:	38 f0       	brcs	.+14     	; 0x411a <f_getfree+0x88>
    410c:	ec 81       	ldd	r30, Y+4	; 0x04
    410e:	fd 81       	ldd	r31, Y+5	; 0x05
    4110:	20 83       	st	Z, r18
    4112:	31 83       	std	Z+1, r19	; 0x01
    4114:	42 83       	std	Z+2, r20	; 0x02
    4116:	53 83       	std	Z+3, r21	; 0x03
    4118:	9c c0       	rjmp	.+312    	; 0x4252 <f_getfree+0x1c0>
    411a:	f4 01       	movw	r30, r8
    411c:	f0 81       	ld	r31, Z
    411e:	fb 83       	std	Y+3, r31	; 0x03
    4120:	f1 30       	cpi	r31, 0x01	; 1
    4122:	c1 f5       	brne	.+112    	; 0x4194 <f_getfree+0x102>
    4124:	aa 24       	eor	r10, r10
    4126:	bb 24       	eor	r11, r11
    4128:	65 01       	movw	r12, r10
    412a:	82 e0       	ldi	r24, 0x02	; 2
    412c:	e8 2e       	mov	r14, r24
    412e:	f1 2c       	mov	r15, r1
    4130:	01 2d       	mov	r16, r1
    4132:	11 2d       	mov	r17, r1
    4134:	c4 01       	movw	r24, r8
    4136:	b8 01       	movw	r22, r16
    4138:	a7 01       	movw	r20, r14
    413a:	0e 94 f3 1c 	call	0x39e6	; 0x39e6 <get_fat>
    413e:	6f 3f       	cpi	r22, 0xFF	; 255
    4140:	2f ef       	ldi	r18, 0xFF	; 255
    4142:	72 07       	cpc	r23, r18
    4144:	2f ef       	ldi	r18, 0xFF	; 255
    4146:	82 07       	cpc	r24, r18
    4148:	2f ef       	ldi	r18, 0xFF	; 255
    414a:	92 07       	cpc	r25, r18
    414c:	11 f4       	brne	.+4      	; 0x4152 <f_getfree+0xc0>
    414e:	91 e0       	ldi	r25, 0x01	; 1
    4150:	71 c0       	rjmp	.+226    	; 0x4234 <f_getfree+0x1a2>
    4152:	61 30       	cpi	r22, 0x01	; 1
    4154:	71 05       	cpc	r23, r1
    4156:	81 05       	cpc	r24, r1
    4158:	91 05       	cpc	r25, r1
    415a:	11 f4       	brne	.+4      	; 0x4160 <f_getfree+0xce>
    415c:	92 e0       	ldi	r25, 0x02	; 2
    415e:	6a c0       	rjmp	.+212    	; 0x4234 <f_getfree+0x1a2>
    4160:	61 15       	cp	r22, r1
    4162:	71 05       	cpc	r23, r1
    4164:	81 05       	cpc	r24, r1
    4166:	91 05       	cpc	r25, r1
    4168:	29 f4       	brne	.+10     	; 0x4174 <f_getfree+0xe2>
    416a:	08 94       	sec
    416c:	a1 1c       	adc	r10, r1
    416e:	b1 1c       	adc	r11, r1
    4170:	c1 1c       	adc	r12, r1
    4172:	d1 1c       	adc	r13, r1
    4174:	08 94       	sec
    4176:	e1 1c       	adc	r14, r1
    4178:	f1 1c       	adc	r15, r1
    417a:	01 1d       	adc	r16, r1
    417c:	11 1d       	adc	r17, r1
    417e:	f4 01       	movw	r30, r8
    4180:	82 89       	ldd	r24, Z+18	; 0x12
    4182:	93 89       	ldd	r25, Z+19	; 0x13
    4184:	a4 89       	ldd	r26, Z+20	; 0x14
    4186:	b5 89       	ldd	r27, Z+21	; 0x15
    4188:	e8 16       	cp	r14, r24
    418a:	f9 06       	cpc	r15, r25
    418c:	0a 07       	cpc	r16, r26
    418e:	1b 07       	cpc	r17, r27
    4190:	88 f2       	brcs	.-94     	; 0x4134 <f_getfree+0xa2>
    4192:	4f c0       	rjmp	.+158    	; 0x4232 <f_getfree+0x1a0>
    4194:	f4 01       	movw	r30, r8
    4196:	46 8c       	ldd	r4, Z+30	; 0x1e
    4198:	57 8c       	ldd	r5, Z+31	; 0x1f
    419a:	60 a0       	ldd	r6, Z+32	; 0x20
    419c:	71 a0       	ldd	r7, Z+33	; 0x21
    419e:	be e2       	ldi	r27, 0x2E	; 46
    41a0:	2b 2e       	mov	r2, r27
    41a2:	31 2c       	mov	r3, r1
    41a4:	28 0c       	add	r2, r8
    41a6:	39 1c       	adc	r3, r9
    41a8:	20 e0       	ldi	r18, 0x00	; 0
    41aa:	30 e0       	ldi	r19, 0x00	; 0
    41ac:	e0 e0       	ldi	r30, 0x00	; 0
    41ae:	f0 e0       	ldi	r31, 0x00	; 0
    41b0:	aa 24       	eor	r10, r10
    41b2:	bb 24       	eor	r11, r11
    41b4:	65 01       	movw	r12, r10
    41b6:	21 15       	cp	r18, r1
    41b8:	31 05       	cpc	r19, r1
    41ba:	81 f4       	brne	.+32     	; 0x41dc <f_getfree+0x14a>
    41bc:	c4 01       	movw	r24, r8
    41be:	b3 01       	movw	r22, r6
    41c0:	a2 01       	movw	r20, r4
    41c2:	0e 94 7b 18 	call	0x30f6	; 0x30f6 <move_window>
    41c6:	98 2f       	mov	r25, r24
    41c8:	88 23       	and	r24, r24
    41ca:	a1 f5       	brne	.+104    	; 0x4234 <f_getfree+0x1a2>
    41cc:	08 94       	sec
    41ce:	41 1c       	adc	r4, r1
    41d0:	51 1c       	adc	r5, r1
    41d2:	61 1c       	adc	r6, r1
    41d4:	71 1c       	adc	r7, r1
    41d6:	f1 01       	movw	r30, r2
    41d8:	20 e0       	ldi	r18, 0x00	; 0
    41da:	32 e0       	ldi	r19, 0x02	; 2
    41dc:	8b 81       	ldd	r24, Y+3	; 0x03
    41de:	82 30       	cpi	r24, 0x02	; 2
    41e0:	69 f4       	brne	.+26     	; 0x41fc <f_getfree+0x16a>
    41e2:	80 81       	ld	r24, Z
    41e4:	91 81       	ldd	r25, Z+1	; 0x01
    41e6:	89 2b       	or	r24, r25
    41e8:	29 f4       	brne	.+10     	; 0x41f4 <f_getfree+0x162>
    41ea:	08 94       	sec
    41ec:	a1 1c       	adc	r10, r1
    41ee:	b1 1c       	adc	r11, r1
    41f0:	c1 1c       	adc	r12, r1
    41f2:	d1 1c       	adc	r13, r1
    41f4:	32 96       	adiw	r30, 0x02	; 2
    41f6:	22 50       	subi	r18, 0x02	; 2
    41f8:	30 40       	sbci	r19, 0x00	; 0
    41fa:	11 c0       	rjmp	.+34     	; 0x421e <f_getfree+0x18c>
    41fc:	80 81       	ld	r24, Z
    41fe:	91 81       	ldd	r25, Z+1	; 0x01
    4200:	a2 81       	ldd	r26, Z+2	; 0x02
    4202:	b3 81       	ldd	r27, Z+3	; 0x03
    4204:	bf 70       	andi	r27, 0x0F	; 15
    4206:	00 97       	sbiw	r24, 0x00	; 0
    4208:	a1 05       	cpc	r26, r1
    420a:	b1 05       	cpc	r27, r1
    420c:	29 f4       	brne	.+10     	; 0x4218 <f_getfree+0x186>
    420e:	08 94       	sec
    4210:	a1 1c       	adc	r10, r1
    4212:	b1 1c       	adc	r11, r1
    4214:	c1 1c       	adc	r12, r1
    4216:	d1 1c       	adc	r13, r1
    4218:	34 96       	adiw	r30, 0x04	; 4
    421a:	24 50       	subi	r18, 0x04	; 4
    421c:	30 40       	sbci	r19, 0x00	; 0
    421e:	08 94       	sec
    4220:	e1 08       	sbc	r14, r1
    4222:	f1 08       	sbc	r15, r1
    4224:	01 09       	sbc	r16, r1
    4226:	11 09       	sbc	r17, r1
    4228:	e1 14       	cp	r14, r1
    422a:	f1 04       	cpc	r15, r1
    422c:	01 05       	cpc	r16, r1
    422e:	11 05       	cpc	r17, r1
    4230:	11 f6       	brne	.-124    	; 0x41b6 <f_getfree+0x124>
    4232:	90 e0       	ldi	r25, 0x00	; 0
    4234:	f4 01       	movw	r30, r8
    4236:	a6 86       	std	Z+14, r10	; 0x0e
    4238:	b7 86       	std	Z+15, r11	; 0x0f
    423a:	c0 8a       	std	Z+16, r12	; 0x10
    423c:	d1 8a       	std	Z+17, r13	; 0x11
    423e:	85 81       	ldd	r24, Z+5	; 0x05
    4240:	81 60       	ori	r24, 0x01	; 1
    4242:	85 83       	std	Z+5, r24	; 0x05
    4244:	ec 81       	ldd	r30, Y+4	; 0x04
    4246:	fd 81       	ldd	r31, Y+5	; 0x05
    4248:	a0 82       	st	Z, r10
    424a:	b1 82       	std	Z+1, r11	; 0x01
    424c:	c2 82       	std	Z+2, r12	; 0x02
    424e:	d3 82       	std	Z+3, r13	; 0x03
    4250:	69 2f       	mov	r22, r25
    4252:	86 2f       	mov	r24, r22
    4254:	0f 90       	pop	r0
    4256:	0f 90       	pop	r0
    4258:	0f 90       	pop	r0
    425a:	0f 90       	pop	r0
    425c:	0f 90       	pop	r0
    425e:	cf 91       	pop	r28
    4260:	df 91       	pop	r29
    4262:	1f 91       	pop	r17
    4264:	0f 91       	pop	r16
    4266:	ff 90       	pop	r15
    4268:	ef 90       	pop	r14
    426a:	df 90       	pop	r13
    426c:	cf 90       	pop	r12
    426e:	bf 90       	pop	r11
    4270:	af 90       	pop	r10
    4272:	9f 90       	pop	r9
    4274:	8f 90       	pop	r8
    4276:	7f 90       	pop	r7
    4278:	6f 90       	pop	r6
    427a:	5f 90       	pop	r5
    427c:	4f 90       	pop	r4
    427e:	3f 90       	pop	r3
    4280:	2f 90       	pop	r2
    4282:	08 95       	ret

00004284 <dir_next>:
    4284:	4f 92       	push	r4
    4286:	5f 92       	push	r5
    4288:	6f 92       	push	r6
    428a:	7f 92       	push	r7
    428c:	8f 92       	push	r8
    428e:	9f 92       	push	r9
    4290:	af 92       	push	r10
    4292:	bf 92       	push	r11
    4294:	cf 92       	push	r12
    4296:	df 92       	push	r13
    4298:	ef 92       	push	r14
    429a:	ff 92       	push	r15
    429c:	0f 93       	push	r16
    429e:	1f 93       	push	r17
    42a0:	cf 93       	push	r28
    42a2:	df 93       	push	r29
    42a4:	ec 01       	movw	r28, r24
    42a6:	6b 01       	movw	r12, r22
    42a8:	6c 80       	ldd	r6, Y+4	; 0x04
    42aa:	7d 80       	ldd	r7, Y+5	; 0x05
    42ac:	08 94       	sec
    42ae:	61 1c       	adc	r6, r1
    42b0:	71 1c       	adc	r7, r1
    42b2:	61 14       	cp	r6, r1
    42b4:	71 04       	cpc	r7, r1
    42b6:	09 f4       	brne	.+2      	; 0x42ba <dir_next+0x36>
    42b8:	4c c1       	rjmp	.+664    	; 0x4552 <dir_next+0x2ce>
    42ba:	8e 85       	ldd	r24, Y+14	; 0x0e
    42bc:	9f 85       	ldd	r25, Y+15	; 0x0f
    42be:	a8 89       	ldd	r26, Y+16	; 0x10
    42c0:	b9 89       	ldd	r27, Y+17	; 0x11
    42c2:	00 97       	sbiw	r24, 0x00	; 0
    42c4:	a1 05       	cpc	r26, r1
    42c6:	b1 05       	cpc	r27, r1
    42c8:	09 f4       	brne	.+2      	; 0x42cc <dir_next+0x48>
    42ca:	43 c1       	rjmp	.+646    	; 0x4552 <dir_next+0x2ce>
    42cc:	1f e0       	ldi	r17, 0x0F	; 15
    42ce:	41 2e       	mov	r4, r17
    42d0:	51 2c       	mov	r5, r1
    42d2:	46 20       	and	r4, r6
    42d4:	57 20       	and	r5, r7
    42d6:	41 14       	cp	r4, r1
    42d8:	51 04       	cpc	r5, r1
    42da:	09 f0       	breq	.+2      	; 0x42de <dir_next+0x5a>
    42dc:	27 c1       	rjmp	.+590    	; 0x452c <dir_next+0x2a8>
    42de:	01 96       	adiw	r24, 0x01	; 1
    42e0:	a1 1d       	adc	r26, r1
    42e2:	b1 1d       	adc	r27, r1
    42e4:	8e 87       	std	Y+14, r24	; 0x0e
    42e6:	9f 87       	std	Y+15, r25	; 0x0f
    42e8:	a8 8b       	std	Y+16, r26	; 0x10
    42ea:	b9 8b       	std	Y+17, r27	; 0x11
    42ec:	4a 85       	ldd	r20, Y+10	; 0x0a
    42ee:	5b 85       	ldd	r21, Y+11	; 0x0b
    42f0:	6c 85       	ldd	r22, Y+12	; 0x0c
    42f2:	7d 85       	ldd	r23, Y+13	; 0x0d
    42f4:	e8 81       	ld	r30, Y
    42f6:	f9 81       	ldd	r31, Y+1	; 0x01
    42f8:	41 15       	cp	r20, r1
    42fa:	51 05       	cpc	r21, r1
    42fc:	61 05       	cpc	r22, r1
    42fe:	71 05       	cpc	r23, r1
    4300:	39 f4       	brne	.+14     	; 0x4310 <dir_next+0x8c>
    4302:	80 85       	ldd	r24, Z+8	; 0x08
    4304:	91 85       	ldd	r25, Z+9	; 0x09
    4306:	68 16       	cp	r6, r24
    4308:	79 06       	cpc	r7, r25
    430a:	08 f4       	brcc	.+2      	; 0x430e <dir_next+0x8a>
    430c:	0f c1       	rjmp	.+542    	; 0x452c <dir_next+0x2a8>
    430e:	21 c1       	rjmp	.+578    	; 0x4552 <dir_next+0x2ce>
    4310:	82 81       	ldd	r24, Z+2	; 0x02
    4312:	90 e0       	ldi	r25, 0x00	; 0
    4314:	01 97       	sbiw	r24, 0x01	; 1
    4316:	93 01       	movw	r18, r6
    4318:	a4 e0       	ldi	r26, 0x04	; 4
    431a:	36 95       	lsr	r19
    431c:	27 95       	ror	r18
    431e:	aa 95       	dec	r26
    4320:	e1 f7       	brne	.-8      	; 0x431a <dir_next+0x96>
    4322:	82 23       	and	r24, r18
    4324:	93 23       	and	r25, r19
    4326:	89 2b       	or	r24, r25
    4328:	09 f0       	breq	.+2      	; 0x432c <dir_next+0xa8>
    432a:	00 c1       	rjmp	.+512    	; 0x452c <dir_next+0x2a8>
    432c:	cf 01       	movw	r24, r30
    432e:	0e 94 f3 1c 	call	0x39e6	; 0x39e6 <get_fat>
    4332:	7b 01       	movw	r14, r22
    4334:	8c 01       	movw	r16, r24
    4336:	62 30       	cpi	r22, 0x02	; 2
    4338:	71 05       	cpc	r23, r1
    433a:	81 05       	cpc	r24, r1
    433c:	91 05       	cpc	r25, r1
    433e:	08 f4       	brcc	.+2      	; 0x4342 <dir_next+0xbe>
    4340:	0a c1       	rjmp	.+532    	; 0x4556 <dir_next+0x2d2>
    4342:	8f ef       	ldi	r24, 0xFF	; 255
    4344:	e8 16       	cp	r14, r24
    4346:	8f ef       	ldi	r24, 0xFF	; 255
    4348:	f8 06       	cpc	r15, r24
    434a:	8f ef       	ldi	r24, 0xFF	; 255
    434c:	08 07       	cpc	r16, r24
    434e:	8f ef       	ldi	r24, 0xFF	; 255
    4350:	18 07       	cpc	r17, r24
    4352:	09 f4       	brne	.+2      	; 0x4356 <dir_next+0xd2>
    4354:	02 c1       	rjmp	.+516    	; 0x455a <dir_next+0x2d6>
    4356:	e8 81       	ld	r30, Y
    4358:	f9 81       	ldd	r31, Y+1	; 0x01
    435a:	82 89       	ldd	r24, Z+18	; 0x12
    435c:	93 89       	ldd	r25, Z+19	; 0x13
    435e:	a4 89       	ldd	r26, Z+20	; 0x14
    4360:	b5 89       	ldd	r27, Z+21	; 0x15
    4362:	e8 16       	cp	r14, r24
    4364:	f9 06       	cpc	r15, r25
    4366:	0a 07       	cpc	r16, r26
    4368:	1b 07       	cpc	r17, r27
    436a:	08 f4       	brcc	.+2      	; 0x436e <dir_next+0xea>
    436c:	a6 c0       	rjmp	.+332    	; 0x44ba <dir_next+0x236>
    436e:	cd 28       	or	r12, r13
    4370:	09 f4       	brne	.+2      	; 0x4374 <dir_next+0xf0>
    4372:	ef c0       	rjmp	.+478    	; 0x4552 <dir_next+0x2ce>
    4374:	4a 85       	ldd	r20, Y+10	; 0x0a
    4376:	5b 85       	ldd	r21, Y+11	; 0x0b
    4378:	6c 85       	ldd	r22, Y+12	; 0x0c
    437a:	7d 85       	ldd	r23, Y+13	; 0x0d
    437c:	cf 01       	movw	r24, r30
    437e:	0e 94 bb 1e 	call	0x3d76	; 0x3d76 <create_chain>
    4382:	7b 01       	movw	r14, r22
    4384:	8c 01       	movw	r16, r24
    4386:	61 15       	cp	r22, r1
    4388:	71 05       	cpc	r23, r1
    438a:	81 05       	cpc	r24, r1
    438c:	91 05       	cpc	r25, r1
    438e:	11 f4       	brne	.+4      	; 0x4394 <dir_next+0x110>
    4390:	87 e0       	ldi	r24, 0x07	; 7
    4392:	e4 c0       	rjmp	.+456    	; 0x455c <dir_next+0x2d8>
    4394:	91 e0       	ldi	r25, 0x01	; 1
    4396:	e9 16       	cp	r14, r25
    4398:	f1 04       	cpc	r15, r1
    439a:	01 05       	cpc	r16, r1
    439c:	11 05       	cpc	r17, r1
    439e:	09 f4       	brne	.+2      	; 0x43a2 <dir_next+0x11e>
    43a0:	da c0       	rjmp	.+436    	; 0x4556 <dir_next+0x2d2>
    43a2:	af ef       	ldi	r26, 0xFF	; 255
    43a4:	ea 16       	cp	r14, r26
    43a6:	af ef       	ldi	r26, 0xFF	; 255
    43a8:	fa 06       	cpc	r15, r26
    43aa:	af ef       	ldi	r26, 0xFF	; 255
    43ac:	0a 07       	cpc	r16, r26
    43ae:	af ef       	ldi	r26, 0xFF	; 255
    43b0:	1a 07       	cpc	r17, r26
    43b2:	09 f4       	brne	.+2      	; 0x43b6 <dir_next+0x132>
    43b4:	d2 c0       	rjmp	.+420    	; 0x455a <dir_next+0x2d6>
    43b6:	88 81       	ld	r24, Y
    43b8:	99 81       	ldd	r25, Y+1	; 0x01
    43ba:	0e 94 18 18 	call	0x3030	; 0x3030 <sync_window>
    43be:	88 23       	and	r24, r24
    43c0:	09 f0       	breq	.+2      	; 0x43c4 <dir_next+0x140>
    43c2:	cb c0       	rjmp	.+406    	; 0x455a <dir_next+0x2d6>
    43c4:	e8 81       	ld	r30, Y
    43c6:	f9 81       	ldd	r31, Y+1	; 0x01
    43c8:	be 96       	adiw	r30, 0x2e	; 46
    43ca:	80 e0       	ldi	r24, 0x00	; 0
    43cc:	92 e0       	ldi	r25, 0x02	; 2
    43ce:	01 c0       	rjmp	.+2      	; 0x43d2 <dir_next+0x14e>
    43d0:	11 92       	st	Z+, r1
    43d2:	01 97       	sbiw	r24, 0x01	; 1
    43d4:	bf ef       	ldi	r27, 0xFF	; 255
    43d6:	8f 3f       	cpi	r24, 0xFF	; 255
    43d8:	9b 07       	cpc	r25, r27
    43da:	d1 f7       	brne	.-12     	; 0x43d0 <dir_next+0x14c>
    43dc:	88 80       	ld	r8, Y
    43de:	99 80       	ldd	r9, Y+1	; 0x01
    43e0:	2e ef       	ldi	r18, 0xFE	; 254
    43e2:	a2 2e       	mov	r10, r18
    43e4:	2f ef       	ldi	r18, 0xFF	; 255
    43e6:	b2 2e       	mov	r11, r18
    43e8:	2f ef       	ldi	r18, 0xFF	; 255
    43ea:	c2 2e       	mov	r12, r18
    43ec:	2f ef       	ldi	r18, 0xFF	; 255
    43ee:	d2 2e       	mov	r13, r18
    43f0:	ae 0c       	add	r10, r14
    43f2:	bf 1c       	adc	r11, r15
    43f4:	c0 1e       	adc	r12, r16
    43f6:	d1 1e       	adc	r13, r17
    43f8:	f4 01       	movw	r30, r8
    43fa:	82 89       	ldd	r24, Z+18	; 0x12
    43fc:	93 89       	ldd	r25, Z+19	; 0x13
    43fe:	a4 89       	ldd	r26, Z+20	; 0x14
    4400:	b5 89       	ldd	r27, Z+21	; 0x15
    4402:	02 97       	sbiw	r24, 0x02	; 2
    4404:	a1 09       	sbc	r26, r1
    4406:	b1 09       	sbc	r27, r1
    4408:	a8 16       	cp	r10, r24
    440a:	b9 06       	cpc	r11, r25
    440c:	ca 06       	cpc	r12, r26
    440e:	db 06       	cpc	r13, r27
    4410:	28 f0       	brcs	.+10     	; 0x441c <dir_next+0x198>
    4412:	20 e0       	ldi	r18, 0x00	; 0
    4414:	30 e0       	ldi	r19, 0x00	; 0
    4416:	40 e0       	ldi	r20, 0x00	; 0
    4418:	50 e0       	ldi	r21, 0x00	; 0
    441a:	15 c0       	rjmp	.+42     	; 0x4446 <dir_next+0x1c2>
    441c:	d4 01       	movw	r26, r8
    441e:	12 96       	adiw	r26, 0x02	; 2
    4420:	2c 91       	ld	r18, X
    4422:	30 e0       	ldi	r19, 0x00	; 0
    4424:	40 e0       	ldi	r20, 0x00	; 0
    4426:	50 e0       	ldi	r21, 0x00	; 0
    4428:	c6 01       	movw	r24, r12
    442a:	b5 01       	movw	r22, r10
    442c:	0e 94 b2 40 	call	0x8164	; 0x8164 <__mulsi3>
    4430:	9b 01       	movw	r18, r22
    4432:	ac 01       	movw	r20, r24
    4434:	f4 01       	movw	r30, r8
    4436:	86 a1       	ldd	r24, Z+38	; 0x26
    4438:	97 a1       	ldd	r25, Z+39	; 0x27
    443a:	a0 a5       	ldd	r26, Z+40	; 0x28
    443c:	b1 a5       	ldd	r27, Z+41	; 0x29
    443e:	28 0f       	add	r18, r24
    4440:	39 1f       	adc	r19, r25
    4442:	4a 1f       	adc	r20, r26
    4444:	5b 1f       	adc	r21, r27
    4446:	d4 01       	movw	r26, r8
    4448:	9a 96       	adiw	r26, 0x2a	; 42
    444a:	2d 93       	st	X+, r18
    444c:	3d 93       	st	X+, r19
    444e:	4d 93       	st	X+, r20
    4450:	5c 93       	st	X, r21
    4452:	9d 97       	sbiw	r26, 0x2d	; 45
    4454:	cc 24       	eor	r12, r12
    4456:	dd 24       	eor	r13, r13
    4458:	bb 24       	eor	r11, r11
    445a:	b3 94       	inc	r11
    445c:	18 c0       	rjmp	.+48     	; 0x448e <dir_next+0x20a>
    445e:	b4 82       	std	Z+4, r11	; 0x04
    4460:	88 81       	ld	r24, Y
    4462:	99 81       	ldd	r25, Y+1	; 0x01
    4464:	0e 94 18 18 	call	0x3030	; 0x3030 <sync_window>
    4468:	88 23       	and	r24, r24
    446a:	09 f0       	breq	.+2      	; 0x446e <dir_next+0x1ea>
    446c:	76 c0       	rjmp	.+236    	; 0x455a <dir_next+0x2d6>
    446e:	e8 81       	ld	r30, Y
    4470:	f9 81       	ldd	r31, Y+1	; 0x01
    4472:	82 a5       	ldd	r24, Z+42	; 0x2a
    4474:	93 a5       	ldd	r25, Z+43	; 0x2b
    4476:	a4 a5       	ldd	r26, Z+44	; 0x2c
    4478:	b5 a5       	ldd	r27, Z+45	; 0x2d
    447a:	01 96       	adiw	r24, 0x01	; 1
    447c:	a1 1d       	adc	r26, r1
    447e:	b1 1d       	adc	r27, r1
    4480:	82 a7       	std	Z+42, r24	; 0x2a
    4482:	93 a7       	std	Z+43, r25	; 0x2b
    4484:	a4 a7       	std	Z+44, r26	; 0x2c
    4486:	b5 a7       	std	Z+45, r27	; 0x2d
    4488:	08 94       	sec
    448a:	c1 1c       	adc	r12, r1
    448c:	d1 1c       	adc	r13, r1
    448e:	e8 81       	ld	r30, Y
    4490:	f9 81       	ldd	r31, Y+1	; 0x01
    4492:	82 81       	ldd	r24, Z+2	; 0x02
    4494:	90 e0       	ldi	r25, 0x00	; 0
    4496:	c8 16       	cp	r12, r24
    4498:	d9 06       	cpc	r13, r25
    449a:	08 f3       	brcs	.-62     	; 0x445e <dir_next+0x1da>
    449c:	96 01       	movw	r18, r12
    449e:	40 e0       	ldi	r20, 0x00	; 0
    44a0:	50 e0       	ldi	r21, 0x00	; 0
    44a2:	82 a5       	ldd	r24, Z+42	; 0x2a
    44a4:	93 a5       	ldd	r25, Z+43	; 0x2b
    44a6:	a4 a5       	ldd	r26, Z+44	; 0x2c
    44a8:	b5 a5       	ldd	r27, Z+45	; 0x2d
    44aa:	82 1b       	sub	r24, r18
    44ac:	93 0b       	sbc	r25, r19
    44ae:	a4 0b       	sbc	r26, r20
    44b0:	b5 0b       	sbc	r27, r21
    44b2:	82 a7       	std	Z+42, r24	; 0x2a
    44b4:	93 a7       	std	Z+43, r25	; 0x2b
    44b6:	a4 a7       	std	Z+44, r26	; 0x2c
    44b8:	b5 a7       	std	Z+45, r27	; 0x2d
    44ba:	ea 86       	std	Y+10, r14	; 0x0a
    44bc:	fb 86       	std	Y+11, r15	; 0x0b
    44be:	0c 87       	std	Y+12, r16	; 0x0c
    44c0:	1d 87       	std	Y+13, r17	; 0x0d
    44c2:	c8 80       	ld	r12, Y
    44c4:	d9 80       	ldd	r13, Y+1	; 0x01
    44c6:	8e ef       	ldi	r24, 0xFE	; 254
    44c8:	9f ef       	ldi	r25, 0xFF	; 255
    44ca:	af ef       	ldi	r26, 0xFF	; 255
    44cc:	bf ef       	ldi	r27, 0xFF	; 255
    44ce:	e8 0e       	add	r14, r24
    44d0:	f9 1e       	adc	r15, r25
    44d2:	0a 1f       	adc	r16, r26
    44d4:	1b 1f       	adc	r17, r27
    44d6:	f6 01       	movw	r30, r12
    44d8:	82 89       	ldd	r24, Z+18	; 0x12
    44da:	93 89       	ldd	r25, Z+19	; 0x13
    44dc:	a4 89       	ldd	r26, Z+20	; 0x14
    44de:	b5 89       	ldd	r27, Z+21	; 0x15
    44e0:	02 97       	sbiw	r24, 0x02	; 2
    44e2:	a1 09       	sbc	r26, r1
    44e4:	b1 09       	sbc	r27, r1
    44e6:	e8 16       	cp	r14, r24
    44e8:	f9 06       	cpc	r15, r25
    44ea:	0a 07       	cpc	r16, r26
    44ec:	1b 07       	cpc	r17, r27
    44ee:	28 f0       	brcs	.+10     	; 0x44fa <dir_next+0x276>
    44f0:	20 e0       	ldi	r18, 0x00	; 0
    44f2:	30 e0       	ldi	r19, 0x00	; 0
    44f4:	40 e0       	ldi	r20, 0x00	; 0
    44f6:	50 e0       	ldi	r21, 0x00	; 0
    44f8:	15 c0       	rjmp	.+42     	; 0x4524 <dir_next+0x2a0>
    44fa:	d6 01       	movw	r26, r12
    44fc:	12 96       	adiw	r26, 0x02	; 2
    44fe:	2c 91       	ld	r18, X
    4500:	30 e0       	ldi	r19, 0x00	; 0
    4502:	40 e0       	ldi	r20, 0x00	; 0
    4504:	50 e0       	ldi	r21, 0x00	; 0
    4506:	c8 01       	movw	r24, r16
    4508:	b7 01       	movw	r22, r14
    450a:	0e 94 b2 40 	call	0x8164	; 0x8164 <__mulsi3>
    450e:	9b 01       	movw	r18, r22
    4510:	ac 01       	movw	r20, r24
    4512:	f6 01       	movw	r30, r12
    4514:	86 a1       	ldd	r24, Z+38	; 0x26
    4516:	97 a1       	ldd	r25, Z+39	; 0x27
    4518:	a0 a5       	ldd	r26, Z+40	; 0x28
    451a:	b1 a5       	ldd	r27, Z+41	; 0x29
    451c:	28 0f       	add	r18, r24
    451e:	39 1f       	adc	r19, r25
    4520:	4a 1f       	adc	r20, r26
    4522:	5b 1f       	adc	r21, r27
    4524:	2e 87       	std	Y+14, r18	; 0x0e
    4526:	3f 87       	std	Y+15, r19	; 0x0f
    4528:	48 8b       	std	Y+16, r20	; 0x10
    452a:	59 8b       	std	Y+17, r21	; 0x11
    452c:	7d 82       	std	Y+5, r7	; 0x05
    452e:	6c 82       	std	Y+4, r6	; 0x04
    4530:	95 e0       	ldi	r25, 0x05	; 5
    4532:	44 0c       	add	r4, r4
    4534:	55 1c       	adc	r5, r5
    4536:	9a 95       	dec	r25
    4538:	e1 f7       	brne	.-8      	; 0x4532 <dir_next+0x2ae>
    453a:	8e e2       	ldi	r24, 0x2E	; 46
    453c:	90 e0       	ldi	r25, 0x00	; 0
    453e:	48 0e       	add	r4, r24
    4540:	59 1e       	adc	r5, r25
    4542:	88 81       	ld	r24, Y
    4544:	99 81       	ldd	r25, Y+1	; 0x01
    4546:	84 0d       	add	r24, r4
    4548:	95 1d       	adc	r25, r5
    454a:	9b 8b       	std	Y+19, r25	; 0x13
    454c:	8a 8b       	std	Y+18, r24	; 0x12
    454e:	80 e0       	ldi	r24, 0x00	; 0
    4550:	05 c0       	rjmp	.+10     	; 0x455c <dir_next+0x2d8>
    4552:	84 e0       	ldi	r24, 0x04	; 4
    4554:	03 c0       	rjmp	.+6      	; 0x455c <dir_next+0x2d8>
    4556:	82 e0       	ldi	r24, 0x02	; 2
    4558:	01 c0       	rjmp	.+2      	; 0x455c <dir_next+0x2d8>
    455a:	81 e0       	ldi	r24, 0x01	; 1
    455c:	df 91       	pop	r29
    455e:	cf 91       	pop	r28
    4560:	1f 91       	pop	r17
    4562:	0f 91       	pop	r16
    4564:	ff 90       	pop	r15
    4566:	ef 90       	pop	r14
    4568:	df 90       	pop	r13
    456a:	cf 90       	pop	r12
    456c:	bf 90       	pop	r11
    456e:	af 90       	pop	r10
    4570:	9f 90       	pop	r9
    4572:	8f 90       	pop	r8
    4574:	7f 90       	pop	r7
    4576:	6f 90       	pop	r6
    4578:	5f 90       	pop	r5
    457a:	4f 90       	pop	r4
    457c:	08 95       	ret

0000457e <follow_path>:
    457e:	9f 92       	push	r9
    4580:	af 92       	push	r10
    4582:	bf 92       	push	r11
    4584:	cf 92       	push	r12
    4586:	df 92       	push	r13
    4588:	ef 92       	push	r14
    458a:	ff 92       	push	r15
    458c:	0f 93       	push	r16
    458e:	1f 93       	push	r17
    4590:	cf 93       	push	r28
    4592:	df 93       	push	r29
    4594:	ec 01       	movw	r28, r24
    4596:	7b 01       	movw	r14, r22
    4598:	fb 01       	movw	r30, r22
    459a:	80 81       	ld	r24, Z
    459c:	8f 32       	cpi	r24, 0x2F	; 47
    459e:	11 f0       	breq	.+4      	; 0x45a4 <follow_path+0x26>
    45a0:	8c 35       	cpi	r24, 0x5C	; 92
    45a2:	19 f4       	brne	.+6      	; 0x45aa <follow_path+0x2c>
    45a4:	08 94       	sec
    45a6:	e1 1c       	adc	r14, r1
    45a8:	f1 1c       	adc	r15, r1
    45aa:	1e 82       	std	Y+6, r1	; 0x06
    45ac:	1f 82       	std	Y+7, r1	; 0x07
    45ae:	18 86       	std	Y+8, r1	; 0x08
    45b0:	19 86       	std	Y+9, r1	; 0x09
    45b2:	f7 01       	movw	r30, r14
    45b4:	80 81       	ld	r24, Z
    45b6:	80 32       	cpi	r24, 0x20	; 32
    45b8:	60 f4       	brcc	.+24     	; 0x45d2 <follow_path+0x54>
    45ba:	ce 01       	movw	r24, r28
    45bc:	60 e0       	ldi	r22, 0x00	; 0
    45be:	70 e0       	ldi	r23, 0x00	; 0
    45c0:	0e 94 c6 1d 	call	0x3b8c	; 0x3b8c <dir_sdi>
    45c4:	1b 8a       	std	Y+19, r1	; 0x13
    45c6:	1a 8a       	std	Y+18, r1	; 0x12
    45c8:	21 c1       	rjmp	.+578    	; 0x480c <follow_path+0x28e>
    45ca:	08 94       	sec
    45cc:	e1 1c       	adc	r14, r1
    45ce:	f1 1c       	adc	r15, r1
    45d0:	03 c0       	rjmp	.+6      	; 0x45d8 <follow_path+0x5a>
    45d2:	f0 e2       	ldi	r31, 0x20	; 32
    45d4:	9f 2e       	mov	r9, r31
    45d6:	05 e0       	ldi	r16, 0x05	; 5
    45d8:	f7 01       	movw	r30, r14
    45da:	80 81       	ld	r24, Z
    45dc:	8f 32       	cpi	r24, 0x2F	; 47
    45de:	a9 f3       	breq	.-22     	; 0x45ca <follow_path+0x4c>
    45e0:	8c 35       	cpi	r24, 0x5C	; 92
    45e2:	99 f3       	breq	.-26     	; 0x45ca <follow_path+0x4c>
    45e4:	ac 89       	ldd	r26, Y+20	; 0x14
    45e6:	bd 89       	ldd	r27, Y+21	; 0x15
    45e8:	fd 01       	movw	r30, r26
    45ea:	8b e0       	ldi	r24, 0x0B	; 11
    45ec:	90 e0       	ldi	r25, 0x00	; 0
    45ee:	01 c0       	rjmp	.+2      	; 0x45f2 <follow_path+0x74>
    45f0:	91 92       	st	Z+, r9
    45f2:	01 97       	sbiw	r24, 0x01	; 1
    45f4:	2f ef       	ldi	r18, 0xFF	; 255
    45f6:	8f 3f       	cpi	r24, 0xFF	; 255
    45f8:	92 07       	cpc	r25, r18
    45fa:	d1 f7       	brne	.-12     	; 0x45f0 <follow_path+0x72>
    45fc:	40 e0       	ldi	r20, 0x00	; 0
    45fe:	50 e0       	ldi	r21, 0x00	; 0
    4600:	aa 24       	eor	r10, r10
    4602:	bb 24       	eor	r11, r11
    4604:	e8 e0       	ldi	r30, 0x08	; 8
    4606:	ce 2e       	mov	r12, r30
    4608:	d1 2c       	mov	r13, r1
    460a:	10 e0       	ldi	r17, 0x00	; 0
    460c:	f7 01       	movw	r30, r14
    460e:	ea 0d       	add	r30, r10
    4610:	fb 1d       	adc	r31, r11
    4612:	20 81       	ld	r18, Z
    4614:	08 94       	sec
    4616:	a1 1c       	adc	r10, r1
    4618:	b1 1c       	adc	r11, r1
    461a:	21 32       	cpi	r18, 0x21	; 33
    461c:	08 f4       	brcc	.+2      	; 0x4620 <follow_path+0xa2>
    461e:	66 c0       	rjmp	.+204    	; 0x46ec <follow_path+0x16e>
    4620:	2f 32       	cpi	r18, 0x2F	; 47
    4622:	09 f4       	brne	.+2      	; 0x4626 <follow_path+0xa8>
    4624:	ff c0       	rjmp	.+510    	; 0x4824 <follow_path+0x2a6>
    4626:	2c 35       	cpi	r18, 0x5C	; 92
    4628:	09 f4       	brne	.+2      	; 0x462c <follow_path+0xae>
    462a:	fc c0       	rjmp	.+504    	; 0x4824 <follow_path+0x2a6>
    462c:	2e 32       	cpi	r18, 0x2E	; 46
    462e:	19 f0       	breq	.+6      	; 0x4636 <follow_path+0xb8>
    4630:	4c 15       	cp	r20, r12
    4632:	5d 05       	cpc	r21, r13
    4634:	80 f0       	brcs	.+32     	; 0x4656 <follow_path+0xd8>
    4636:	88 e0       	ldi	r24, 0x08	; 8
    4638:	c8 16       	cp	r12, r24
    463a:	d1 04       	cpc	r13, r1
    463c:	09 f0       	breq	.+2      	; 0x4640 <follow_path+0xc2>
    463e:	e1 c0       	rjmp	.+450    	; 0x4802 <follow_path+0x284>
    4640:	2e 32       	cpi	r18, 0x2E	; 46
    4642:	09 f0       	breq	.+2      	; 0x4646 <follow_path+0xc8>
    4644:	de c0       	rjmp	.+444    	; 0x4802 <follow_path+0x284>
    4646:	11 0f       	add	r17, r17
    4648:	11 0f       	add	r17, r17
    464a:	48 e0       	ldi	r20, 0x08	; 8
    464c:	50 e0       	ldi	r21, 0x00	; 0
    464e:	7b e0       	ldi	r23, 0x0B	; 11
    4650:	c7 2e       	mov	r12, r23
    4652:	d1 2c       	mov	r13, r1
    4654:	db cf       	rjmp	.-74     	; 0x460c <follow_path+0x8e>
    4656:	27 fd       	sbrc	r18, 7
    4658:	13 60       	ori	r17, 0x03	; 3
    465a:	82 2f       	mov	r24, r18
    465c:	81 58       	subi	r24, 0x81	; 129
    465e:	8f 31       	cpi	r24, 0x1F	; 31
    4660:	18 f0       	brcs	.+6      	; 0x4668 <follow_path+0xea>
    4662:	8f 55       	subi	r24, 0x5F	; 95
    4664:	8d 31       	cpi	r24, 0x1D	; 29
    4666:	08 f5       	brcc	.+66     	; 0x46aa <follow_path+0x12c>
    4668:	f7 01       	movw	r30, r14
    466a:	ea 0d       	add	r30, r10
    466c:	fb 1d       	adc	r31, r11
    466e:	30 81       	ld	r19, Z
    4670:	83 2f       	mov	r24, r19
    4672:	80 54       	subi	r24, 0x40	; 64
    4674:	8f 33       	cpi	r24, 0x3F	; 63
    4676:	20 f0       	brcs	.+8      	; 0x4680 <follow_path+0x102>
    4678:	80 54       	subi	r24, 0x40	; 64
    467a:	8d 37       	cpi	r24, 0x7D	; 125
    467c:	08 f0       	brcs	.+2      	; 0x4680 <follow_path+0x102>
    467e:	c1 c0       	rjmp	.+386    	; 0x4802 <follow_path+0x284>
    4680:	c6 01       	movw	r24, r12
    4682:	01 97       	sbiw	r24, 0x01	; 1
    4684:	48 17       	cp	r20, r24
    4686:	59 07       	cpc	r21, r25
    4688:	08 f0       	brcs	.+2      	; 0x468c <follow_path+0x10e>
    468a:	bb c0       	rjmp	.+374    	; 0x4802 <follow_path+0x284>
    468c:	08 94       	sec
    468e:	a1 1c       	adc	r10, r1
    4690:	b1 1c       	adc	r11, r1
    4692:	fd 01       	movw	r30, r26
    4694:	e4 0f       	add	r30, r20
    4696:	f5 1f       	adc	r31, r21
    4698:	20 83       	st	Z, r18
    469a:	ca 01       	movw	r24, r20
    469c:	01 96       	adiw	r24, 0x01	; 1
    469e:	fd 01       	movw	r30, r26
    46a0:	e8 0f       	add	r30, r24
    46a2:	f9 1f       	adc	r31, r25
    46a4:	30 83       	st	Z, r19
    46a6:	ac 01       	movw	r20, r24
    46a8:	1e c0       	rjmp	.+60     	; 0x46e6 <follow_path+0x168>
    46aa:	62 2f       	mov	r22, r18
    46ac:	70 e0       	ldi	r23, 0x00	; 0
    46ae:	e7 ee       	ldi	r30, 0xE7	; 231
    46b0:	f3 e0       	ldi	r31, 0x03	; 3
    46b2:	01 c0       	rjmp	.+2      	; 0x46b6 <follow_path+0x138>
    46b4:	31 96       	adiw	r30, 0x01	; 1
    46b6:	80 81       	ld	r24, Z
    46b8:	88 23       	and	r24, r24
    46ba:	29 f0       	breq	.+10     	; 0x46c6 <follow_path+0x148>
    46bc:	90 e0       	ldi	r25, 0x00	; 0
    46be:	86 17       	cp	r24, r22
    46c0:	97 07       	cpc	r25, r23
    46c2:	c1 f7       	brne	.-16     	; 0x46b4 <follow_path+0x136>
    46c4:	9e c0       	rjmp	.+316    	; 0x4802 <follow_path+0x284>
    46c6:	82 2f       	mov	r24, r18
    46c8:	81 54       	subi	r24, 0x41	; 65
    46ca:	8a 31       	cpi	r24, 0x1A	; 26
    46cc:	10 f4       	brcc	.+4      	; 0x46d2 <follow_path+0x154>
    46ce:	12 60       	ori	r17, 0x02	; 2
    46d0:	06 c0       	rjmp	.+12     	; 0x46de <follow_path+0x160>
    46d2:	82 2f       	mov	r24, r18
    46d4:	81 56       	subi	r24, 0x61	; 97
    46d6:	8a 31       	cpi	r24, 0x1A	; 26
    46d8:	10 f4       	brcc	.+4      	; 0x46de <follow_path+0x160>
    46da:	11 60       	ori	r17, 0x01	; 1
    46dc:	20 52       	subi	r18, 0x20	; 32
    46de:	fd 01       	movw	r30, r26
    46e0:	e4 0f       	add	r30, r20
    46e2:	f5 1f       	adc	r31, r21
    46e4:	20 83       	st	Z, r18
    46e6:	4f 5f       	subi	r20, 0xFF	; 255
    46e8:	5f 4f       	sbci	r21, 0xFF	; 255
    46ea:	90 cf       	rjmp	.-224    	; 0x460c <follow_path+0x8e>
    46ec:	91 2f       	mov	r25, r17
    46ee:	64 e0       	ldi	r22, 0x04	; 4
    46f0:	45 2b       	or	r20, r21
    46f2:	09 f4       	brne	.+2      	; 0x46f6 <follow_path+0x178>
    46f4:	86 c0       	rjmp	.+268    	; 0x4802 <follow_path+0x284>
    46f6:	8c 91       	ld	r24, X
    46f8:	85 3e       	cpi	r24, 0xE5	; 229
    46fa:	09 f4       	brne	.+2      	; 0x46fe <follow_path+0x180>
    46fc:	0c 93       	st	X, r16
    46fe:	e8 e0       	ldi	r30, 0x08	; 8
    4700:	ce 16       	cp	r12, r30
    4702:	d1 04       	cpc	r13, r1
    4704:	19 f4       	brne	.+6      	; 0x470c <follow_path+0x18e>
    4706:	91 2f       	mov	r25, r17
    4708:	99 0f       	add	r25, r25
    470a:	99 0f       	add	r25, r25
    470c:	29 2f       	mov	r18, r25
    470e:	30 e0       	ldi	r19, 0x00	; 0
    4710:	c9 01       	movw	r24, r18
    4712:	83 70       	andi	r24, 0x03	; 3
    4714:	90 70       	andi	r25, 0x00	; 0
    4716:	01 97       	sbiw	r24, 0x01	; 1
    4718:	09 f4       	brne	.+2      	; 0x471c <follow_path+0x19e>
    471a:	60 61       	ori	r22, 0x10	; 16
    471c:	2c 70       	andi	r18, 0x0C	; 12
    471e:	30 70       	andi	r19, 0x00	; 0
    4720:	24 30       	cpi	r18, 0x04	; 4
    4722:	31 05       	cpc	r19, r1
    4724:	09 f4       	brne	.+2      	; 0x4728 <follow_path+0x1aa>
    4726:	68 60       	ori	r22, 0x08	; 8
    4728:	1b 96       	adiw	r26, 0x0b	; 11
    472a:	6c 93       	st	X, r22
    472c:	ce 01       	movw	r24, r28
    472e:	60 e0       	ldi	r22, 0x00	; 0
    4730:	70 e0       	ldi	r23, 0x00	; 0
    4732:	0e 94 c6 1d 	call	0x3b8c	; 0x3b8c <dir_sdi>
    4736:	48 2f       	mov	r20, r24
    4738:	88 23       	and	r24, r24
    473a:	79 f5       	brne	.+94     	; 0x479a <follow_path+0x21c>
    473c:	4e 85       	ldd	r20, Y+14	; 0x0e
    473e:	5f 85       	ldd	r21, Y+15	; 0x0f
    4740:	68 89       	ldd	r22, Y+16	; 0x10
    4742:	79 89       	ldd	r23, Y+17	; 0x11
    4744:	88 81       	ld	r24, Y
    4746:	99 81       	ldd	r25, Y+1	; 0x01
    4748:	0e 94 7b 18 	call	0x30f6	; 0x30f6 <move_window>
    474c:	48 2f       	mov	r20, r24
    474e:	88 23       	and	r24, r24
    4750:	21 f5       	brne	.+72     	; 0x479a <follow_path+0x21c>
    4752:	ea 89       	ldd	r30, Y+18	; 0x12
    4754:	fb 89       	ldd	r31, Y+19	; 0x13
    4756:	80 81       	ld	r24, Z
    4758:	88 23       	and	r24, r24
    475a:	11 f4       	brne	.+4      	; 0x4760 <follow_path+0x1e2>
    475c:	44 e0       	ldi	r20, 0x04	; 4
    475e:	1d c0       	rjmp	.+58     	; 0x479a <follow_path+0x21c>
    4760:	83 85       	ldd	r24, Z+11	; 0x0b
    4762:	83 fd       	sbrc	r24, 3
    4764:	14 c0       	rjmp	.+40     	; 0x478e <follow_path+0x210>
    4766:	df 01       	movw	r26, r30
    4768:	8c 89       	ldd	r24, Y+20	; 0x14
    476a:	9d 89       	ldd	r25, Y+21	; 0x15
    476c:	9c 01       	movw	r18, r24
    476e:	f9 01       	movw	r30, r18
    4770:	2b e0       	ldi	r18, 0x0B	; 11
    4772:	30 e0       	ldi	r19, 0x00	; 0
    4774:	21 50       	subi	r18, 0x01	; 1
    4776:	30 40       	sbci	r19, 0x00	; 0
    4778:	8f ef       	ldi	r24, 0xFF	; 255
    477a:	2f 3f       	cpi	r18, 0xFF	; 255
    477c:	38 07       	cpc	r19, r24
    477e:	69 f0       	breq	.+26     	; 0x479a <follow_path+0x21c>
    4780:	9c 91       	ld	r25, X
    4782:	80 81       	ld	r24, Z
    4784:	98 17       	cp	r25, r24
    4786:	19 f4       	brne	.+6      	; 0x478e <follow_path+0x210>
    4788:	11 96       	adiw	r26, 0x01	; 1
    478a:	31 96       	adiw	r30, 0x01	; 1
    478c:	f3 cf       	rjmp	.-26     	; 0x4774 <follow_path+0x1f6>
    478e:	ce 01       	movw	r24, r28
    4790:	60 e0       	ldi	r22, 0x00	; 0
    4792:	70 e0       	ldi	r23, 0x00	; 0
    4794:	0e 94 42 21 	call	0x4284	; 0x4284 <dir_next>
    4798:	ce cf       	rjmp	.-100    	; 0x4736 <follow_path+0x1b8>
    479a:	ec 89       	ldd	r30, Y+20	; 0x14
    479c:	fd 89       	ldd	r31, Y+21	; 0x15
    479e:	93 85       	ldd	r25, Z+11	; 0x0b
    47a0:	44 23       	and	r20, r20
    47a2:	31 f0       	breq	.+12     	; 0x47b0 <follow_path+0x232>
    47a4:	84 2f       	mov	r24, r20
    47a6:	44 30       	cpi	r20, 0x04	; 4
    47a8:	71 f5       	brne	.+92     	; 0x4806 <follow_path+0x288>
    47aa:	92 ff       	sbrs	r25, 2
    47ac:	2e c0       	rjmp	.+92     	; 0x480a <follow_path+0x28c>
    47ae:	2e c0       	rjmp	.+92     	; 0x480c <follow_path+0x28e>
    47b0:	92 fd       	sbrc	r25, 2
    47b2:	29 c0       	rjmp	.+82     	; 0x4806 <follow_path+0x288>
    47b4:	aa 89       	ldd	r26, Y+18	; 0x12
    47b6:	bb 89       	ldd	r27, Y+19	; 0x13
    47b8:	1b 96       	adiw	r26, 0x0b	; 11
    47ba:	8c 91       	ld	r24, X
    47bc:	1b 97       	sbiw	r26, 0x0b	; 11
    47be:	84 ff       	sbrs	r24, 4
    47c0:	24 c0       	rjmp	.+72     	; 0x480a <follow_path+0x28c>
    47c2:	5a 96       	adiw	r26, 0x1a	; 26
    47c4:	8d 91       	ld	r24, X+
    47c6:	9c 91       	ld	r25, X
    47c8:	5b 97       	sbiw	r26, 0x1b	; 27
    47ca:	9c 01       	movw	r18, r24
    47cc:	40 e0       	ldi	r20, 0x00	; 0
    47ce:	50 e0       	ldi	r21, 0x00	; 0
    47d0:	e8 81       	ld	r30, Y
    47d2:	f9 81       	ldd	r31, Y+1	; 0x01
    47d4:	80 81       	ld	r24, Z
    47d6:	83 30       	cpi	r24, 0x03	; 3
    47d8:	69 f4       	brne	.+26     	; 0x47f4 <follow_path+0x276>
    47da:	54 96       	adiw	r26, 0x14	; 20
    47dc:	8d 91       	ld	r24, X+
    47de:	9c 91       	ld	r25, X
    47e0:	55 97       	sbiw	r26, 0x15	; 21
    47e2:	a0 e0       	ldi	r26, 0x00	; 0
    47e4:	b0 e0       	ldi	r27, 0x00	; 0
    47e6:	dc 01       	movw	r26, r24
    47e8:	99 27       	eor	r25, r25
    47ea:	88 27       	eor	r24, r24
    47ec:	28 2b       	or	r18, r24
    47ee:	39 2b       	or	r19, r25
    47f0:	4a 2b       	or	r20, r26
    47f2:	5b 2b       	or	r21, r27
    47f4:	ea 0c       	add	r14, r10
    47f6:	fb 1c       	adc	r15, r11
    47f8:	2e 83       	std	Y+6, r18	; 0x06
    47fa:	3f 83       	std	Y+7, r19	; 0x07
    47fc:	48 87       	std	Y+8, r20	; 0x08
    47fe:	59 87       	std	Y+9, r21	; 0x09
    4800:	eb ce       	rjmp	.-554    	; 0x45d8 <follow_path+0x5a>
    4802:	86 e0       	ldi	r24, 0x06	; 6
    4804:	03 c0       	rjmp	.+6      	; 0x480c <follow_path+0x28e>
    4806:	84 2f       	mov	r24, r20
    4808:	01 c0       	rjmp	.+2      	; 0x480c <follow_path+0x28e>
    480a:	85 e0       	ldi	r24, 0x05	; 5
    480c:	df 91       	pop	r29
    480e:	cf 91       	pop	r28
    4810:	1f 91       	pop	r17
    4812:	0f 91       	pop	r16
    4814:	ff 90       	pop	r15
    4816:	ef 90       	pop	r14
    4818:	df 90       	pop	r13
    481a:	cf 90       	pop	r12
    481c:	bf 90       	pop	r11
    481e:	af 90       	pop	r10
    4820:	9f 90       	pop	r9
    4822:	08 95       	ret
    4824:	91 2f       	mov	r25, r17
    4826:	60 e0       	ldi	r22, 0x00	; 0
    4828:	63 cf       	rjmp	.-314    	; 0x46f0 <follow_path+0x172>

0000482a <f_stat>:
    482a:	cf 92       	push	r12
    482c:	df 92       	push	r13
    482e:	ef 92       	push	r14
    4830:	ff 92       	push	r15
    4832:	1f 93       	push	r17
    4834:	df 93       	push	r29
    4836:	cf 93       	push	r28
    4838:	cd b7       	in	r28, 0x3d	; 61
    483a:	de b7       	in	r29, 0x3e	; 62
    483c:	a6 97       	sbiw	r28, 0x26	; 38
    483e:	0f b6       	in	r0, 0x3f	; 63
    4840:	f8 94       	cli
    4842:	de bf       	out	0x3e, r29	; 62
    4844:	0f be       	out	0x3f, r0	; 63
    4846:	cd bf       	out	0x3d, r28	; 61
    4848:	9e a3       	std	Y+38, r25	; 0x26
    484a:	8d a3       	std	Y+37, r24	; 0x25
    484c:	6b 01       	movw	r12, r22
    484e:	ad e0       	ldi	r26, 0x0D	; 13
    4850:	ea 2e       	mov	r14, r26
    4852:	f1 2c       	mov	r15, r1
    4854:	ec 0e       	add	r14, r28
    4856:	fd 1e       	adc	r15, r29
    4858:	c7 01       	movw	r24, r14
    485a:	be 01       	movw	r22, r28
    485c:	6b 5d       	subi	r22, 0xDB	; 219
    485e:	7f 4f       	sbci	r23, 0xFF	; 255
    4860:	40 e0       	ldi	r20, 0x00	; 0
    4862:	0e 94 03 19 	call	0x3206	; 0x3206 <find_volume>
    4866:	18 2f       	mov	r17, r24
    4868:	88 23       	and	r24, r24
    486a:	c9 f4       	brne	.+50     	; 0x489e <f_stat+0x74>
    486c:	ce 01       	movw	r24, r28
    486e:	01 96       	adiw	r24, 0x01	; 1
    4870:	9a a3       	std	Y+34, r25	; 0x22
    4872:	89 a3       	std	Y+33, r24	; 0x21
    4874:	6d a1       	ldd	r22, Y+37	; 0x25
    4876:	7e a1       	ldd	r23, Y+38	; 0x26
    4878:	c7 01       	movw	r24, r14
    487a:	0e 94 bf 22 	call	0x457e	; 0x457e <follow_path>
    487e:	18 2f       	mov	r17, r24
    4880:	88 23       	and	r24, r24
    4882:	69 f4       	brne	.+26     	; 0x489e <f_stat+0x74>
    4884:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4886:	98 a1       	ldd	r25, Y+32	; 0x20
    4888:	89 2b       	or	r24, r25
    488a:	11 f4       	brne	.+4      	; 0x4890 <f_stat+0x66>
    488c:	16 e0       	ldi	r17, 0x06	; 6
    488e:	07 c0       	rjmp	.+14     	; 0x489e <f_stat+0x74>
    4890:	c1 14       	cp	r12, r1
    4892:	d1 04       	cpc	r13, r1
    4894:	21 f0       	breq	.+8      	; 0x489e <f_stat+0x74>
    4896:	c7 01       	movw	r24, r14
    4898:	b6 01       	movw	r22, r12
    489a:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <get_fileinfo>
    489e:	81 2f       	mov	r24, r17
    48a0:	a6 96       	adiw	r28, 0x26	; 38
    48a2:	0f b6       	in	r0, 0x3f	; 63
    48a4:	f8 94       	cli
    48a6:	de bf       	out	0x3e, r29	; 62
    48a8:	0f be       	out	0x3f, r0	; 63
    48aa:	cd bf       	out	0x3d, r28	; 61
    48ac:	cf 91       	pop	r28
    48ae:	df 91       	pop	r29
    48b0:	1f 91       	pop	r17
    48b2:	ff 90       	pop	r15
    48b4:	ef 90       	pop	r14
    48b6:	df 90       	pop	r13
    48b8:	cf 90       	pop	r12
    48ba:	08 95       	ret

000048bc <f_opendir>:
    48bc:	ff 92       	push	r15
    48be:	0f 93       	push	r16
    48c0:	1f 93       	push	r17
    48c2:	df 93       	push	r29
    48c4:	cf 93       	push	r28
    48c6:	cd b7       	in	r28, 0x3d	; 61
    48c8:	de b7       	in	r29, 0x3e	; 62
    48ca:	60 97       	sbiw	r28, 0x10	; 16
    48cc:	0f b6       	in	r0, 0x3f	; 63
    48ce:	f8 94       	cli
    48d0:	de bf       	out	0x3e, r29	; 62
    48d2:	0f be       	out	0x3f, r0	; 63
    48d4:	cd bf       	out	0x3d, r28	; 61
    48d6:	8c 01       	movw	r16, r24
    48d8:	78 8b       	std	Y+16, r23	; 0x10
    48da:	6f 87       	std	Y+15, r22	; 0x0f
    48dc:	00 97       	sbiw	r24, 0x00	; 0
    48de:	19 f4       	brne	.+6      	; 0x48e6 <f_opendir+0x2a>
    48e0:	79 e0       	ldi	r23, 0x09	; 9
    48e2:	f7 2e       	mov	r15, r23
    48e4:	7a c0       	rjmp	.+244    	; 0x49da <f_opendir+0x11e>
    48e6:	ce 01       	movw	r24, r28
    48e8:	01 96       	adiw	r24, 0x01	; 1
    48ea:	be 01       	movw	r22, r28
    48ec:	61 5f       	subi	r22, 0xF1	; 241
    48ee:	7f 4f       	sbci	r23, 0xFF	; 255
    48f0:	40 e0       	ldi	r20, 0x00	; 0
    48f2:	0e 94 03 19 	call	0x3206	; 0x3206 <find_volume>
    48f6:	f8 2e       	mov	r15, r24
    48f8:	88 23       	and	r24, r24
    48fa:	09 f0       	breq	.+2      	; 0x48fe <f_opendir+0x42>
    48fc:	6b c0       	rjmp	.+214    	; 0x49d4 <f_opendir+0x118>
    48fe:	89 81       	ldd	r24, Y+1	; 0x01
    4900:	9a 81       	ldd	r25, Y+2	; 0x02
    4902:	f8 01       	movw	r30, r16
    4904:	91 83       	std	Z+1, r25	; 0x01
    4906:	80 83       	st	Z, r24
    4908:	ce 01       	movw	r24, r28
    490a:	03 96       	adiw	r24, 0x03	; 3
    490c:	95 8b       	std	Z+21, r25	; 0x15
    490e:	84 8b       	std	Z+20, r24	; 0x14
    4910:	6f 85       	ldd	r22, Y+15	; 0x0f
    4912:	78 89       	ldd	r23, Y+16	; 0x10
    4914:	c8 01       	movw	r24, r16
    4916:	0e 94 bf 22 	call	0x457e	; 0x457e <follow_path>
    491a:	f8 2e       	mov	r15, r24
    491c:	88 23       	and	r24, r24
    491e:	09 f0       	breq	.+2      	; 0x4922 <f_opendir+0x66>
    4920:	51 c0       	rjmp	.+162    	; 0x49c4 <f_opendir+0x108>
    4922:	f8 01       	movw	r30, r16
    4924:	a2 89       	ldd	r26, Z+18	; 0x12
    4926:	b3 89       	ldd	r27, Z+19	; 0x13
    4928:	10 97       	sbiw	r26, 0x00	; 0
    492a:	19 f1       	breq	.+70     	; 0x4972 <f_opendir+0xb6>
    492c:	1b 96       	adiw	r26, 0x0b	; 11
    492e:	8c 91       	ld	r24, X
    4930:	1b 97       	sbiw	r26, 0x0b	; 11
    4932:	84 ff       	sbrs	r24, 4
    4934:	4d c0       	rjmp	.+154    	; 0x49d0 <f_opendir+0x114>
    4936:	5a 96       	adiw	r26, 0x1a	; 26
    4938:	8d 91       	ld	r24, X+
    493a:	9c 91       	ld	r25, X
    493c:	5b 97       	sbiw	r26, 0x1b	; 27
    493e:	9c 01       	movw	r18, r24
    4940:	40 e0       	ldi	r20, 0x00	; 0
    4942:	50 e0       	ldi	r21, 0x00	; 0
    4944:	e9 81       	ldd	r30, Y+1	; 0x01
    4946:	fa 81       	ldd	r31, Y+2	; 0x02
    4948:	80 81       	ld	r24, Z
    494a:	83 30       	cpi	r24, 0x03	; 3
    494c:	69 f4       	brne	.+26     	; 0x4968 <f_opendir+0xac>
    494e:	54 96       	adiw	r26, 0x14	; 20
    4950:	8d 91       	ld	r24, X+
    4952:	9c 91       	ld	r25, X
    4954:	55 97       	sbiw	r26, 0x15	; 21
    4956:	a0 e0       	ldi	r26, 0x00	; 0
    4958:	b0 e0       	ldi	r27, 0x00	; 0
    495a:	dc 01       	movw	r26, r24
    495c:	99 27       	eor	r25, r25
    495e:	88 27       	eor	r24, r24
    4960:	28 2b       	or	r18, r24
    4962:	39 2b       	or	r19, r25
    4964:	4a 2b       	or	r20, r26
    4966:	5b 2b       	or	r21, r27
    4968:	f8 01       	movw	r30, r16
    496a:	26 83       	std	Z+6, r18	; 0x06
    496c:	37 83       	std	Z+7, r19	; 0x07
    496e:	40 87       	std	Z+8, r20	; 0x08
    4970:	51 87       	std	Z+9, r21	; 0x09
    4972:	e9 81       	ldd	r30, Y+1	; 0x01
    4974:	fa 81       	ldd	r31, Y+2	; 0x02
    4976:	86 81       	ldd	r24, Z+6	; 0x06
    4978:	97 81       	ldd	r25, Z+7	; 0x07
    497a:	f8 01       	movw	r30, r16
    497c:	93 83       	std	Z+3, r25	; 0x03
    497e:	82 83       	std	Z+2, r24	; 0x02
    4980:	c8 01       	movw	r24, r16
    4982:	60 e0       	ldi	r22, 0x00	; 0
    4984:	70 e0       	ldi	r23, 0x00	; 0
    4986:	0e 94 c6 1d 	call	0x3b8c	; 0x3b8c <dir_sdi>
    498a:	f8 2e       	mov	r15, r24
    498c:	88 23       	and	r24, r24
    498e:	d1 f4       	brne	.+52     	; 0x49c4 <f_opendir+0x108>
    4990:	f8 01       	movw	r30, r16
    4992:	86 81       	ldd	r24, Z+6	; 0x06
    4994:	97 81       	ldd	r25, Z+7	; 0x07
    4996:	a0 85       	ldd	r26, Z+8	; 0x08
    4998:	b1 85       	ldd	r27, Z+9	; 0x09
    499a:	00 97       	sbiw	r24, 0x00	; 0
    499c:	a1 05       	cpc	r26, r1
    499e:	b1 05       	cpc	r27, r1
    49a0:	69 f0       	breq	.+26     	; 0x49bc <f_opendir+0x100>
    49a2:	c8 01       	movw	r24, r16
    49a4:	60 e0       	ldi	r22, 0x00	; 0
    49a6:	70 e0       	ldi	r23, 0x00	; 0
    49a8:	0e 94 b9 16 	call	0x2d72	; 0x2d72 <inc_lock>
    49ac:	f8 01       	movw	r30, r16
    49ae:	97 8b       	std	Z+23, r25	; 0x17
    49b0:	86 8b       	std	Z+22, r24	; 0x16
    49b2:	89 2b       	or	r24, r25
    49b4:	91 f4       	brne	.+36     	; 0x49da <f_opendir+0x11e>
    49b6:	82 e1       	ldi	r24, 0x12	; 18
    49b8:	f8 2e       	mov	r15, r24
    49ba:	0c c0       	rjmp	.+24     	; 0x49d4 <f_opendir+0x118>
    49bc:	f8 01       	movw	r30, r16
    49be:	17 8a       	std	Z+23, r1	; 0x17
    49c0:	16 8a       	std	Z+22, r1	; 0x16
    49c2:	0b c0       	rjmp	.+22     	; 0x49da <f_opendir+0x11e>
    49c4:	f4 e0       	ldi	r31, 0x04	; 4
    49c6:	ff 16       	cp	r15, r31
    49c8:	19 f0       	breq	.+6      	; 0x49d0 <f_opendir+0x114>
    49ca:	ff 20       	and	r15, r15
    49cc:	31 f0       	breq	.+12     	; 0x49da <f_opendir+0x11e>
    49ce:	02 c0       	rjmp	.+4      	; 0x49d4 <f_opendir+0x118>
    49d0:	b5 e0       	ldi	r27, 0x05	; 5
    49d2:	fb 2e       	mov	r15, r27
    49d4:	f8 01       	movw	r30, r16
    49d6:	11 82       	std	Z+1, r1	; 0x01
    49d8:	10 82       	st	Z, r1
    49da:	8f 2d       	mov	r24, r15
    49dc:	60 96       	adiw	r28, 0x10	; 16
    49de:	0f b6       	in	r0, 0x3f	; 63
    49e0:	f8 94       	cli
    49e2:	de bf       	out	0x3e, r29	; 62
    49e4:	0f be       	out	0x3f, r0	; 63
    49e6:	cd bf       	out	0x3d, r28	; 61
    49e8:	cf 91       	pop	r28
    49ea:	df 91       	pop	r29
    49ec:	1f 91       	pop	r17
    49ee:	0f 91       	pop	r16
    49f0:	ff 90       	pop	r15
    49f2:	08 95       	ret

000049f4 <dir_register>:
    49f4:	1f 93       	push	r17
    49f6:	cf 93       	push	r28
    49f8:	df 93       	push	r29
    49fa:	ec 01       	movw	r28, r24
    49fc:	60 e0       	ldi	r22, 0x00	; 0
    49fe:	70 e0       	ldi	r23, 0x00	; 0
    4a00:	0e 94 c6 1d 	call	0x3b8c	; 0x3b8c <dir_sdi>
    4a04:	18 2f       	mov	r17, r24
    4a06:	88 23       	and	r24, r24
    4a08:	c1 f4       	brne	.+48     	; 0x4a3a <dir_register+0x46>
    4a0a:	4e 85       	ldd	r20, Y+14	; 0x0e
    4a0c:	5f 85       	ldd	r21, Y+15	; 0x0f
    4a0e:	68 89       	ldd	r22, Y+16	; 0x10
    4a10:	79 89       	ldd	r23, Y+17	; 0x11
    4a12:	88 81       	ld	r24, Y
    4a14:	99 81       	ldd	r25, Y+1	; 0x01
    4a16:	0e 94 7b 18 	call	0x30f6	; 0x30f6 <move_window>
    4a1a:	18 2f       	mov	r17, r24
    4a1c:	88 23       	and	r24, r24
    4a1e:	69 f4       	brne	.+26     	; 0x4a3a <dir_register+0x46>
    4a20:	ea 89       	ldd	r30, Y+18	; 0x12
    4a22:	fb 89       	ldd	r31, Y+19	; 0x13
    4a24:	e0 81       	ld	r30, Z
    4a26:	e5 3e       	cpi	r30, 0xE5	; 229
    4a28:	41 f1       	breq	.+80     	; 0x4a7a <dir_register+0x86>
    4a2a:	ee 23       	and	r30, r30
    4a2c:	31 f1       	breq	.+76     	; 0x4a7a <dir_register+0x86>
    4a2e:	ce 01       	movw	r24, r28
    4a30:	61 e0       	ldi	r22, 0x01	; 1
    4a32:	70 e0       	ldi	r23, 0x00	; 0
    4a34:	0e 94 42 21 	call	0x4284	; 0x4284 <dir_next>
    4a38:	e5 cf       	rjmp	.-54     	; 0x4a04 <dir_register+0x10>
    4a3a:	14 30       	cpi	r17, 0x04	; 4
    4a3c:	c9 f4       	brne	.+50     	; 0x4a70 <dir_register+0x7c>
    4a3e:	17 e0       	ldi	r17, 0x07	; 7
    4a40:	17 c0       	rjmp	.+46     	; 0x4a70 <dir_register+0x7c>
    4a42:	ea 89       	ldd	r30, Y+18	; 0x12
    4a44:	fb 89       	ldd	r31, Y+19	; 0x13
    4a46:	80 e2       	ldi	r24, 0x20	; 32
    4a48:	90 e0       	ldi	r25, 0x00	; 0
    4a4a:	01 c0       	rjmp	.+2      	; 0x4a4e <dir_register+0x5a>
    4a4c:	11 92       	st	Z+, r1
    4a4e:	01 97       	sbiw	r24, 0x01	; 1
    4a50:	2f ef       	ldi	r18, 0xFF	; 255
    4a52:	8f 3f       	cpi	r24, 0xFF	; 255
    4a54:	92 07       	cpc	r25, r18
    4a56:	d1 f7       	brne	.-12     	; 0x4a4c <dir_register+0x58>
    4a58:	6c 89       	ldd	r22, Y+20	; 0x14
    4a5a:	7d 89       	ldd	r23, Y+21	; 0x15
    4a5c:	8a 89       	ldd	r24, Y+18	; 0x12
    4a5e:	9b 89       	ldd	r25, Y+19	; 0x13
    4a60:	4b e0       	ldi	r20, 0x0B	; 11
    4a62:	50 e0       	ldi	r21, 0x00	; 0
    4a64:	0e 94 54 16 	call	0x2ca8	; 0x2ca8 <mem_cpy>
    4a68:	e8 81       	ld	r30, Y
    4a6a:	f9 81       	ldd	r31, Y+1	; 0x01
    4a6c:	81 e0       	ldi	r24, 0x01	; 1
    4a6e:	84 83       	std	Z+4, r24	; 0x04
    4a70:	81 2f       	mov	r24, r17
    4a72:	df 91       	pop	r29
    4a74:	cf 91       	pop	r28
    4a76:	1f 91       	pop	r17
    4a78:	08 95       	ret
    4a7a:	4e 85       	ldd	r20, Y+14	; 0x0e
    4a7c:	5f 85       	ldd	r21, Y+15	; 0x0f
    4a7e:	68 89       	ldd	r22, Y+16	; 0x10
    4a80:	79 89       	ldd	r23, Y+17	; 0x11
    4a82:	88 81       	ld	r24, Y
    4a84:	99 81       	ldd	r25, Y+1	; 0x01
    4a86:	0e 94 7b 18 	call	0x30f6	; 0x30f6 <move_window>
    4a8a:	18 2f       	mov	r17, r24
    4a8c:	88 23       	and	r24, r24
    4a8e:	c9 f2       	breq	.-78     	; 0x4a42 <dir_register+0x4e>
    4a90:	ef cf       	rjmp	.-34     	; 0x4a70 <dir_register+0x7c>

00004a92 <f_open>:
    4a92:	4f 92       	push	r4
    4a94:	5f 92       	push	r5
    4a96:	6f 92       	push	r6
    4a98:	7f 92       	push	r7
    4a9a:	8f 92       	push	r8
    4a9c:	9f 92       	push	r9
    4a9e:	af 92       	push	r10
    4aa0:	bf 92       	push	r11
    4aa2:	cf 92       	push	r12
    4aa4:	df 92       	push	r13
    4aa6:	ef 92       	push	r14
    4aa8:	ff 92       	push	r15
    4aaa:	0f 93       	push	r16
    4aac:	1f 93       	push	r17
    4aae:	df 93       	push	r29
    4ab0:	cf 93       	push	r28
    4ab2:	cd b7       	in	r28, 0x3d	; 61
    4ab4:	de b7       	in	r29, 0x3e	; 62
    4ab6:	a6 97       	sbiw	r28, 0x26	; 38
    4ab8:	0f b6       	in	r0, 0x3f	; 63
    4aba:	f8 94       	cli
    4abc:	de bf       	out	0x3e, r29	; 62
    4abe:	0f be       	out	0x3f, r0	; 63
    4ac0:	cd bf       	out	0x3d, r28	; 61
    4ac2:	3c 01       	movw	r6, r24
    4ac4:	7e a3       	std	Y+38, r23	; 0x26
    4ac6:	6d a3       	std	Y+37, r22	; 0x25
    4ac8:	00 97       	sbiw	r24, 0x00	; 0
    4aca:	19 f4       	brne	.+6      	; 0x4ad2 <f_open+0x40>
    4acc:	69 e0       	ldi	r22, 0x09	; 9
    4ace:	46 2e       	mov	r4, r22
    4ad0:	2e c1       	rjmp	.+604    	; 0x4d2e <f_open+0x29c>
    4ad2:	dc 01       	movw	r26, r24
    4ad4:	1d 92       	st	X+, r1
    4ad6:	1c 92       	st	X, r1
    4ad8:	5f e1       	ldi	r21, 0x1F	; 31
    4ada:	55 2e       	mov	r5, r21
    4adc:	54 22       	and	r5, r20
    4ade:	8e 01       	movw	r16, r28
    4ae0:	03 5f       	subi	r16, 0xF3	; 243
    4ae2:	1f 4f       	sbci	r17, 0xFF	; 255
    4ae4:	4e 71       	andi	r20, 0x1E	; 30
    4ae6:	c8 01       	movw	r24, r16
    4ae8:	be 01       	movw	r22, r28
    4aea:	6b 5d       	subi	r22, 0xDB	; 219
    4aec:	7f 4f       	sbci	r23, 0xFF	; 255
    4aee:	0e 94 03 19 	call	0x3206	; 0x3206 <find_volume>
    4af2:	48 2e       	mov	r4, r24
    4af4:	88 23       	and	r24, r24
    4af6:	09 f0       	breq	.+2      	; 0x4afa <f_open+0x68>
    4af8:	1a c1       	rjmp	.+564    	; 0x4d2e <f_open+0x29c>
    4afa:	ce 01       	movw	r24, r28
    4afc:	01 96       	adiw	r24, 0x01	; 1
    4afe:	9a a3       	std	Y+34, r25	; 0x22
    4b00:	89 a3       	std	Y+33, r24	; 0x21
    4b02:	6d a1       	ldd	r22, Y+37	; 0x25
    4b04:	7e a1       	ldd	r23, Y+38	; 0x26
    4b06:	c8 01       	movw	r24, r16
    4b08:	0e 94 bf 22 	call	0x457e	; 0x457e <follow_path>
    4b0c:	28 2f       	mov	r18, r24
    4b0e:	cf 8c       	ldd	r12, Y+31	; 0x1f
    4b10:	d8 a0       	ldd	r13, Y+32	; 0x20
    4b12:	88 23       	and	r24, r24
    4b14:	81 f4       	brne	.+32     	; 0x4b36 <f_open+0xa4>
    4b16:	c1 14       	cp	r12, r1
    4b18:	d1 04       	cpc	r13, r1
    4b1a:	11 f4       	brne	.+4      	; 0x4b20 <f_open+0x8e>
    4b1c:	26 e0       	ldi	r18, 0x06	; 6
    4b1e:	0b c0       	rjmp	.+22     	; 0x4b36 <f_open+0xa4>
    4b20:	60 e0       	ldi	r22, 0x00	; 0
    4b22:	70 e0       	ldi	r23, 0x00	; 0
    4b24:	85 2d       	mov	r24, r5
    4b26:	8e 7f       	andi	r24, 0xFE	; 254
    4b28:	11 f0       	breq	.+4      	; 0x4b2e <f_open+0x9c>
    4b2a:	61 e0       	ldi	r22, 0x01	; 1
    4b2c:	70 e0       	ldi	r23, 0x00	; 0
    4b2e:	c8 01       	movw	r24, r16
    4b30:	0e 94 80 16 	call	0x2d00	; 0x2d00 <chk_lock>
    4b34:	28 2f       	mov	r18, r24
    4b36:	45 2d       	mov	r20, r5
    4b38:	50 e0       	ldi	r21, 0x00	; 0
    4b3a:	ca 01       	movw	r24, r20
    4b3c:	8c 71       	andi	r24, 0x1C	; 28
    4b3e:	90 70       	andi	r25, 0x00	; 0
    4b40:	89 2b       	or	r24, r25
    4b42:	09 f4       	brne	.+2      	; 0x4b46 <f_open+0xb4>
    4b44:	7a c0       	rjmp	.+244    	; 0x4c3a <f_open+0x1a8>
    4b46:	22 23       	and	r18, r18
    4b48:	91 f0       	breq	.+36     	; 0x4b6e <f_open+0xdc>
    4b4a:	24 30       	cpi	r18, 0x04	; 4
    4b4c:	41 f4       	brne	.+16     	; 0x4b5e <f_open+0xcc>
    4b4e:	80 91 39 05 	lds	r24, 0x0539
    4b52:	90 91 3a 05 	lds	r25, 0x053A
    4b56:	89 2b       	or	r24, r25
    4b58:	09 f4       	brne	.+2      	; 0x4b5c <f_open+0xca>
    4b5a:	01 c1       	rjmp	.+514    	; 0x4d5e <f_open+0x2cc>
    4b5c:	22 e1       	ldi	r18, 0x12	; 18
    4b5e:	cf 8c       	ldd	r12, Y+31	; 0x1f
    4b60:	d8 a0       	ldd	r13, Y+32	; 0x20
    4b62:	22 23       	and	r18, r18
    4b64:	09 f0       	breq	.+2      	; 0x4b68 <f_open+0xd6>
    4b66:	06 c1       	rjmp	.+524    	; 0x4d74 <f_open+0x2e2>
    4b68:	b8 e0       	ldi	r27, 0x08	; 8
    4b6a:	5b 2a       	or	r5, r27
    4b6c:	08 c0       	rjmp	.+16     	; 0x4b7e <f_open+0xec>
    4b6e:	f6 01       	movw	r30, r12
    4b70:	83 85       	ldd	r24, Z+11	; 0x0b
    4b72:	81 71       	andi	r24, 0x11	; 17
    4b74:	11 f0       	breq	.+4      	; 0x4b7a <f_open+0xe8>
    4b76:	27 e0       	ldi	r18, 0x07	; 7
    4b78:	fd c0       	rjmp	.+506    	; 0x4d74 <f_open+0x2e2>
    4b7a:	52 fc       	sbrc	r5, 2
    4b7c:	f6 c0       	rjmp	.+492    	; 0x4d6a <f_open+0x2d8>
    4b7e:	53 fe       	sbrs	r5, 3
    4b80:	69 c0       	rjmp	.+210    	; 0x4c54 <f_open+0x1c2>
    4b82:	80 e0       	ldi	r24, 0x00	; 0
    4b84:	90 e0       	ldi	r25, 0x00	; 0
    4b86:	a9 e6       	ldi	r26, 0x69	; 105
    4b88:	bd eb       	ldi	r27, 0xBD	; 189
    4b8a:	f6 01       	movw	r30, r12
    4b8c:	86 87       	std	Z+14, r24	; 0x0e
    4b8e:	97 87       	std	Z+15, r25	; 0x0f
    4b90:	a0 8b       	std	Z+16, r26	; 0x10
    4b92:	b1 8b       	std	Z+17, r27	; 0x11
    4b94:	13 86       	std	Z+11, r1	; 0x0b
    4b96:	d6 01       	movw	r26, r12
    4b98:	5c 96       	adiw	r26, 0x1c	; 28
    4b9a:	1d 92       	st	X+, r1
    4b9c:	1d 92       	st	X+, r1
    4b9e:	1d 92       	st	X+, r1
    4ba0:	1c 92       	st	X, r1
    4ba2:	5f 97       	sbiw	r26, 0x1f	; 31
    4ba4:	ed 85       	ldd	r30, Y+13	; 0x0d
    4ba6:	fe 85       	ldd	r31, Y+14	; 0x0e
    4ba8:	96 01       	movw	r18, r12
    4baa:	26 5e       	subi	r18, 0xE6	; 230
    4bac:	3f 4f       	sbci	r19, 0xFF	; 255
    4bae:	5a 96       	adiw	r26, 0x1a	; 26
    4bb0:	8d 91       	ld	r24, X+
    4bb2:	9c 91       	ld	r25, X
    4bb4:	5b 97       	sbiw	r26, 0x1b	; 27
    4bb6:	7c 01       	movw	r14, r24
    4bb8:	00 e0       	ldi	r16, 0x00	; 0
    4bba:	10 e0       	ldi	r17, 0x00	; 0
    4bbc:	80 81       	ld	r24, Z
    4bbe:	83 30       	cpi	r24, 0x03	; 3
    4bc0:	69 f4       	brne	.+26     	; 0x4bdc <f_open+0x14a>
    4bc2:	54 96       	adiw	r26, 0x14	; 20
    4bc4:	8d 91       	ld	r24, X+
    4bc6:	9c 91       	ld	r25, X
    4bc8:	55 97       	sbiw	r26, 0x15	; 21
    4bca:	a0 e0       	ldi	r26, 0x00	; 0
    4bcc:	b0 e0       	ldi	r27, 0x00	; 0
    4bce:	dc 01       	movw	r26, r24
    4bd0:	99 27       	eor	r25, r25
    4bd2:	88 27       	eor	r24, r24
    4bd4:	e8 2a       	or	r14, r24
    4bd6:	f9 2a       	or	r15, r25
    4bd8:	0a 2b       	or	r16, r26
    4bda:	1b 2b       	or	r17, r27
    4bdc:	d9 01       	movw	r26, r18
    4bde:	1d 92       	st	X+, r1
    4be0:	1c 92       	st	X, r1
    4be2:	d6 01       	movw	r26, r12
    4be4:	55 96       	adiw	r26, 0x15	; 21
    4be6:	1c 92       	st	X, r1
    4be8:	1e 92       	st	-X, r1
    4bea:	54 97       	sbiw	r26, 0x14	; 20
    4bec:	81 e0       	ldi	r24, 0x01	; 1
    4bee:	84 83       	std	Z+4, r24	; 0x04
    4bf0:	e1 14       	cp	r14, r1
    4bf2:	f1 04       	cpc	r15, r1
    4bf4:	01 05       	cpc	r16, r1
    4bf6:	11 05       	cpc	r17, r1
    4bf8:	69 f1       	breq	.+90     	; 0x4c54 <f_open+0x1c2>
    4bfa:	82 a4       	ldd	r8, Z+42	; 0x2a
    4bfc:	93 a4       	ldd	r9, Z+43	; 0x2b
    4bfe:	a4 a4       	ldd	r10, Z+44	; 0x2c
    4c00:	b5 a4       	ldd	r11, Z+45	; 0x2d
    4c02:	cf 01       	movw	r24, r30
    4c04:	b8 01       	movw	r22, r16
    4c06:	a7 01       	movw	r20, r14
    4c08:	0e 94 a5 1f 	call	0x3f4a	; 0x3f4a <remove_chain>
    4c0c:	88 23       	and	r24, r24
    4c0e:	09 f0       	breq	.+2      	; 0x4c12 <f_open+0x180>
    4c10:	af c0       	rjmp	.+350    	; 0x4d70 <f_open+0x2de>
    4c12:	ed 85       	ldd	r30, Y+13	; 0x0d
    4c14:	fe 85       	ldd	r31, Y+14	; 0x0e
    4c16:	08 94       	sec
    4c18:	e1 08       	sbc	r14, r1
    4c1a:	f1 08       	sbc	r15, r1
    4c1c:	01 09       	sbc	r16, r1
    4c1e:	11 09       	sbc	r17, r1
    4c20:	e2 86       	std	Z+10, r14	; 0x0a
    4c22:	f3 86       	std	Z+11, r15	; 0x0b
    4c24:	04 87       	std	Z+12, r16	; 0x0c
    4c26:	15 87       	std	Z+13, r17	; 0x0d
    4c28:	cf 01       	movw	r24, r30
    4c2a:	b5 01       	movw	r22, r10
    4c2c:	a4 01       	movw	r20, r8
    4c2e:	0e 94 7b 18 	call	0x30f6	; 0x30f6 <move_window>
    4c32:	28 2f       	mov	r18, r24
    4c34:	88 23       	and	r24, r24
    4c36:	71 f0       	breq	.+28     	; 0x4c54 <f_open+0x1c2>
    4c38:	9d c0       	rjmp	.+314    	; 0x4d74 <f_open+0x2e2>
    4c3a:	22 23       	and	r18, r18
    4c3c:	09 f0       	breq	.+2      	; 0x4c40 <f_open+0x1ae>
    4c3e:	9a c0       	rjmp	.+308    	; 0x4d74 <f_open+0x2e2>
    4c40:	f6 01       	movw	r30, r12
    4c42:	83 85       	ldd	r24, Z+11	; 0x0b
    4c44:	84 ff       	sbrs	r24, 4
    4c46:	02 c0       	rjmp	.+4      	; 0x4c4c <f_open+0x1ba>
    4c48:	84 e0       	ldi	r24, 0x04	; 4
    4c4a:	92 c0       	rjmp	.+292    	; 0x4d70 <f_open+0x2de>
    4c4c:	51 fe       	sbrs	r5, 1
    4c4e:	02 c0       	rjmp	.+4      	; 0x4c54 <f_open+0x1c2>
    4c50:	80 fd       	sbrc	r24, 0
    4c52:	8d c0       	rjmp	.+282    	; 0x4d6e <f_open+0x2dc>
    4c54:	53 fe       	sbrs	r5, 3
    4c56:	02 c0       	rjmp	.+4      	; 0x4c5c <f_open+0x1ca>
    4c58:	f0 e2       	ldi	r31, 0x20	; 32
    4c5a:	5f 2a       	or	r5, r31
    4c5c:	ed 85       	ldd	r30, Y+13	; 0x0d
    4c5e:	fe 85       	ldd	r31, Y+14	; 0x0e
    4c60:	82 a5       	ldd	r24, Z+42	; 0x2a
    4c62:	93 a5       	ldd	r25, Z+43	; 0x2b
    4c64:	a4 a5       	ldd	r26, Z+44	; 0x2c
    4c66:	b5 a5       	ldd	r27, Z+45	; 0x2d
    4c68:	f3 01       	movw	r30, r6
    4c6a:	82 8f       	std	Z+26, r24	; 0x1a
    4c6c:	93 8f       	std	Z+27, r25	; 0x1b
    4c6e:	a4 8f       	std	Z+28, r26	; 0x1c
    4c70:	b5 8f       	std	Z+29, r27	; 0x1d
    4c72:	d7 8e       	std	Z+31, r13	; 0x1f
    4c74:	c6 8e       	std	Z+30, r12	; 0x1e
    4c76:	60 e0       	ldi	r22, 0x00	; 0
    4c78:	70 e0       	ldi	r23, 0x00	; 0
    4c7a:	85 2d       	mov	r24, r5
    4c7c:	8e 7f       	andi	r24, 0xFE	; 254
    4c7e:	11 f0       	breq	.+4      	; 0x4c84 <f_open+0x1f2>
    4c80:	61 e0       	ldi	r22, 0x01	; 1
    4c82:	70 e0       	ldi	r23, 0x00	; 0
    4c84:	ce 01       	movw	r24, r28
    4c86:	0d 96       	adiw	r24, 0x0d	; 13
    4c88:	0e 94 b9 16 	call	0x2d72	; 0x2d72 <inc_lock>
    4c8c:	d3 01       	movw	r26, r6
    4c8e:	91 96       	adiw	r26, 0x21	; 33
    4c90:	9c 93       	st	X, r25
    4c92:	8e 93       	st	-X, r24
    4c94:	90 97       	sbiw	r26, 0x20	; 32
    4c96:	89 2b       	or	r24, r25
    4c98:	19 f4       	brne	.+6      	; 0x4ca0 <f_open+0x20e>
    4c9a:	02 e0       	ldi	r16, 0x02	; 2
    4c9c:	40 2e       	mov	r4, r16
    4c9e:	47 c0       	rjmp	.+142    	; 0x4d2e <f_open+0x29c>
    4ca0:	f3 01       	movw	r30, r6
    4ca2:	54 82       	std	Z+4, r5	; 0x04
    4ca4:	15 82       	std	Z+5, r1	; 0x05
    4ca6:	ed 85       	ldd	r30, Y+13	; 0x0d
    4ca8:	fe 85       	ldd	r31, Y+14	; 0x0e
    4caa:	d6 01       	movw	r26, r12
    4cac:	5a 96       	adiw	r26, 0x1a	; 26
    4cae:	8d 91       	ld	r24, X+
    4cb0:	9c 91       	ld	r25, X
    4cb2:	5b 97       	sbiw	r26, 0x1b	; 27
    4cb4:	9c 01       	movw	r18, r24
    4cb6:	40 e0       	ldi	r20, 0x00	; 0
    4cb8:	50 e0       	ldi	r21, 0x00	; 0
    4cba:	80 81       	ld	r24, Z
    4cbc:	83 30       	cpi	r24, 0x03	; 3
    4cbe:	69 f4       	brne	.+26     	; 0x4cda <f_open+0x248>
    4cc0:	54 96       	adiw	r26, 0x14	; 20
    4cc2:	8d 91       	ld	r24, X+
    4cc4:	9c 91       	ld	r25, X
    4cc6:	55 97       	sbiw	r26, 0x15	; 21
    4cc8:	a0 e0       	ldi	r26, 0x00	; 0
    4cca:	b0 e0       	ldi	r27, 0x00	; 0
    4ccc:	dc 01       	movw	r26, r24
    4cce:	99 27       	eor	r25, r25
    4cd0:	88 27       	eor	r24, r24
    4cd2:	28 2b       	or	r18, r24
    4cd4:	39 2b       	or	r19, r25
    4cd6:	4a 2b       	or	r20, r26
    4cd8:	5b 2b       	or	r21, r27
    4cda:	d3 01       	movw	r26, r6
    4cdc:	1e 96       	adiw	r26, 0x0e	; 14
    4cde:	2d 93       	st	X+, r18
    4ce0:	3d 93       	st	X+, r19
    4ce2:	4d 93       	st	X+, r20
    4ce4:	5c 93       	st	X, r21
    4ce6:	51 97       	sbiw	r26, 0x11	; 17
    4ce8:	d6 01       	movw	r26, r12
    4cea:	5c 96       	adiw	r26, 0x1c	; 28
    4cec:	2d 91       	ld	r18, X+
    4cee:	3d 91       	ld	r19, X+
    4cf0:	4d 91       	ld	r20, X+
    4cf2:	5c 91       	ld	r21, X
    4cf4:	5f 97       	sbiw	r26, 0x1f	; 31
    4cf6:	d3 01       	movw	r26, r6
    4cf8:	1a 96       	adiw	r26, 0x0a	; 10
    4cfa:	2d 93       	st	X+, r18
    4cfc:	3d 93       	st	X+, r19
    4cfe:	4d 93       	st	X+, r20
    4d00:	5c 93       	st	X, r21
    4d02:	1d 97       	sbiw	r26, 0x0d	; 13
    4d04:	16 96       	adiw	r26, 0x06	; 6
    4d06:	1d 92       	st	X+, r1
    4d08:	1d 92       	st	X+, r1
    4d0a:	1d 92       	st	X+, r1
    4d0c:	1c 92       	st	X, r1
    4d0e:	19 97       	sbiw	r26, 0x09	; 9
    4d10:	56 96       	adiw	r26, 0x16	; 22
    4d12:	1d 92       	st	X+, r1
    4d14:	1d 92       	st	X+, r1
    4d16:	1d 92       	st	X+, r1
    4d18:	1c 92       	st	X, r1
    4d1a:	59 97       	sbiw	r26, 0x19	; 25
    4d1c:	11 96       	adiw	r26, 0x01	; 1
    4d1e:	fc 93       	st	X, r31
    4d20:	ee 93       	st	-X, r30
    4d22:	86 81       	ldd	r24, Z+6	; 0x06
    4d24:	97 81       	ldd	r25, Z+7	; 0x07
    4d26:	13 96       	adiw	r26, 0x03	; 3
    4d28:	9c 93       	st	X, r25
    4d2a:	8e 93       	st	-X, r24
    4d2c:	12 97       	sbiw	r26, 0x02	; 2
    4d2e:	84 2d       	mov	r24, r4
    4d30:	a6 96       	adiw	r28, 0x26	; 38
    4d32:	0f b6       	in	r0, 0x3f	; 63
    4d34:	f8 94       	cli
    4d36:	de bf       	out	0x3e, r29	; 62
    4d38:	0f be       	out	0x3f, r0	; 63
    4d3a:	cd bf       	out	0x3d, r28	; 61
    4d3c:	cf 91       	pop	r28
    4d3e:	df 91       	pop	r29
    4d40:	1f 91       	pop	r17
    4d42:	0f 91       	pop	r16
    4d44:	ff 90       	pop	r15
    4d46:	ef 90       	pop	r14
    4d48:	df 90       	pop	r13
    4d4a:	cf 90       	pop	r12
    4d4c:	bf 90       	pop	r11
    4d4e:	af 90       	pop	r10
    4d50:	9f 90       	pop	r9
    4d52:	8f 90       	pop	r8
    4d54:	7f 90       	pop	r7
    4d56:	6f 90       	pop	r6
    4d58:	5f 90       	pop	r5
    4d5a:	4f 90       	pop	r4
    4d5c:	08 95       	ret
    4d5e:	ce 01       	movw	r24, r28
    4d60:	0d 96       	adiw	r24, 0x0d	; 13
    4d62:	0e 94 fa 24 	call	0x49f4	; 0x49f4 <dir_register>
    4d66:	28 2f       	mov	r18, r24
    4d68:	fa ce       	rjmp	.-524    	; 0x4b5e <f_open+0xcc>
    4d6a:	28 e0       	ldi	r18, 0x08	; 8
    4d6c:	03 c0       	rjmp	.+6      	; 0x4d74 <f_open+0x2e2>
    4d6e:	87 e0       	ldi	r24, 0x07	; 7
    4d70:	48 2e       	mov	r4, r24
    4d72:	dd cf       	rjmp	.-70     	; 0x4d2e <f_open+0x29c>
    4d74:	42 2e       	mov	r4, r18
    4d76:	db cf       	rjmp	.-74     	; 0x4d2e <f_open+0x29c>

00004d78 <dir_read>:
    4d78:	0f 93       	push	r16
    4d7a:	1f 93       	push	r17
    4d7c:	cf 93       	push	r28
    4d7e:	df 93       	push	r29
    4d80:	ec 01       	movw	r28, r24
    4d82:	8b 01       	movw	r16, r22
    4d84:	84 e0       	ldi	r24, 0x04	; 4
    4d86:	25 c0       	rjmp	.+74     	; 0x4dd2 <dir_read+0x5a>
    4d88:	88 81       	ld	r24, Y
    4d8a:	99 81       	ldd	r25, Y+1	; 0x01
    4d8c:	0e 94 7b 18 	call	0x30f6	; 0x30f6 <move_window>
    4d90:	88 23       	and	r24, r24
    4d92:	51 f5       	brne	.+84     	; 0x4de8 <dir_read+0x70>
    4d94:	ea 89       	ldd	r30, Y+18	; 0x12
    4d96:	fb 89       	ldd	r31, Y+19	; 0x13
    4d98:	90 81       	ld	r25, Z
    4d9a:	99 23       	and	r25, r25
    4d9c:	71 f1       	breq	.+92     	; 0x4dfa <dir_read+0x82>
    4d9e:	23 85       	ldd	r18, Z+11	; 0x0b
    4da0:	95 3e       	cpi	r25, 0xE5	; 229
    4da2:	81 f0       	breq	.+32     	; 0x4dc4 <dir_read+0x4c>
    4da4:	9e 32       	cpi	r25, 0x2E	; 46
    4da6:	71 f0       	breq	.+28     	; 0x4dc4 <dir_read+0x4c>
    4da8:	92 2f       	mov	r25, r18
    4daa:	9f 73       	andi	r25, 0x3F	; 63
    4dac:	9f 30       	cpi	r25, 0x0F	; 15
    4dae:	51 f0       	breq	.+20     	; 0x4dc4 <dir_read+0x4c>
    4db0:	20 e0       	ldi	r18, 0x00	; 0
    4db2:	30 e0       	ldi	r19, 0x00	; 0
    4db4:	9f 71       	andi	r25, 0x1F	; 31
    4db6:	98 30       	cpi	r25, 0x08	; 8
    4db8:	11 f4       	brne	.+4      	; 0x4dbe <dir_read+0x46>
    4dba:	21 e0       	ldi	r18, 0x01	; 1
    4dbc:	30 e0       	ldi	r19, 0x00	; 0
    4dbe:	20 17       	cp	r18, r16
    4dc0:	31 07       	cpc	r19, r17
    4dc2:	b1 f0       	breq	.+44     	; 0x4df0 <dir_read+0x78>
    4dc4:	ce 01       	movw	r24, r28
    4dc6:	60 e0       	ldi	r22, 0x00	; 0
    4dc8:	70 e0       	ldi	r23, 0x00	; 0
    4dca:	0e 94 42 21 	call	0x4284	; 0x4284 <dir_next>
    4dce:	88 23       	and	r24, r24
    4dd0:	59 f4       	brne	.+22     	; 0x4de8 <dir_read+0x70>
    4dd2:	4e 85       	ldd	r20, Y+14	; 0x0e
    4dd4:	5f 85       	ldd	r21, Y+15	; 0x0f
    4dd6:	68 89       	ldd	r22, Y+16	; 0x10
    4dd8:	79 89       	ldd	r23, Y+17	; 0x11
    4dda:	41 15       	cp	r20, r1
    4ddc:	51 05       	cpc	r21, r1
    4dde:	61 05       	cpc	r22, r1
    4de0:	71 05       	cpc	r23, r1
    4de2:	91 f6       	brne	.-92     	; 0x4d88 <dir_read+0x10>
    4de4:	88 23       	and	r24, r24
    4de6:	21 f0       	breq	.+8      	; 0x4df0 <dir_read+0x78>
    4de8:	1e 86       	std	Y+14, r1	; 0x0e
    4dea:	1f 86       	std	Y+15, r1	; 0x0f
    4dec:	18 8a       	std	Y+16, r1	; 0x10
    4dee:	19 8a       	std	Y+17, r1	; 0x11
    4df0:	df 91       	pop	r29
    4df2:	cf 91       	pop	r28
    4df4:	1f 91       	pop	r17
    4df6:	0f 91       	pop	r16
    4df8:	08 95       	ret
    4dfa:	84 e0       	ldi	r24, 0x04	; 4
    4dfc:	f5 cf       	rjmp	.-22     	; 0x4de8 <dir_read+0x70>

00004dfe <f_readdir>:
    4dfe:	ef 92       	push	r14
    4e00:	ff 92       	push	r15
    4e02:	0f 93       	push	r16
    4e04:	1f 93       	push	r17
    4e06:	df 93       	push	r29
    4e08:	cf 93       	push	r28
    4e0a:	cd b7       	in	r28, 0x3d	; 61
    4e0c:	de b7       	in	r29, 0x3e	; 62
    4e0e:	2c 97       	sbiw	r28, 0x0c	; 12
    4e10:	0f b6       	in	r0, 0x3f	; 63
    4e12:	f8 94       	cli
    4e14:	de bf       	out	0x3e, r29	; 62
    4e16:	0f be       	out	0x3f, r0	; 63
    4e18:	cd bf       	out	0x3d, r28	; 61
    4e1a:	8c 01       	movw	r16, r24
    4e1c:	7b 01       	movw	r14, r22
    4e1e:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <validate>
    4e22:	88 23       	and	r24, r24
    4e24:	71 f5       	brne	.+92     	; 0x4e82 <f_readdir+0x84>
    4e26:	e1 14       	cp	r14, r1
    4e28:	f1 04       	cpc	r15, r1
    4e2a:	31 f4       	brne	.+12     	; 0x4e38 <f_readdir+0x3a>
    4e2c:	c8 01       	movw	r24, r16
    4e2e:	60 e0       	ldi	r22, 0x00	; 0
    4e30:	70 e0       	ldi	r23, 0x00	; 0
    4e32:	0e 94 c6 1d 	call	0x3b8c	; 0x3b8c <dir_sdi>
    4e36:	25 c0       	rjmp	.+74     	; 0x4e82 <f_readdir+0x84>
    4e38:	ce 01       	movw	r24, r28
    4e3a:	01 96       	adiw	r24, 0x01	; 1
    4e3c:	f8 01       	movw	r30, r16
    4e3e:	95 8b       	std	Z+21, r25	; 0x15
    4e40:	84 8b       	std	Z+20, r24	; 0x14
    4e42:	c8 01       	movw	r24, r16
    4e44:	60 e0       	ldi	r22, 0x00	; 0
    4e46:	70 e0       	ldi	r23, 0x00	; 0
    4e48:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <dir_read>
    4e4c:	84 30       	cpi	r24, 0x04	; 4
    4e4e:	31 f4       	brne	.+12     	; 0x4e5c <f_readdir+0x5e>
    4e50:	f8 01       	movw	r30, r16
    4e52:	16 86       	std	Z+14, r1	; 0x0e
    4e54:	17 86       	std	Z+15, r1	; 0x0f
    4e56:	10 8a       	std	Z+16, r1	; 0x10
    4e58:	11 8a       	std	Z+17, r1	; 0x11
    4e5a:	02 c0       	rjmp	.+4      	; 0x4e60 <f_readdir+0x62>
    4e5c:	88 23       	and	r24, r24
    4e5e:	89 f4       	brne	.+34     	; 0x4e82 <f_readdir+0x84>
    4e60:	c8 01       	movw	r24, r16
    4e62:	b7 01       	movw	r22, r14
    4e64:	0e 94 5c 17 	call	0x2eb8	; 0x2eb8 <get_fileinfo>
    4e68:	c8 01       	movw	r24, r16
    4e6a:	60 e0       	ldi	r22, 0x00	; 0
    4e6c:	70 e0       	ldi	r23, 0x00	; 0
    4e6e:	0e 94 42 21 	call	0x4284	; 0x4284 <dir_next>
    4e72:	84 30       	cpi	r24, 0x04	; 4
    4e74:	31 f4       	brne	.+12     	; 0x4e82 <f_readdir+0x84>
    4e76:	f8 01       	movw	r30, r16
    4e78:	16 86       	std	Z+14, r1	; 0x0e
    4e7a:	17 86       	std	Z+15, r1	; 0x0f
    4e7c:	10 8a       	std	Z+16, r1	; 0x10
    4e7e:	11 8a       	std	Z+17, r1	; 0x11
    4e80:	80 e0       	ldi	r24, 0x00	; 0
    4e82:	2c 96       	adiw	r28, 0x0c	; 12
    4e84:	0f b6       	in	r0, 0x3f	; 63
    4e86:	f8 94       	cli
    4e88:	de bf       	out	0x3e, r29	; 62
    4e8a:	0f be       	out	0x3f, r0	; 63
    4e8c:	cd bf       	out	0x3d, r28	; 61
    4e8e:	cf 91       	pop	r28
    4e90:	df 91       	pop	r29
    4e92:	1f 91       	pop	r17
    4e94:	0f 91       	pop	r16
    4e96:	ff 90       	pop	r15
    4e98:	ef 90       	pop	r14
    4e9a:	08 95       	ret

00004e9c <f_truncate>:
    4e9c:	bf 92       	push	r11
    4e9e:	cf 92       	push	r12
    4ea0:	df 92       	push	r13
    4ea2:	ef 92       	push	r14
    4ea4:	ff 92       	push	r15
    4ea6:	0f 93       	push	r16
    4ea8:	1f 93       	push	r17
    4eaa:	cf 93       	push	r28
    4eac:	df 93       	push	r29
    4eae:	ec 01       	movw	r28, r24
    4eb0:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <validate>
    4eb4:	b8 2e       	mov	r11, r24
    4eb6:	88 23       	and	r24, r24
    4eb8:	09 f0       	breq	.+2      	; 0x4ebc <f_truncate+0x20>
    4eba:	83 c0       	rjmp	.+262    	; 0x4fc2 <f_truncate+0x126>
    4ebc:	bd 80       	ldd	r11, Y+5	; 0x05
    4ebe:	bb 20       	and	r11, r11
    4ec0:	09 f0       	breq	.+2      	; 0x4ec4 <f_truncate+0x28>
    4ec2:	7f c0       	rjmp	.+254    	; 0x4fc2 <f_truncate+0x126>
    4ec4:	6c 81       	ldd	r22, Y+4	; 0x04
    4ec6:	61 ff       	sbrs	r22, 1
    4ec8:	87 c0       	rjmp	.+270    	; 0x4fd8 <f_truncate+0x13c>
    4eca:	2e 81       	ldd	r18, Y+6	; 0x06
    4ecc:	3f 81       	ldd	r19, Y+7	; 0x07
    4ece:	48 85       	ldd	r20, Y+8	; 0x08
    4ed0:	59 85       	ldd	r21, Y+9	; 0x09
    4ed2:	8a 85       	ldd	r24, Y+10	; 0x0a
    4ed4:	9b 85       	ldd	r25, Y+11	; 0x0b
    4ed6:	ac 85       	ldd	r26, Y+12	; 0x0c
    4ed8:	bd 85       	ldd	r27, Y+13	; 0x0d
    4eda:	28 17       	cp	r18, r24
    4edc:	39 07       	cpc	r19, r25
    4ede:	4a 07       	cpc	r20, r26
    4ee0:	5b 07       	cpc	r21, r27
    4ee2:	08 f0       	brcs	.+2      	; 0x4ee6 <f_truncate+0x4a>
    4ee4:	6e c0       	rjmp	.+220    	; 0x4fc2 <f_truncate+0x126>
    4ee6:	2a 87       	std	Y+10, r18	; 0x0a
    4ee8:	3b 87       	std	Y+11, r19	; 0x0b
    4eea:	4c 87       	std	Y+12, r20	; 0x0c
    4eec:	5d 87       	std	Y+13, r21	; 0x0d
    4eee:	60 62       	ori	r22, 0x20	; 32
    4ef0:	6c 83       	std	Y+4, r22	; 0x04
    4ef2:	88 81       	ld	r24, Y
    4ef4:	99 81       	ldd	r25, Y+1	; 0x01
    4ef6:	21 15       	cp	r18, r1
    4ef8:	31 05       	cpc	r19, r1
    4efa:	41 05       	cpc	r20, r1
    4efc:	51 05       	cpc	r21, r1
    4efe:	59 f4       	brne	.+22     	; 0x4f16 <f_truncate+0x7a>
    4f00:	4e 85       	ldd	r20, Y+14	; 0x0e
    4f02:	5f 85       	ldd	r21, Y+15	; 0x0f
    4f04:	68 89       	ldd	r22, Y+16	; 0x10
    4f06:	79 89       	ldd	r23, Y+17	; 0x11
    4f08:	0e 94 a5 1f 	call	0x3f4a	; 0x3f4a <remove_chain>
    4f0c:	1e 86       	std	Y+14, r1	; 0x0e
    4f0e:	1f 86       	std	Y+15, r1	; 0x0f
    4f10:	18 8a       	std	Y+16, r1	; 0x10
    4f12:	19 8a       	std	Y+17, r1	; 0x11
    4f14:	38 c0       	rjmp	.+112    	; 0x4f86 <f_truncate+0xea>
    4f16:	4a 89       	ldd	r20, Y+18	; 0x12
    4f18:	5b 89       	ldd	r21, Y+19	; 0x13
    4f1a:	6c 89       	ldd	r22, Y+20	; 0x14
    4f1c:	7d 89       	ldd	r23, Y+21	; 0x15
    4f1e:	0e 94 f3 1c 	call	0x39e6	; 0x39e6 <get_fat>
    4f22:	6b 01       	movw	r12, r22
    4f24:	7c 01       	movw	r14, r24
    4f26:	8f ef       	ldi	r24, 0xFF	; 255
    4f28:	c8 16       	cp	r12, r24
    4f2a:	8f ef       	ldi	r24, 0xFF	; 255
    4f2c:	d8 06       	cpc	r13, r24
    4f2e:	8f ef       	ldi	r24, 0xFF	; 255
    4f30:	e8 06       	cpc	r14, r24
    4f32:	8f ef       	ldi	r24, 0xFF	; 255
    4f34:	f8 06       	cpc	r15, r24
    4f36:	11 f4       	brne	.+4      	; 0x4f3c <f_truncate+0xa0>
    4f38:	81 e0       	ldi	r24, 0x01	; 1
    4f3a:	41 c0       	rjmp	.+130    	; 0x4fbe <f_truncate+0x122>
    4f3c:	81 e0       	ldi	r24, 0x01	; 1
    4f3e:	c8 16       	cp	r12, r24
    4f40:	d1 04       	cpc	r13, r1
    4f42:	e1 04       	cpc	r14, r1
    4f44:	f1 04       	cpc	r15, r1
    4f46:	09 f4       	brne	.+2      	; 0x4f4a <f_truncate+0xae>
    4f48:	4a c0       	rjmp	.+148    	; 0x4fde <f_truncate+0x142>
    4f4a:	e8 81       	ld	r30, Y
    4f4c:	f9 81       	ldd	r31, Y+1	; 0x01
    4f4e:	82 89       	ldd	r24, Z+18	; 0x12
    4f50:	93 89       	ldd	r25, Z+19	; 0x13
    4f52:	a4 89       	ldd	r26, Z+20	; 0x14
    4f54:	b5 89       	ldd	r27, Z+21	; 0x15
    4f56:	c8 16       	cp	r12, r24
    4f58:	d9 06       	cpc	r13, r25
    4f5a:	ea 06       	cpc	r14, r26
    4f5c:	fb 06       	cpc	r15, r27
    4f5e:	a8 f4       	brcc	.+42     	; 0x4f8a <f_truncate+0xee>
    4f60:	4a 89       	ldd	r20, Y+18	; 0x12
    4f62:	5b 89       	ldd	r21, Y+19	; 0x13
    4f64:	6c 89       	ldd	r22, Y+20	; 0x14
    4f66:	7d 89       	ldd	r23, Y+21	; 0x15
    4f68:	cf 01       	movw	r24, r30
    4f6a:	0f ef       	ldi	r16, 0xFF	; 255
    4f6c:	1f ef       	ldi	r17, 0xFF	; 255
    4f6e:	2f ef       	ldi	r18, 0xFF	; 255
    4f70:	3f e0       	ldi	r19, 0x0F	; 15
    4f72:	0e 94 f8 1b 	call	0x37f0	; 0x37f0 <put_fat>
    4f76:	88 23       	and	r24, r24
    4f78:	11 f5       	brne	.+68     	; 0x4fbe <f_truncate+0x122>
    4f7a:	88 81       	ld	r24, Y
    4f7c:	99 81       	ldd	r25, Y+1	; 0x01
    4f7e:	b7 01       	movw	r22, r14
    4f80:	a6 01       	movw	r20, r12
    4f82:	0e 94 a5 1f 	call	0x3f4a	; 0x3f4a <remove_chain>
    4f86:	88 23       	and	r24, r24
    4f88:	d1 f4       	brne	.+52     	; 0x4fbe <f_truncate+0x122>
    4f8a:	8c 81       	ldd	r24, Y+4	; 0x04
    4f8c:	86 ff       	sbrs	r24, 6
    4f8e:	19 c0       	rjmp	.+50     	; 0x4fc2 <f_truncate+0x126>
    4f90:	e8 81       	ld	r30, Y
    4f92:	f9 81       	ldd	r31, Y+1	; 0x01
    4f94:	be 01       	movw	r22, r28
    4f96:	6e 5d       	subi	r22, 0xDE	; 222
    4f98:	7f 4f       	sbci	r23, 0xFF	; 255
    4f9a:	2e 89       	ldd	r18, Y+22	; 0x16
    4f9c:	3f 89       	ldd	r19, Y+23	; 0x17
    4f9e:	48 8d       	ldd	r20, Y+24	; 0x18
    4fa0:	59 8d       	ldd	r21, Y+25	; 0x19
    4fa2:	81 81       	ldd	r24, Z+1	; 0x01
    4fa4:	01 e0       	ldi	r16, 0x01	; 1
    4fa6:	10 e0       	ldi	r17, 0x00	; 0
    4fa8:	0e 94 25 38 	call	0x704a	; 0x704a <disk_write>
    4fac:	88 23       	and	r24, r24
    4fae:	19 f0       	breq	.+6      	; 0x4fb6 <f_truncate+0x11a>
    4fb0:	bb 24       	eor	r11, r11
    4fb2:	b3 94       	inc	r11
    4fb4:	05 c0       	rjmp	.+10     	; 0x4fc0 <f_truncate+0x124>
    4fb6:	8c 81       	ldd	r24, Y+4	; 0x04
    4fb8:	8f 7b       	andi	r24, 0xBF	; 191
    4fba:	8c 83       	std	Y+4, r24	; 0x04
    4fbc:	02 c0       	rjmp	.+4      	; 0x4fc2 <f_truncate+0x126>
    4fbe:	b8 2e       	mov	r11, r24
    4fc0:	bd 82       	std	Y+5, r11	; 0x05
    4fc2:	8b 2d       	mov	r24, r11
    4fc4:	df 91       	pop	r29
    4fc6:	cf 91       	pop	r28
    4fc8:	1f 91       	pop	r17
    4fca:	0f 91       	pop	r16
    4fcc:	ff 90       	pop	r15
    4fce:	ef 90       	pop	r14
    4fd0:	df 90       	pop	r13
    4fd2:	cf 90       	pop	r12
    4fd4:	bf 90       	pop	r11
    4fd6:	08 95       	ret
    4fd8:	77 e0       	ldi	r23, 0x07	; 7
    4fda:	b7 2e       	mov	r11, r23
    4fdc:	f2 cf       	rjmp	.-28     	; 0x4fc2 <f_truncate+0x126>
    4fde:	82 e0       	ldi	r24, 0x02	; 2
    4fe0:	ee cf       	rjmp	.-36     	; 0x4fbe <f_truncate+0x122>

00004fe2 <f_lseek>:
    4fe2:	2f 92       	push	r2
    4fe4:	3f 92       	push	r3
    4fe6:	4f 92       	push	r4
    4fe8:	5f 92       	push	r5
    4fea:	6f 92       	push	r6
    4fec:	7f 92       	push	r7
    4fee:	8f 92       	push	r8
    4ff0:	9f 92       	push	r9
    4ff2:	af 92       	push	r10
    4ff4:	bf 92       	push	r11
    4ff6:	cf 92       	push	r12
    4ff8:	df 92       	push	r13
    4ffa:	ef 92       	push	r14
    4ffc:	ff 92       	push	r15
    4ffe:	0f 93       	push	r16
    5000:	1f 93       	push	r17
    5002:	df 93       	push	r29
    5004:	cf 93       	push	r28
    5006:	00 d0       	rcall	.+0      	; 0x5008 <f_lseek+0x26>
    5008:	00 d0       	rcall	.+0      	; 0x500a <f_lseek+0x28>
    500a:	0f 92       	push	r0
    500c:	cd b7       	in	r28, 0x3d	; 61
    500e:	de b7       	in	r29, 0x3e	; 62
    5010:	9d 83       	std	Y+5, r25	; 0x05
    5012:	8c 83       	std	Y+4, r24	; 0x04
    5014:	5a 01       	movw	r10, r20
    5016:	6b 01       	movw	r12, r22
    5018:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <validate>
    501c:	89 83       	std	Y+1, r24	; 0x01
    501e:	88 23       	and	r24, r24
    5020:	09 f0       	breq	.+2      	; 0x5024 <f_lseek+0x42>
    5022:	ce c1       	rjmp	.+924    	; 0x53c0 <f_lseek+0x3de>
    5024:	ac 81       	ldd	r26, Y+4	; 0x04
    5026:	bd 81       	ldd	r27, Y+5	; 0x05
    5028:	15 96       	adiw	r26, 0x05	; 5
    502a:	8c 91       	ld	r24, X
    502c:	15 97       	sbiw	r26, 0x05	; 5
    502e:	88 23       	and	r24, r24
    5030:	09 f0       	breq	.+2      	; 0x5034 <f_lseek+0x52>
    5032:	c7 c1       	rjmp	.+910    	; 0x53c2 <f_lseek+0x3e0>
    5034:	1a 96       	adiw	r26, 0x0a	; 10
    5036:	6d 90       	ld	r6, X+
    5038:	7d 90       	ld	r7, X+
    503a:	8d 90       	ld	r8, X+
    503c:	9c 90       	ld	r9, X
    503e:	1d 97       	sbiw	r26, 0x0d	; 13
    5040:	6a 14       	cp	r6, r10
    5042:	7b 04       	cpc	r7, r11
    5044:	8c 04       	cpc	r8, r12
    5046:	9d 04       	cpc	r9, r13
    5048:	20 f4       	brcc	.+8      	; 0x5052 <f_lseek+0x70>
    504a:	14 96       	adiw	r26, 0x04	; 4
    504c:	8c 91       	ld	r24, X
    504e:	81 ff       	sbrs	r24, 1
    5050:	02 c0       	rjmp	.+4      	; 0x5056 <f_lseek+0x74>
    5052:	35 01       	movw	r6, r10
    5054:	46 01       	movw	r8, r12
    5056:	ec 81       	ldd	r30, Y+4	; 0x04
    5058:	fd 81       	ldd	r31, Y+5	; 0x05
    505a:	26 81       	ldd	r18, Z+6	; 0x06
    505c:	37 81       	ldd	r19, Z+7	; 0x07
    505e:	40 85       	ldd	r20, Z+8	; 0x08
    5060:	51 85       	ldd	r21, Z+9	; 0x09
    5062:	16 82       	std	Z+6, r1	; 0x06
    5064:	17 82       	std	Z+7, r1	; 0x07
    5066:	10 86       	std	Z+8, r1	; 0x08
    5068:	11 86       	std	Z+9, r1	; 0x09
    506a:	61 14       	cp	r6, r1
    506c:	71 04       	cpc	r7, r1
    506e:	81 04       	cpc	r8, r1
    5070:	91 04       	cpc	r9, r1
    5072:	09 f4       	brne	.+2      	; 0x5076 <f_lseek+0x94>
    5074:	39 c1       	rjmp	.+626    	; 0x52e8 <f_lseek+0x306>
    5076:	01 90       	ld	r0, Z+
    5078:	f0 81       	ld	r31, Z
    507a:	e0 2d       	mov	r30, r0
    507c:	fb 83       	std	Y+3, r31	; 0x03
    507e:	ea 83       	std	Y+2, r30	; 0x02
    5080:	82 81       	ldd	r24, Z+2	; 0x02
    5082:	a8 2e       	mov	r10, r24
    5084:	bb 24       	eor	r11, r11
    5086:	cc 24       	eor	r12, r12
    5088:	dd 24       	eor	r13, r13
    508a:	a9 e0       	ldi	r26, 0x09	; 9
    508c:	aa 0c       	add	r10, r10
    508e:	bb 1c       	adc	r11, r11
    5090:	cc 1c       	adc	r12, r12
    5092:	dd 1c       	adc	r13, r13
    5094:	aa 95       	dec	r26
    5096:	d1 f7       	brne	.-12     	; 0x508c <f_lseek+0xaa>
    5098:	21 15       	cp	r18, r1
    509a:	31 05       	cpc	r19, r1
    509c:	41 05       	cpc	r20, r1
    509e:	51 05       	cpc	r21, r1
    50a0:	c1 f1       	breq	.+112    	; 0x5112 <f_lseek+0x130>
    50a2:	19 01       	movw	r2, r18
    50a4:	2a 01       	movw	r4, r20
    50a6:	08 94       	sec
    50a8:	21 08       	sbc	r2, r1
    50aa:	31 08       	sbc	r3, r1
    50ac:	41 08       	sbc	r4, r1
    50ae:	51 08       	sbc	r5, r1
    50b0:	c4 01       	movw	r24, r8
    50b2:	b3 01       	movw	r22, r6
    50b4:	61 50       	subi	r22, 0x01	; 1
    50b6:	70 40       	sbci	r23, 0x00	; 0
    50b8:	80 40       	sbci	r24, 0x00	; 0
    50ba:	90 40       	sbci	r25, 0x00	; 0
    50bc:	a6 01       	movw	r20, r12
    50be:	95 01       	movw	r18, r10
    50c0:	0e 94 04 41 	call	0x8208	; 0x8208 <__udivmodsi4>
    50c4:	79 01       	movw	r14, r18
    50c6:	8a 01       	movw	r16, r20
    50c8:	c2 01       	movw	r24, r4
    50ca:	b1 01       	movw	r22, r2
    50cc:	a6 01       	movw	r20, r12
    50ce:	95 01       	movw	r18, r10
    50d0:	0e 94 04 41 	call	0x8208	; 0x8208 <__udivmodsi4>
    50d4:	e2 16       	cp	r14, r18
    50d6:	f3 06       	cpc	r15, r19
    50d8:	04 07       	cpc	r16, r20
    50da:	15 07       	cpc	r17, r21
    50dc:	d0 f0       	brcs	.+52     	; 0x5112 <f_lseek+0x130>
    50de:	88 27       	eor	r24, r24
    50e0:	99 27       	eor	r25, r25
    50e2:	dc 01       	movw	r26, r24
    50e4:	8a 19       	sub	r24, r10
    50e6:	9b 09       	sbc	r25, r11
    50e8:	ac 09       	sbc	r26, r12
    50ea:	bd 09       	sbc	r27, r13
    50ec:	82 21       	and	r24, r2
    50ee:	93 21       	and	r25, r3
    50f0:	a4 21       	and	r26, r4
    50f2:	b5 21       	and	r27, r5
    50f4:	ec 81       	ldd	r30, Y+4	; 0x04
    50f6:	fd 81       	ldd	r31, Y+5	; 0x05
    50f8:	86 83       	std	Z+6, r24	; 0x06
    50fa:	97 83       	std	Z+7, r25	; 0x07
    50fc:	a0 87       	std	Z+8, r26	; 0x08
    50fe:	b1 87       	std	Z+9, r27	; 0x09
    5100:	68 1a       	sub	r6, r24
    5102:	79 0a       	sbc	r7, r25
    5104:	8a 0a       	sbc	r8, r26
    5106:	9b 0a       	sbc	r9, r27
    5108:	42 89       	ldd	r20, Z+18	; 0x12
    510a:	53 89       	ldd	r21, Z+19	; 0x13
    510c:	64 89       	ldd	r22, Z+20	; 0x14
    510e:	75 89       	ldd	r23, Z+21	; 0x15
    5110:	34 c0       	rjmp	.+104    	; 0x517a <f_lseek+0x198>
    5112:	ac 81       	ldd	r26, Y+4	; 0x04
    5114:	bd 81       	ldd	r27, Y+5	; 0x05
    5116:	1e 96       	adiw	r26, 0x0e	; 14
    5118:	4d 91       	ld	r20, X+
    511a:	5d 91       	ld	r21, X+
    511c:	6d 91       	ld	r22, X+
    511e:	7c 91       	ld	r23, X
    5120:	51 97       	sbiw	r26, 0x11	; 17
    5122:	41 15       	cp	r20, r1
    5124:	51 05       	cpc	r21, r1
    5126:	61 05       	cpc	r22, r1
    5128:	71 05       	cpc	r23, r1
    512a:	f9 f4       	brne	.+62     	; 0x516a <f_lseek+0x188>
    512c:	8a 81       	ldd	r24, Y+2	; 0x02
    512e:	9b 81       	ldd	r25, Y+3	; 0x03
    5130:	40 e0       	ldi	r20, 0x00	; 0
    5132:	50 e0       	ldi	r21, 0x00	; 0
    5134:	60 e0       	ldi	r22, 0x00	; 0
    5136:	70 e0       	ldi	r23, 0x00	; 0
    5138:	0e 94 bb 1e 	call	0x3d76	; 0x3d76 <create_chain>
    513c:	ab 01       	movw	r20, r22
    513e:	bc 01       	movw	r22, r24
    5140:	41 30       	cpi	r20, 0x01	; 1
    5142:	51 05       	cpc	r21, r1
    5144:	61 05       	cpc	r22, r1
    5146:	71 05       	cpc	r23, r1
    5148:	09 f4       	brne	.+2      	; 0x514c <f_lseek+0x16a>
    514a:	52 c0       	rjmp	.+164    	; 0x51f0 <f_lseek+0x20e>
    514c:	4f 3f       	cpi	r20, 0xFF	; 255
    514e:	ff ef       	ldi	r31, 0xFF	; 255
    5150:	5f 07       	cpc	r21, r31
    5152:	ff ef       	ldi	r31, 0xFF	; 255
    5154:	6f 07       	cpc	r22, r31
    5156:	ff ef       	ldi	r31, 0xFF	; 255
    5158:	7f 07       	cpc	r23, r31
    515a:	09 f4       	brne	.+2      	; 0x515e <f_lseek+0x17c>
    515c:	f0 c0       	rjmp	.+480    	; 0x533e <f_lseek+0x35c>
    515e:	ec 81       	ldd	r30, Y+4	; 0x04
    5160:	fd 81       	ldd	r31, Y+5	; 0x05
    5162:	46 87       	std	Z+14, r20	; 0x0e
    5164:	57 87       	std	Z+15, r21	; 0x0f
    5166:	60 8b       	std	Z+16, r22	; 0x10
    5168:	71 8b       	std	Z+17, r23	; 0x11
    516a:	ac 81       	ldd	r26, Y+4	; 0x04
    516c:	bd 81       	ldd	r27, Y+5	; 0x05
    516e:	52 96       	adiw	r26, 0x12	; 18
    5170:	4d 93       	st	X+, r20
    5172:	5d 93       	st	X+, r21
    5174:	6d 93       	st	X+, r22
    5176:	7c 93       	st	X, r23
    5178:	55 97       	sbiw	r26, 0x15	; 21
    517a:	41 15       	cp	r20, r1
    517c:	51 05       	cpc	r21, r1
    517e:	61 05       	cpc	r22, r1
    5180:	71 05       	cpc	r23, r1
    5182:	09 f0       	breq	.+2      	; 0x5186 <f_lseek+0x1a4>
    5184:	50 c0       	rjmp	.+160    	; 0x5226 <f_lseek+0x244>
    5186:	b0 c0       	rjmp	.+352    	; 0x52e8 <f_lseek+0x306>
    5188:	ec 81       	ldd	r30, Y+4	; 0x04
    518a:	fd 81       	ldd	r31, Y+5	; 0x05
    518c:	84 81       	ldd	r24, Z+4	; 0x04
    518e:	20 81       	ld	r18, Z
    5190:	31 81       	ldd	r19, Z+1	; 0x01
    5192:	81 ff       	sbrs	r24, 1
    5194:	0d c0       	rjmp	.+26     	; 0x51b0 <f_lseek+0x1ce>
    5196:	c9 01       	movw	r24, r18
    5198:	0e 94 bb 1e 	call	0x3d76	; 0x3d76 <create_chain>
    519c:	ab 01       	movw	r20, r22
    519e:	bc 01       	movw	r22, r24
    51a0:	41 15       	cp	r20, r1
    51a2:	51 05       	cpc	r21, r1
    51a4:	61 05       	cpc	r22, r1
    51a6:	71 05       	cpc	r23, r1
    51a8:	41 f4       	brne	.+16     	; 0x51ba <f_lseek+0x1d8>
    51aa:	35 01       	movw	r6, r10
    51ac:	46 01       	movw	r8, r12
    51ae:	41 c0       	rjmp	.+130    	; 0x5232 <f_lseek+0x250>
    51b0:	c9 01       	movw	r24, r18
    51b2:	0e 94 f3 1c 	call	0x39e6	; 0x39e6 <get_fat>
    51b6:	ab 01       	movw	r20, r22
    51b8:	bc 01       	movw	r22, r24
    51ba:	4f 3f       	cpi	r20, 0xFF	; 255
    51bc:	ff ef       	ldi	r31, 0xFF	; 255
    51be:	5f 07       	cpc	r21, r31
    51c0:	ff ef       	ldi	r31, 0xFF	; 255
    51c2:	6f 07       	cpc	r22, r31
    51c4:	ff ef       	ldi	r31, 0xFF	; 255
    51c6:	7f 07       	cpc	r23, r31
    51c8:	09 f4       	brne	.+2      	; 0x51cc <f_lseek+0x1ea>
    51ca:	b9 c0       	rjmp	.+370    	; 0x533e <f_lseek+0x35c>
    51cc:	42 30       	cpi	r20, 0x02	; 2
    51ce:	51 05       	cpc	r21, r1
    51d0:	61 05       	cpc	r22, r1
    51d2:	71 05       	cpc	r23, r1
    51d4:	68 f0       	brcs	.+26     	; 0x51f0 <f_lseek+0x20e>
    51d6:	ac 81       	ldd	r26, Y+4	; 0x04
    51d8:	bd 81       	ldd	r27, Y+5	; 0x05
    51da:	ed 91       	ld	r30, X+
    51dc:	fc 91       	ld	r31, X
    51de:	82 89       	ldd	r24, Z+18	; 0x12
    51e0:	93 89       	ldd	r25, Z+19	; 0x13
    51e2:	a4 89       	ldd	r26, Z+20	; 0x14
    51e4:	b5 89       	ldd	r27, Z+21	; 0x15
    51e6:	48 17       	cp	r20, r24
    51e8:	59 07       	cpc	r21, r25
    51ea:	6a 07       	cpc	r22, r26
    51ec:	7b 07       	cpc	r23, r27
    51ee:	10 f0       	brcs	.+4      	; 0x51f4 <f_lseek+0x212>
    51f0:	82 e0       	ldi	r24, 0x02	; 2
    51f2:	c2 c0       	rjmp	.+388    	; 0x5378 <f_lseek+0x396>
    51f4:	ac 81       	ldd	r26, Y+4	; 0x04
    51f6:	bd 81       	ldd	r27, Y+5	; 0x05
    51f8:	52 96       	adiw	r26, 0x12	; 18
    51fa:	4d 93       	st	X+, r20
    51fc:	5d 93       	st	X+, r21
    51fe:	6d 93       	st	X+, r22
    5200:	7c 93       	st	X, r23
    5202:	55 97       	sbiw	r26, 0x15	; 21
    5204:	fd 01       	movw	r30, r26
    5206:	86 81       	ldd	r24, Z+6	; 0x06
    5208:	97 81       	ldd	r25, Z+7	; 0x07
    520a:	a0 85       	ldd	r26, Z+8	; 0x08
    520c:	b1 85       	ldd	r27, Z+9	; 0x09
    520e:	8a 0d       	add	r24, r10
    5210:	9b 1d       	adc	r25, r11
    5212:	ac 1d       	adc	r26, r12
    5214:	bd 1d       	adc	r27, r13
    5216:	86 83       	std	Z+6, r24	; 0x06
    5218:	97 83       	std	Z+7, r25	; 0x07
    521a:	a0 87       	std	Z+8, r26	; 0x08
    521c:	b1 87       	std	Z+9, r27	; 0x09
    521e:	6a 18       	sub	r6, r10
    5220:	7b 08       	sbc	r7, r11
    5222:	8c 08       	sbc	r8, r12
    5224:	9d 08       	sbc	r9, r13
    5226:	a6 14       	cp	r10, r6
    5228:	b7 04       	cpc	r11, r7
    522a:	c8 04       	cpc	r12, r8
    522c:	d9 04       	cpc	r13, r9
    522e:	08 f4       	brcc	.+2      	; 0x5232 <f_lseek+0x250>
    5230:	ab cf       	rjmp	.-170    	; 0x5188 <f_lseek+0x1a6>
    5232:	ec 81       	ldd	r30, Y+4	; 0x04
    5234:	fd 81       	ldd	r31, Y+5	; 0x05
    5236:	86 81       	ldd	r24, Z+6	; 0x06
    5238:	97 81       	ldd	r25, Z+7	; 0x07
    523a:	a0 85       	ldd	r26, Z+8	; 0x08
    523c:	b1 85       	ldd	r27, Z+9	; 0x09
    523e:	86 0d       	add	r24, r6
    5240:	97 1d       	adc	r25, r7
    5242:	a8 1d       	adc	r26, r8
    5244:	b9 1d       	adc	r27, r9
    5246:	86 83       	std	Z+6, r24	; 0x06
    5248:	97 83       	std	Z+7, r25	; 0x07
    524a:	a0 87       	std	Z+8, r26	; 0x08
    524c:	b1 87       	std	Z+9, r27	; 0x09
    524e:	d4 01       	movw	r26, r8
    5250:	c3 01       	movw	r24, r6
    5252:	91 70       	andi	r25, 0x01	; 1
    5254:	a0 70       	andi	r26, 0x00	; 0
    5256:	b0 70       	andi	r27, 0x00	; 0
    5258:	00 97       	sbiw	r24, 0x00	; 0
    525a:	a1 05       	cpc	r26, r1
    525c:	b1 05       	cpc	r27, r1
    525e:	09 f4       	brne	.+2      	; 0x5262 <f_lseek+0x280>
    5260:	43 c0       	rjmp	.+134    	; 0x52e8 <f_lseek+0x306>
    5262:	00 81       	ld	r16, Z
    5264:	11 81       	ldd	r17, Z+1	; 0x01
    5266:	fe ef       	ldi	r31, 0xFE	; 254
    5268:	af 2e       	mov	r10, r31
    526a:	ff ef       	ldi	r31, 0xFF	; 255
    526c:	bf 2e       	mov	r11, r31
    526e:	ff ef       	ldi	r31, 0xFF	; 255
    5270:	cf 2e       	mov	r12, r31
    5272:	ff ef       	ldi	r31, 0xFF	; 255
    5274:	df 2e       	mov	r13, r31
    5276:	a4 0e       	add	r10, r20
    5278:	b5 1e       	adc	r11, r21
    527a:	c6 1e       	adc	r12, r22
    527c:	d7 1e       	adc	r13, r23
    527e:	f8 01       	movw	r30, r16
    5280:	82 89       	ldd	r24, Z+18	; 0x12
    5282:	93 89       	ldd	r25, Z+19	; 0x13
    5284:	a4 89       	ldd	r26, Z+20	; 0x14
    5286:	b5 89       	ldd	r27, Z+21	; 0x15
    5288:	02 97       	sbiw	r24, 0x02	; 2
    528a:	a1 09       	sbc	r26, r1
    528c:	b1 09       	sbc	r27, r1
    528e:	a8 16       	cp	r10, r24
    5290:	b9 06       	cpc	r11, r25
    5292:	ca 06       	cpc	r12, r26
    5294:	db 06       	cpc	r13, r27
    5296:	c0 f4       	brcc	.+48     	; 0x52c8 <f_lseek+0x2e6>
    5298:	22 81       	ldd	r18, Z+2	; 0x02
    529a:	30 e0       	ldi	r19, 0x00	; 0
    529c:	40 e0       	ldi	r20, 0x00	; 0
    529e:	50 e0       	ldi	r21, 0x00	; 0
    52a0:	c6 01       	movw	r24, r12
    52a2:	b5 01       	movw	r22, r10
    52a4:	0e 94 b2 40 	call	0x8164	; 0x8164 <__mulsi3>
    52a8:	9b 01       	movw	r18, r22
    52aa:	ac 01       	movw	r20, r24
    52ac:	f8 01       	movw	r30, r16
    52ae:	86 a1       	ldd	r24, Z+38	; 0x26
    52b0:	97 a1       	ldd	r25, Z+39	; 0x27
    52b2:	a0 a5       	ldd	r26, Z+40	; 0x28
    52b4:	b1 a5       	ldd	r27, Z+41	; 0x29
    52b6:	28 0f       	add	r18, r24
    52b8:	39 1f       	adc	r19, r25
    52ba:	4a 1f       	adc	r20, r26
    52bc:	5b 1f       	adc	r21, r27
    52be:	21 15       	cp	r18, r1
    52c0:	31 05       	cpc	r19, r1
    52c2:	41 05       	cpc	r20, r1
    52c4:	51 05       	cpc	r21, r1
    52c6:	11 f4       	brne	.+4      	; 0x52cc <f_lseek+0x2ea>
    52c8:	82 e0       	ldi	r24, 0x02	; 2
    52ca:	3a c0       	rjmp	.+116    	; 0x5340 <f_lseek+0x35e>
    52cc:	64 01       	movw	r12, r8
    52ce:	53 01       	movw	r10, r6
    52d0:	e9 e0       	ldi	r30, 0x09	; 9
    52d2:	d6 94       	lsr	r13
    52d4:	c7 94       	ror	r12
    52d6:	b7 94       	ror	r11
    52d8:	a7 94       	ror	r10
    52da:	ea 95       	dec	r30
    52dc:	d1 f7       	brne	.-12     	; 0x52d2 <f_lseek+0x2f0>
    52de:	a2 0e       	add	r10, r18
    52e0:	b3 1e       	adc	r11, r19
    52e2:	c4 1e       	adc	r12, r20
    52e4:	d5 1e       	adc	r13, r21
    52e6:	03 c0       	rjmp	.+6      	; 0x52ee <f_lseek+0x30c>
    52e8:	aa 24       	eor	r10, r10
    52ea:	bb 24       	eor	r11, r11
    52ec:	65 01       	movw	r12, r10
    52ee:	ec 81       	ldd	r30, Y+4	; 0x04
    52f0:	fd 81       	ldd	r31, Y+5	; 0x05
    52f2:	86 81       	ldd	r24, Z+6	; 0x06
    52f4:	97 81       	ldd	r25, Z+7	; 0x07
    52f6:	a0 85       	ldd	r26, Z+8	; 0x08
    52f8:	b1 85       	ldd	r27, Z+9	; 0x09
    52fa:	91 70       	andi	r25, 0x01	; 1
    52fc:	a0 70       	andi	r26, 0x00	; 0
    52fe:	b0 70       	andi	r27, 0x00	; 0
    5300:	00 97       	sbiw	r24, 0x00	; 0
    5302:	a1 05       	cpc	r26, r1
    5304:	b1 05       	cpc	r27, r1
    5306:	09 f4       	brne	.+2      	; 0x530a <f_lseek+0x328>
    5308:	43 c0       	rjmp	.+134    	; 0x5390 <f_lseek+0x3ae>
    530a:	26 89       	ldd	r18, Z+22	; 0x16
    530c:	37 89       	ldd	r19, Z+23	; 0x17
    530e:	40 8d       	ldd	r20, Z+24	; 0x18
    5310:	51 8d       	ldd	r21, Z+25	; 0x19
    5312:	a2 16       	cp	r10, r18
    5314:	b3 06       	cpc	r11, r19
    5316:	c4 06       	cpc	r12, r20
    5318:	d5 06       	cpc	r13, r21
    531a:	d1 f1       	breq	.+116    	; 0x5390 <f_lseek+0x3ae>
    531c:	84 81       	ldd	r24, Z+4	; 0x04
    531e:	86 ff       	sbrs	r24, 6
    5320:	19 c0       	rjmp	.+50     	; 0x5354 <f_lseek+0x372>
    5322:	01 90       	ld	r0, Z+
    5324:	f0 81       	ld	r31, Z
    5326:	e0 2d       	mov	r30, r0
    5328:	6c 81       	ldd	r22, Y+4	; 0x04
    532a:	7d 81       	ldd	r23, Y+5	; 0x05
    532c:	6e 5d       	subi	r22, 0xDE	; 222
    532e:	7f 4f       	sbci	r23, 0xFF	; 255
    5330:	81 81       	ldd	r24, Z+1	; 0x01
    5332:	01 e0       	ldi	r16, 0x01	; 1
    5334:	10 e0       	ldi	r17, 0x00	; 0
    5336:	0e 94 25 38 	call	0x704a	; 0x704a <disk_write>
    533a:	88 23       	and	r24, r24
    533c:	31 f0       	breq	.+12     	; 0x534a <f_lseek+0x368>
    533e:	81 e0       	ldi	r24, 0x01	; 1
    5340:	ac 81       	ldd	r26, Y+4	; 0x04
    5342:	bd 81       	ldd	r27, Y+5	; 0x05
    5344:	15 96       	adiw	r26, 0x05	; 5
    5346:	8c 93       	st	X, r24
    5348:	3c c0       	rjmp	.+120    	; 0x53c2 <f_lseek+0x3e0>
    534a:	ec 81       	ldd	r30, Y+4	; 0x04
    534c:	fd 81       	ldd	r31, Y+5	; 0x05
    534e:	84 81       	ldd	r24, Z+4	; 0x04
    5350:	8f 7b       	andi	r24, 0xBF	; 191
    5352:	84 83       	std	Z+4, r24	; 0x04
    5354:	ac 81       	ldd	r26, Y+4	; 0x04
    5356:	bd 81       	ldd	r27, Y+5	; 0x05
    5358:	ed 91       	ld	r30, X+
    535a:	fc 91       	ld	r31, X
    535c:	11 97       	sbiw	r26, 0x01	; 1
    535e:	bd 01       	movw	r22, r26
    5360:	6e 5d       	subi	r22, 0xDE	; 222
    5362:	7f 4f       	sbci	r23, 0xFF	; 255
    5364:	81 81       	ldd	r24, Z+1	; 0x01
    5366:	a6 01       	movw	r20, r12
    5368:	95 01       	movw	r18, r10
    536a:	01 e0       	ldi	r16, 0x01	; 1
    536c:	10 e0       	ldi	r17, 0x00	; 0
    536e:	0e 94 cf 37 	call	0x6f9e	; 0x6f9e <disk_read>
    5372:	88 23       	and	r24, r24
    5374:	29 f0       	breq	.+10     	; 0x5380 <f_lseek+0x39e>
    5376:	81 e0       	ldi	r24, 0x01	; 1
    5378:	ec 81       	ldd	r30, Y+4	; 0x04
    537a:	fd 81       	ldd	r31, Y+5	; 0x05
    537c:	85 83       	std	Z+5, r24	; 0x05
    537e:	21 c0       	rjmp	.+66     	; 0x53c2 <f_lseek+0x3e0>
    5380:	ac 81       	ldd	r26, Y+4	; 0x04
    5382:	bd 81       	ldd	r27, Y+5	; 0x05
    5384:	56 96       	adiw	r26, 0x16	; 22
    5386:	ad 92       	st	X+, r10
    5388:	bd 92       	st	X+, r11
    538a:	cd 92       	st	X+, r12
    538c:	dc 92       	st	X, r13
    538e:	59 97       	sbiw	r26, 0x19	; 25
    5390:	ec 81       	ldd	r30, Y+4	; 0x04
    5392:	fd 81       	ldd	r31, Y+5	; 0x05
    5394:	26 81       	ldd	r18, Z+6	; 0x06
    5396:	37 81       	ldd	r19, Z+7	; 0x07
    5398:	40 85       	ldd	r20, Z+8	; 0x08
    539a:	51 85       	ldd	r21, Z+9	; 0x09
    539c:	82 85       	ldd	r24, Z+10	; 0x0a
    539e:	93 85       	ldd	r25, Z+11	; 0x0b
    53a0:	a4 85       	ldd	r26, Z+12	; 0x0c
    53a2:	b5 85       	ldd	r27, Z+13	; 0x0d
    53a4:	82 17       	cp	r24, r18
    53a6:	93 07       	cpc	r25, r19
    53a8:	a4 07       	cpc	r26, r20
    53aa:	b5 07       	cpc	r27, r21
    53ac:	48 f4       	brcc	.+18     	; 0x53c0 <f_lseek+0x3de>
    53ae:	22 87       	std	Z+10, r18	; 0x0a
    53b0:	33 87       	std	Z+11, r19	; 0x0b
    53b2:	44 87       	std	Z+12, r20	; 0x0c
    53b4:	55 87       	std	Z+13, r21	; 0x0d
    53b6:	84 81       	ldd	r24, Z+4	; 0x04
    53b8:	80 62       	ori	r24, 0x20	; 32
    53ba:	84 83       	std	Z+4, r24	; 0x04
    53bc:	80 e0       	ldi	r24, 0x00	; 0
    53be:	01 c0       	rjmp	.+2      	; 0x53c2 <f_lseek+0x3e0>
    53c0:	89 81       	ldd	r24, Y+1	; 0x01
    53c2:	0f 90       	pop	r0
    53c4:	0f 90       	pop	r0
    53c6:	0f 90       	pop	r0
    53c8:	0f 90       	pop	r0
    53ca:	0f 90       	pop	r0
    53cc:	cf 91       	pop	r28
    53ce:	df 91       	pop	r29
    53d0:	1f 91       	pop	r17
    53d2:	0f 91       	pop	r16
    53d4:	ff 90       	pop	r15
    53d6:	ef 90       	pop	r14
    53d8:	df 90       	pop	r13
    53da:	cf 90       	pop	r12
    53dc:	bf 90       	pop	r11
    53de:	af 90       	pop	r10
    53e0:	9f 90       	pop	r9
    53e2:	8f 90       	pop	r8
    53e4:	7f 90       	pop	r7
    53e6:	6f 90       	pop	r6
    53e8:	5f 90       	pop	r5
    53ea:	4f 90       	pop	r4
    53ec:	3f 90       	pop	r3
    53ee:	2f 90       	pop	r2
    53f0:	08 95       	ret

000053f2 <f_write>:
    53f2:	2f 92       	push	r2
    53f4:	3f 92       	push	r3
    53f6:	5f 92       	push	r5
    53f8:	6f 92       	push	r6
    53fa:	7f 92       	push	r7
    53fc:	8f 92       	push	r8
    53fe:	9f 92       	push	r9
    5400:	af 92       	push	r10
    5402:	bf 92       	push	r11
    5404:	cf 92       	push	r12
    5406:	df 92       	push	r13
    5408:	ef 92       	push	r14
    540a:	ff 92       	push	r15
    540c:	0f 93       	push	r16
    540e:	1f 93       	push	r17
    5410:	df 93       	push	r29
    5412:	cf 93       	push	r28
    5414:	00 d0       	rcall	.+0      	; 0x5416 <f_write+0x24>
    5416:	00 d0       	rcall	.+0      	; 0x5418 <f_write+0x26>
    5418:	00 d0       	rcall	.+0      	; 0x541a <f_write+0x28>
    541a:	cd b7       	in	r28, 0x3d	; 61
    541c:	de b7       	in	r29, 0x3e	; 62
    541e:	9e 83       	std	Y+6, r25	; 0x06
    5420:	8d 83       	std	Y+5, r24	; 0x05
    5422:	16 2f       	mov	r17, r22
    5424:	07 2f       	mov	r16, r23
    5426:	3a 01       	movw	r6, r20
    5428:	3c 83       	std	Y+4, r19	; 0x04
    542a:	2b 83       	std	Y+3, r18	; 0x03
    542c:	d9 01       	movw	r26, r18
    542e:	1d 92       	st	X+, r1
    5430:	1c 92       	st	X, r1
    5432:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <validate>
    5436:	88 2e       	mov	r8, r24
    5438:	88 23       	and	r24, r24
    543a:	09 f0       	breq	.+2      	; 0x543e <f_write+0x4c>
    543c:	eb c1       	rjmp	.+982    	; 0x5814 <f_write+0x422>
    543e:	ed 81       	ldd	r30, Y+5	; 0x05
    5440:	fe 81       	ldd	r31, Y+6	; 0x06
    5442:	85 80       	ldd	r8, Z+5	; 0x05
    5444:	88 20       	and	r8, r8
    5446:	09 f0       	breq	.+2      	; 0x544a <f_write+0x58>
    5448:	e5 c1       	rjmp	.+970    	; 0x5814 <f_write+0x422>
    544a:	84 81       	ldd	r24, Z+4	; 0x04
    544c:	81 fd       	sbrc	r24, 1
    544e:	03 c0       	rjmp	.+6      	; 0x5456 <f_write+0x64>
    5450:	77 e0       	ldi	r23, 0x07	; 7
    5452:	87 2e       	mov	r8, r23
    5454:	df c1       	rjmp	.+958    	; 0x5814 <f_write+0x422>
    5456:	ad 81       	ldd	r26, Y+5	; 0x05
    5458:	be 81       	ldd	r27, Y+6	; 0x06
    545a:	16 96       	adiw	r26, 0x06	; 6
    545c:	2d 91       	ld	r18, X+
    545e:	3d 91       	ld	r19, X+
    5460:	4d 91       	ld	r20, X+
    5462:	5c 91       	ld	r21, X
    5464:	19 97       	sbiw	r26, 0x09	; 9
    5466:	c3 01       	movw	r24, r6
    5468:	a0 e0       	ldi	r26, 0x00	; 0
    546a:	b0 e0       	ldi	r27, 0x00	; 0
    546c:	82 0f       	add	r24, r18
    546e:	93 1f       	adc	r25, r19
    5470:	a4 1f       	adc	r26, r20
    5472:	b5 1f       	adc	r27, r21
    5474:	82 17       	cp	r24, r18
    5476:	93 07       	cpc	r25, r19
    5478:	a4 07       	cpc	r26, r20
    547a:	b5 07       	cpc	r27, r21
    547c:	10 f4       	brcc	.+4      	; 0x5482 <f_write+0x90>
    547e:	66 24       	eor	r6, r6
    5480:	77 24       	eor	r7, r7
    5482:	81 2f       	mov	r24, r17
    5484:	90 2f       	mov	r25, r16
    5486:	9c 01       	movw	r18, r24
    5488:	19 01       	movw	r2, r18
    548a:	ed 81       	ldd	r30, Y+5	; 0x05
    548c:	fe 81       	ldd	r31, Y+6	; 0x06
    548e:	b2 96       	adiw	r30, 0x22	; 34
    5490:	fa 83       	std	Y+2, r31	; 0x02
    5492:	e9 83       	std	Y+1, r30	; 0x01
    5494:	9a c1       	rjmp	.+820    	; 0x57ca <f_write+0x3d8>
    5496:	ad 81       	ldd	r26, Y+5	; 0x05
    5498:	be 81       	ldd	r27, Y+6	; 0x06
    549a:	16 96       	adiw	r26, 0x06	; 6
    549c:	2d 91       	ld	r18, X+
    549e:	3d 91       	ld	r19, X+
    54a0:	4d 91       	ld	r20, X+
    54a2:	5c 91       	ld	r21, X
    54a4:	19 97       	sbiw	r26, 0x09	; 9
    54a6:	da 01       	movw	r26, r20
    54a8:	c9 01       	movw	r24, r18
    54aa:	91 70       	andi	r25, 0x01	; 1
    54ac:	a0 70       	andi	r26, 0x00	; 0
    54ae:	b0 70       	andi	r27, 0x00	; 0
    54b0:	00 97       	sbiw	r24, 0x00	; 0
    54b2:	a1 05       	cpc	r26, r1
    54b4:	b1 05       	cpc	r27, r1
    54b6:	09 f0       	breq	.+2      	; 0x54ba <f_write+0xc8>
    54b8:	4a c1       	rjmp	.+660    	; 0x574e <f_write+0x35c>
    54ba:	ad 81       	ldd	r26, Y+5	; 0x05
    54bc:	be 81       	ldd	r27, Y+6	; 0x06
    54be:	ed 91       	ld	r30, X+
    54c0:	fc 91       	ld	r31, X
    54c2:	da 01       	movw	r26, r20
    54c4:	c9 01       	movw	r24, r18
    54c6:	69 e0       	ldi	r22, 0x09	; 9
    54c8:	b6 95       	lsr	r27
    54ca:	a7 95       	ror	r26
    54cc:	97 95       	ror	r25
    54ce:	87 95       	ror	r24
    54d0:	6a 95       	dec	r22
    54d2:	d1 f7       	brne	.-12     	; 0x54c8 <f_write+0xd6>
    54d4:	92 80       	ldd	r9, Z+2	; 0x02
    54d6:	9a 94       	dec	r9
    54d8:	98 22       	and	r9, r24
    54da:	09 f0       	breq	.+2      	; 0x54de <f_write+0xec>
    54dc:	50 c0       	rjmp	.+160    	; 0x557e <f_write+0x18c>
    54de:	21 15       	cp	r18, r1
    54e0:	31 05       	cpc	r19, r1
    54e2:	41 05       	cpc	r20, r1
    54e4:	51 05       	cpc	r21, r1
    54e6:	99 f4       	brne	.+38     	; 0x550e <f_write+0x11c>
    54e8:	ad 81       	ldd	r26, Y+5	; 0x05
    54ea:	be 81       	ldd	r27, Y+6	; 0x06
    54ec:	1e 96       	adiw	r26, 0x0e	; 14
    54ee:	2d 91       	ld	r18, X+
    54f0:	3d 91       	ld	r19, X+
    54f2:	4d 91       	ld	r20, X+
    54f4:	5c 91       	ld	r21, X
    54f6:	51 97       	sbiw	r26, 0x11	; 17
    54f8:	21 15       	cp	r18, r1
    54fa:	31 05       	cpc	r19, r1
    54fc:	41 05       	cpc	r20, r1
    54fe:	51 05       	cpc	r21, r1
    5500:	c9 f4       	brne	.+50     	; 0x5534 <f_write+0x142>
    5502:	cf 01       	movw	r24, r30
    5504:	40 e0       	ldi	r20, 0x00	; 0
    5506:	50 e0       	ldi	r21, 0x00	; 0
    5508:	60 e0       	ldi	r22, 0x00	; 0
    550a:	70 e0       	ldi	r23, 0x00	; 0
    550c:	09 c0       	rjmp	.+18     	; 0x5520 <f_write+0x12e>
    550e:	ad 81       	ldd	r26, Y+5	; 0x05
    5510:	be 81       	ldd	r27, Y+6	; 0x06
    5512:	52 96       	adiw	r26, 0x12	; 18
    5514:	4d 91       	ld	r20, X+
    5516:	5d 91       	ld	r21, X+
    5518:	6d 91       	ld	r22, X+
    551a:	7c 91       	ld	r23, X
    551c:	55 97       	sbiw	r26, 0x15	; 21
    551e:	cf 01       	movw	r24, r30
    5520:	0e 94 bb 1e 	call	0x3d76	; 0x3d76 <create_chain>
    5524:	9b 01       	movw	r18, r22
    5526:	ac 01       	movw	r20, r24
    5528:	61 15       	cp	r22, r1
    552a:	71 05       	cpc	r23, r1
    552c:	81 05       	cpc	r24, r1
    552e:	91 05       	cpc	r25, r1
    5530:	09 f4       	brne	.+2      	; 0x5534 <f_write+0x142>
    5532:	4f c1       	rjmp	.+670    	; 0x57d2 <f_write+0x3e0>
    5534:	21 30       	cpi	r18, 0x01	; 1
    5536:	31 05       	cpc	r19, r1
    5538:	41 05       	cpc	r20, r1
    553a:	51 05       	cpc	r21, r1
    553c:	29 f4       	brne	.+10     	; 0x5548 <f_write+0x156>
    553e:	82 e0       	ldi	r24, 0x02	; 2
    5540:	ed 81       	ldd	r30, Y+5	; 0x05
    5542:	fe 81       	ldd	r31, Y+6	; 0x06
    5544:	85 83       	std	Z+5, r24	; 0x05
    5546:	72 c0       	rjmp	.+228    	; 0x562c <f_write+0x23a>
    5548:	2f 3f       	cpi	r18, 0xFF	; 255
    554a:	ff ef       	ldi	r31, 0xFF	; 255
    554c:	3f 07       	cpc	r19, r31
    554e:	ff ef       	ldi	r31, 0xFF	; 255
    5550:	4f 07       	cpc	r20, r31
    5552:	ff ef       	ldi	r31, 0xFF	; 255
    5554:	5f 07       	cpc	r21, r31
    5556:	09 f4       	brne	.+2      	; 0x555a <f_write+0x168>
    5558:	91 c0       	rjmp	.+290    	; 0x567c <f_write+0x28a>
    555a:	ed 81       	ldd	r30, Y+5	; 0x05
    555c:	fe 81       	ldd	r31, Y+6	; 0x06
    555e:	22 8b       	std	Z+18, r18	; 0x12
    5560:	33 8b       	std	Z+19, r19	; 0x13
    5562:	44 8b       	std	Z+20, r20	; 0x14
    5564:	55 8b       	std	Z+21, r21	; 0x15
    5566:	86 85       	ldd	r24, Z+14	; 0x0e
    5568:	97 85       	ldd	r25, Z+15	; 0x0f
    556a:	a0 89       	ldd	r26, Z+16	; 0x10
    556c:	b1 89       	ldd	r27, Z+17	; 0x11
    556e:	00 97       	sbiw	r24, 0x00	; 0
    5570:	a1 05       	cpc	r26, r1
    5572:	b1 05       	cpc	r27, r1
    5574:	21 f4       	brne	.+8      	; 0x557e <f_write+0x18c>
    5576:	26 87       	std	Z+14, r18	; 0x0e
    5578:	37 87       	std	Z+15, r19	; 0x0f
    557a:	40 8b       	std	Z+16, r20	; 0x10
    557c:	51 8b       	std	Z+17, r21	; 0x11
    557e:	ed 81       	ldd	r30, Y+5	; 0x05
    5580:	fe 81       	ldd	r31, Y+6	; 0x06
    5582:	84 81       	ldd	r24, Z+4	; 0x04
    5584:	86 ff       	sbrs	r24, 6
    5586:	1d c0       	rjmp	.+58     	; 0x55c2 <f_write+0x1d0>
    5588:	01 90       	ld	r0, Z+
    558a:	f0 81       	ld	r31, Z
    558c:	e0 2d       	mov	r30, r0
    558e:	ad 81       	ldd	r26, Y+5	; 0x05
    5590:	be 81       	ldd	r27, Y+6	; 0x06
    5592:	56 96       	adiw	r26, 0x16	; 22
    5594:	2d 91       	ld	r18, X+
    5596:	3d 91       	ld	r19, X+
    5598:	4d 91       	ld	r20, X+
    559a:	5c 91       	ld	r21, X
    559c:	59 97       	sbiw	r26, 0x19	; 25
    559e:	81 81       	ldd	r24, Z+1	; 0x01
    55a0:	69 81       	ldd	r22, Y+1	; 0x01
    55a2:	7a 81       	ldd	r23, Y+2	; 0x02
    55a4:	01 e0       	ldi	r16, 0x01	; 1
    55a6:	10 e0       	ldi	r17, 0x00	; 0
    55a8:	0e 94 25 38 	call	0x704a	; 0x704a <disk_write>
    55ac:	88 23       	and	r24, r24
    55ae:	09 f0       	breq	.+2      	; 0x55b2 <f_write+0x1c0>
    55b0:	bf c0       	rjmp	.+382    	; 0x5730 <f_write+0x33e>
    55b2:	ad 81       	ldd	r26, Y+5	; 0x05
    55b4:	be 81       	ldd	r27, Y+6	; 0x06
    55b6:	14 96       	adiw	r26, 0x04	; 4
    55b8:	8c 91       	ld	r24, X
    55ba:	14 97       	sbiw	r26, 0x04	; 4
    55bc:	8f 7b       	andi	r24, 0xBF	; 191
    55be:	14 96       	adiw	r26, 0x04	; 4
    55c0:	8c 93       	st	X, r24
    55c2:	ed 81       	ldd	r30, Y+5	; 0x05
    55c4:	fe 81       	ldd	r31, Y+6	; 0x06
    55c6:	00 81       	ld	r16, Z
    55c8:	11 81       	ldd	r17, Z+1	; 0x01
    55ca:	22 89       	ldd	r18, Z+18	; 0x12
    55cc:	33 89       	ldd	r19, Z+19	; 0x13
    55ce:	44 89       	ldd	r20, Z+20	; 0x14
    55d0:	55 89       	ldd	r21, Z+21	; 0x15
    55d2:	22 50       	subi	r18, 0x02	; 2
    55d4:	30 40       	sbci	r19, 0x00	; 0
    55d6:	40 40       	sbci	r20, 0x00	; 0
    55d8:	50 40       	sbci	r21, 0x00	; 0
    55da:	f8 01       	movw	r30, r16
    55dc:	82 89       	ldd	r24, Z+18	; 0x12
    55de:	93 89       	ldd	r25, Z+19	; 0x13
    55e0:	a4 89       	ldd	r26, Z+20	; 0x14
    55e2:	b5 89       	ldd	r27, Z+21	; 0x15
    55e4:	02 97       	sbiw	r24, 0x02	; 2
    55e6:	a1 09       	sbc	r26, r1
    55e8:	b1 09       	sbc	r27, r1
    55ea:	28 17       	cp	r18, r24
    55ec:	39 07       	cpc	r19, r25
    55ee:	4a 07       	cpc	r20, r26
    55f0:	5b 07       	cpc	r21, r27
    55f2:	b8 f4       	brcc	.+46     	; 0x5622 <f_write+0x230>
    55f4:	52 80       	ldd	r5, Z+2	; 0x02
    55f6:	65 2d       	mov	r22, r5
    55f8:	70 e0       	ldi	r23, 0x00	; 0
    55fa:	80 e0       	ldi	r24, 0x00	; 0
    55fc:	90 e0       	ldi	r25, 0x00	; 0
    55fe:	0e 94 b2 40 	call	0x8164	; 0x8164 <__mulsi3>
    5602:	9b 01       	movw	r18, r22
    5604:	ac 01       	movw	r20, r24
    5606:	f8 01       	movw	r30, r16
    5608:	86 a1       	ldd	r24, Z+38	; 0x26
    560a:	97 a1       	ldd	r25, Z+39	; 0x27
    560c:	a0 a5       	ldd	r26, Z+40	; 0x28
    560e:	b1 a5       	ldd	r27, Z+41	; 0x29
    5610:	28 0f       	add	r18, r24
    5612:	39 1f       	adc	r19, r25
    5614:	4a 1f       	adc	r20, r26
    5616:	5b 1f       	adc	r21, r27
    5618:	21 15       	cp	r18, r1
    561a:	31 05       	cpc	r19, r1
    561c:	41 05       	cpc	r20, r1
    561e:	51 05       	cpc	r21, r1
    5620:	41 f4       	brne	.+16     	; 0x5632 <f_write+0x240>
    5622:	82 e0       	ldi	r24, 0x02	; 2
    5624:	ad 81       	ldd	r26, Y+5	; 0x05
    5626:	be 81       	ldd	r27, Y+6	; 0x06
    5628:	15 96       	adiw	r26, 0x05	; 5
    562a:	8c 93       	st	X, r24
    562c:	92 e0       	ldi	r25, 0x02	; 2
    562e:	89 2e       	mov	r8, r25
    5630:	f1 c0       	rjmp	.+482    	; 0x5814 <f_write+0x422>
    5632:	69 01       	movw	r12, r18
    5634:	7a 01       	movw	r14, r20
    5636:	c9 0c       	add	r12, r9
    5638:	d1 1c       	adc	r13, r1
    563a:	e1 1c       	adc	r14, r1
    563c:	f1 1c       	adc	r15, r1
    563e:	53 01       	movw	r10, r6
    5640:	ab 2c       	mov	r10, r11
    5642:	bb 24       	eor	r11, r11
    5644:	a6 94       	lsr	r10
    5646:	a1 14       	cp	r10, r1
    5648:	b1 04       	cpc	r11, r1
    564a:	09 f4       	brne	.+2      	; 0x564e <f_write+0x25c>
    564c:	4c c0       	rjmp	.+152    	; 0x56e6 <f_write+0x2f4>
    564e:	29 2d       	mov	r18, r9
    5650:	30 e0       	ldi	r19, 0x00	; 0
    5652:	c5 01       	movw	r24, r10
    5654:	82 0f       	add	r24, r18
    5656:	93 1f       	adc	r25, r19
    5658:	65 2d       	mov	r22, r5
    565a:	70 e0       	ldi	r23, 0x00	; 0
    565c:	68 17       	cp	r22, r24
    565e:	79 07       	cpc	r23, r25
    5660:	18 f4       	brcc	.+6      	; 0x5668 <f_write+0x276>
    5662:	5b 01       	movw	r10, r22
    5664:	a2 1a       	sub	r10, r18
    5666:	b3 0a       	sbc	r11, r19
    5668:	f8 01       	movw	r30, r16
    566a:	81 81       	ldd	r24, Z+1	; 0x01
    566c:	b1 01       	movw	r22, r2
    566e:	a7 01       	movw	r20, r14
    5670:	96 01       	movw	r18, r12
    5672:	85 01       	movw	r16, r10
    5674:	0e 94 25 38 	call	0x704a	; 0x704a <disk_write>
    5678:	88 23       	and	r24, r24
    567a:	31 f0       	breq	.+12     	; 0x5688 <f_write+0x296>
    567c:	81 e0       	ldi	r24, 0x01	; 1
    567e:	ad 81       	ldd	r26, Y+5	; 0x05
    5680:	be 81       	ldd	r27, Y+6	; 0x06
    5682:	15 96       	adiw	r26, 0x05	; 5
    5684:	8c 93       	st	X, r24
    5686:	58 c0       	rjmp	.+176    	; 0x5738 <f_write+0x346>
    5688:	ed 81       	ldd	r30, Y+5	; 0x05
    568a:	fe 81       	ldd	r31, Y+6	; 0x06
    568c:	26 89       	ldd	r18, Z+22	; 0x16
    568e:	37 89       	ldd	r19, Z+23	; 0x17
    5690:	40 8d       	ldd	r20, Z+24	; 0x18
    5692:	51 8d       	ldd	r21, Z+25	; 0x19
    5694:	2c 19       	sub	r18, r12
    5696:	3d 09       	sbc	r19, r13
    5698:	4e 09       	sbc	r20, r14
    569a:	5f 09       	sbc	r21, r15
    569c:	c5 01       	movw	r24, r10
    569e:	a0 e0       	ldi	r26, 0x00	; 0
    56a0:	b0 e0       	ldi	r27, 0x00	; 0
    56a2:	28 17       	cp	r18, r24
    56a4:	39 07       	cpc	r19, r25
    56a6:	4a 07       	cpc	r20, r26
    56a8:	5b 07       	cpc	r21, r27
    56aa:	c0 f4       	brcc	.+48     	; 0x56dc <f_write+0x2ea>
    56ac:	19 e0       	ldi	r17, 0x09	; 9
    56ae:	22 0f       	add	r18, r18
    56b0:	33 1f       	adc	r19, r19
    56b2:	44 1f       	adc	r20, r20
    56b4:	55 1f       	adc	r21, r21
    56b6:	1a 95       	dec	r17
    56b8:	d1 f7       	brne	.-12     	; 0x56ae <f_write+0x2bc>
    56ba:	b1 01       	movw	r22, r2
    56bc:	62 0f       	add	r22, r18
    56be:	73 1f       	adc	r23, r19
    56c0:	89 81       	ldd	r24, Y+1	; 0x01
    56c2:	9a 81       	ldd	r25, Y+2	; 0x02
    56c4:	40 e0       	ldi	r20, 0x00	; 0
    56c6:	52 e0       	ldi	r21, 0x02	; 2
    56c8:	0e 94 54 16 	call	0x2ca8	; 0x2ca8 <mem_cpy>
    56cc:	ad 81       	ldd	r26, Y+5	; 0x05
    56ce:	be 81       	ldd	r27, Y+6	; 0x06
    56d0:	14 96       	adiw	r26, 0x04	; 4
    56d2:	8c 91       	ld	r24, X
    56d4:	14 97       	sbiw	r26, 0x04	; 4
    56d6:	8f 7b       	andi	r24, 0xBF	; 191
    56d8:	14 96       	adiw	r26, 0x04	; 4
    56da:	8c 93       	st	X, r24
    56dc:	85 01       	movw	r16, r10
    56de:	10 2f       	mov	r17, r16
    56e0:	00 27       	eor	r16, r16
    56e2:	11 0f       	add	r17, r17
    56e4:	55 c0       	rjmp	.+170    	; 0x5790 <f_write+0x39e>
    56e6:	ed 81       	ldd	r30, Y+5	; 0x05
    56e8:	fe 81       	ldd	r31, Y+6	; 0x06
    56ea:	86 89       	ldd	r24, Z+22	; 0x16
    56ec:	97 89       	ldd	r25, Z+23	; 0x17
    56ee:	a0 8d       	ldd	r26, Z+24	; 0x18
    56f0:	b1 8d       	ldd	r27, Z+25	; 0x19
    56f2:	8c 15       	cp	r24, r12
    56f4:	9d 05       	cpc	r25, r13
    56f6:	ae 05       	cpc	r26, r14
    56f8:	bf 05       	cpc	r27, r15
    56fa:	09 f1       	breq	.+66     	; 0x573e <f_write+0x34c>
    56fc:	26 81       	ldd	r18, Z+6	; 0x06
    56fe:	37 81       	ldd	r19, Z+7	; 0x07
    5700:	40 85       	ldd	r20, Z+8	; 0x08
    5702:	51 85       	ldd	r21, Z+9	; 0x09
    5704:	82 85       	ldd	r24, Z+10	; 0x0a
    5706:	93 85       	ldd	r25, Z+11	; 0x0b
    5708:	a4 85       	ldd	r26, Z+12	; 0x0c
    570a:	b5 85       	ldd	r27, Z+13	; 0x0d
    570c:	28 17       	cp	r18, r24
    570e:	39 07       	cpc	r19, r25
    5710:	4a 07       	cpc	r20, r26
    5712:	5b 07       	cpc	r21, r27
    5714:	a0 f4       	brcc	.+40     	; 0x573e <f_write+0x34c>
    5716:	d8 01       	movw	r26, r16
    5718:	11 96       	adiw	r26, 0x01	; 1
    571a:	8c 91       	ld	r24, X
    571c:	69 81       	ldd	r22, Y+1	; 0x01
    571e:	7a 81       	ldd	r23, Y+2	; 0x02
    5720:	a7 01       	movw	r20, r14
    5722:	96 01       	movw	r18, r12
    5724:	01 e0       	ldi	r16, 0x01	; 1
    5726:	10 e0       	ldi	r17, 0x00	; 0
    5728:	0e 94 cf 37 	call	0x6f9e	; 0x6f9e <disk_read>
    572c:	88 23       	and	r24, r24
    572e:	39 f0       	breq	.+14     	; 0x573e <f_write+0x34c>
    5730:	81 e0       	ldi	r24, 0x01	; 1
    5732:	ed 81       	ldd	r30, Y+5	; 0x05
    5734:	fe 81       	ldd	r31, Y+6	; 0x06
    5736:	85 83       	std	Z+5, r24	; 0x05
    5738:	88 24       	eor	r8, r8
    573a:	83 94       	inc	r8
    573c:	6b c0       	rjmp	.+214    	; 0x5814 <f_write+0x422>
    573e:	ad 81       	ldd	r26, Y+5	; 0x05
    5740:	be 81       	ldd	r27, Y+6	; 0x06
    5742:	56 96       	adiw	r26, 0x16	; 22
    5744:	cd 92       	st	X+, r12
    5746:	dd 92       	st	X+, r13
    5748:	ed 92       	st	X+, r14
    574a:	fc 92       	st	X, r15
    574c:	59 97       	sbiw	r26, 0x19	; 25
    574e:	ed 81       	ldd	r30, Y+5	; 0x05
    5750:	fe 81       	ldd	r31, Y+6	; 0x06
    5752:	26 81       	ldd	r18, Z+6	; 0x06
    5754:	37 81       	ldd	r19, Z+7	; 0x07
    5756:	40 85       	ldd	r20, Z+8	; 0x08
    5758:	51 85       	ldd	r21, Z+9	; 0x09
    575a:	c9 01       	movw	r24, r18
    575c:	91 70       	andi	r25, 0x01	; 1
    575e:	60 e0       	ldi	r22, 0x00	; 0
    5760:	72 e0       	ldi	r23, 0x02	; 2
    5762:	68 1b       	sub	r22, r24
    5764:	79 0b       	sbc	r23, r25
    5766:	83 01       	movw	r16, r6
    5768:	66 15       	cp	r22, r6
    576a:	77 05       	cpc	r23, r7
    576c:	08 f4       	brcc	.+2      	; 0x5770 <f_write+0x37e>
    576e:	8b 01       	movw	r16, r22
    5770:	c9 01       	movw	r24, r18
    5772:	91 70       	andi	r25, 0x01	; 1
    5774:	82 96       	adiw	r24, 0x22	; 34
    5776:	ad 81       	ldd	r26, Y+5	; 0x05
    5778:	be 81       	ldd	r27, Y+6	; 0x06
    577a:	8a 0f       	add	r24, r26
    577c:	9b 1f       	adc	r25, r27
    577e:	b1 01       	movw	r22, r2
    5780:	a8 01       	movw	r20, r16
    5782:	0e 94 54 16 	call	0x2ca8	; 0x2ca8 <mem_cpy>
    5786:	ed 81       	ldd	r30, Y+5	; 0x05
    5788:	fe 81       	ldd	r31, Y+6	; 0x06
    578a:	84 81       	ldd	r24, Z+4	; 0x04
    578c:	80 64       	ori	r24, 0x40	; 64
    578e:	84 83       	std	Z+4, r24	; 0x04
    5790:	20 0e       	add	r2, r16
    5792:	31 1e       	adc	r3, r17
    5794:	c8 01       	movw	r24, r16
    5796:	a0 e0       	ldi	r26, 0x00	; 0
    5798:	b0 e0       	ldi	r27, 0x00	; 0
    579a:	ed 81       	ldd	r30, Y+5	; 0x05
    579c:	fe 81       	ldd	r31, Y+6	; 0x06
    579e:	26 81       	ldd	r18, Z+6	; 0x06
    57a0:	37 81       	ldd	r19, Z+7	; 0x07
    57a2:	40 85       	ldd	r20, Z+8	; 0x08
    57a4:	51 85       	ldd	r21, Z+9	; 0x09
    57a6:	28 0f       	add	r18, r24
    57a8:	39 1f       	adc	r19, r25
    57aa:	4a 1f       	adc	r20, r26
    57ac:	5b 1f       	adc	r21, r27
    57ae:	26 83       	std	Z+6, r18	; 0x06
    57b0:	37 83       	std	Z+7, r19	; 0x07
    57b2:	40 87       	std	Z+8, r20	; 0x08
    57b4:	51 87       	std	Z+9, r21	; 0x09
    57b6:	eb 81       	ldd	r30, Y+3	; 0x03
    57b8:	fc 81       	ldd	r31, Y+4	; 0x04
    57ba:	80 81       	ld	r24, Z
    57bc:	91 81       	ldd	r25, Z+1	; 0x01
    57be:	80 0f       	add	r24, r16
    57c0:	91 1f       	adc	r25, r17
    57c2:	91 83       	std	Z+1, r25	; 0x01
    57c4:	80 83       	st	Z, r24
    57c6:	60 1a       	sub	r6, r16
    57c8:	71 0a       	sbc	r7, r17
    57ca:	61 14       	cp	r6, r1
    57cc:	71 04       	cpc	r7, r1
    57ce:	09 f0       	breq	.+2      	; 0x57d2 <f_write+0x3e0>
    57d0:	62 ce       	rjmp	.-828    	; 0x5496 <f_write+0xa4>
    57d2:	ad 81       	ldd	r26, Y+5	; 0x05
    57d4:	be 81       	ldd	r27, Y+6	; 0x06
    57d6:	16 96       	adiw	r26, 0x06	; 6
    57d8:	2d 91       	ld	r18, X+
    57da:	3d 91       	ld	r19, X+
    57dc:	4d 91       	ld	r20, X+
    57de:	5c 91       	ld	r21, X
    57e0:	19 97       	sbiw	r26, 0x09	; 9
    57e2:	1a 96       	adiw	r26, 0x0a	; 10
    57e4:	8d 91       	ld	r24, X+
    57e6:	9d 91       	ld	r25, X+
    57e8:	0d 90       	ld	r0, X+
    57ea:	bc 91       	ld	r27, X
    57ec:	a0 2d       	mov	r26, r0
    57ee:	82 17       	cp	r24, r18
    57f0:	93 07       	cpc	r25, r19
    57f2:	a4 07       	cpc	r26, r20
    57f4:	b5 07       	cpc	r27, r21
    57f6:	30 f4       	brcc	.+12     	; 0x5804 <f_write+0x412>
    57f8:	ed 81       	ldd	r30, Y+5	; 0x05
    57fa:	fe 81       	ldd	r31, Y+6	; 0x06
    57fc:	22 87       	std	Z+10, r18	; 0x0a
    57fe:	33 87       	std	Z+11, r19	; 0x0b
    5800:	44 87       	std	Z+12, r20	; 0x0c
    5802:	55 87       	std	Z+13, r21	; 0x0d
    5804:	ad 81       	ldd	r26, Y+5	; 0x05
    5806:	be 81       	ldd	r27, Y+6	; 0x06
    5808:	14 96       	adiw	r26, 0x04	; 4
    580a:	8c 91       	ld	r24, X
    580c:	14 97       	sbiw	r26, 0x04	; 4
    580e:	80 62       	ori	r24, 0x20	; 32
    5810:	14 96       	adiw	r26, 0x04	; 4
    5812:	8c 93       	st	X, r24
    5814:	88 2d       	mov	r24, r8
    5816:	26 96       	adiw	r28, 0x06	; 6
    5818:	0f b6       	in	r0, 0x3f	; 63
    581a:	f8 94       	cli
    581c:	de bf       	out	0x3e, r29	; 62
    581e:	0f be       	out	0x3f, r0	; 63
    5820:	cd bf       	out	0x3d, r28	; 61
    5822:	cf 91       	pop	r28
    5824:	df 91       	pop	r29
    5826:	1f 91       	pop	r17
    5828:	0f 91       	pop	r16
    582a:	ff 90       	pop	r15
    582c:	ef 90       	pop	r14
    582e:	df 90       	pop	r13
    5830:	cf 90       	pop	r12
    5832:	bf 90       	pop	r11
    5834:	af 90       	pop	r10
    5836:	9f 90       	pop	r9
    5838:	8f 90       	pop	r8
    583a:	7f 90       	pop	r7
    583c:	6f 90       	pop	r6
    583e:	5f 90       	pop	r5
    5840:	3f 90       	pop	r3
    5842:	2f 90       	pop	r2
    5844:	08 95       	ret

00005846 <putc_bfd>:
    5846:	ef 92       	push	r14
    5848:	ff 92       	push	r15
    584a:	0f 93       	push	r16
    584c:	1f 93       	push	r17
    584e:	df 93       	push	r29
    5850:	cf 93       	push	r28
    5852:	00 d0       	rcall	.+0      	; 0x5854 <putc_bfd+0xe>
    5854:	cd b7       	in	r28, 0x3d	; 61
    5856:	de b7       	in	r29, 0x3e	; 62
    5858:	7c 01       	movw	r14, r24
    585a:	16 2f       	mov	r17, r22
    585c:	6a 30       	cpi	r22, 0x0A	; 10
    585e:	19 f4       	brne	.+6      	; 0x5866 <putc_bfd+0x20>
    5860:	6d e0       	ldi	r22, 0x0D	; 13
    5862:	0e 94 23 2c 	call	0x5846	; 0x5846 <putc_bfd>
    5866:	f7 01       	movw	r30, r14
    5868:	42 81       	ldd	r20, Z+2	; 0x02
    586a:	53 81       	ldd	r21, Z+3	; 0x03
    586c:	57 fd       	sbrc	r21, 7
    586e:	27 c0       	rjmp	.+78     	; 0x58be <putc_bfd+0x78>
    5870:	e4 0f       	add	r30, r20
    5872:	f5 1f       	adc	r31, r21
    5874:	16 83       	std	Z+6, r17	; 0x06
    5876:	8a 01       	movw	r16, r20
    5878:	0f 5f       	subi	r16, 0xFF	; 255
    587a:	1f 4f       	sbci	r17, 0xFF	; 255
    587c:	0d 33       	cpi	r16, 0x3D	; 61
    587e:	11 05       	cpc	r17, r1
    5880:	b4 f0       	brlt	.+44     	; 0x58ae <putc_bfd+0x68>
    5882:	b7 01       	movw	r22, r14
    5884:	6a 5f       	subi	r22, 0xFA	; 250
    5886:	7f 4f       	sbci	r23, 0xFF	; 255
    5888:	f7 01       	movw	r30, r14
    588a:	80 81       	ld	r24, Z
    588c:	91 81       	ldd	r25, Z+1	; 0x01
    588e:	a8 01       	movw	r20, r16
    5890:	9e 01       	movw	r18, r28
    5892:	2f 5f       	subi	r18, 0xFF	; 255
    5894:	3f 4f       	sbci	r19, 0xFF	; 255
    5896:	0e 94 f9 29 	call	0x53f2	; 0x53f2 <f_write>
    589a:	89 81       	ldd	r24, Y+1	; 0x01
    589c:	9a 81       	ldd	r25, Y+2	; 0x02
    589e:	80 17       	cp	r24, r16
    58a0:	91 07       	cpc	r25, r17
    58a2:	19 f0       	breq	.+6      	; 0x58aa <putc_bfd+0x64>
    58a4:	0f ef       	ldi	r16, 0xFF	; 255
    58a6:	1f ef       	ldi	r17, 0xFF	; 255
    58a8:	02 c0       	rjmp	.+4      	; 0x58ae <putc_bfd+0x68>
    58aa:	00 e0       	ldi	r16, 0x00	; 0
    58ac:	10 e0       	ldi	r17, 0x00	; 0
    58ae:	f7 01       	movw	r30, r14
    58b0:	13 83       	std	Z+3, r17	; 0x03
    58b2:	02 83       	std	Z+2, r16	; 0x02
    58b4:	84 81       	ldd	r24, Z+4	; 0x04
    58b6:	95 81       	ldd	r25, Z+5	; 0x05
    58b8:	01 96       	adiw	r24, 0x01	; 1
    58ba:	95 83       	std	Z+5, r25	; 0x05
    58bc:	84 83       	std	Z+4, r24	; 0x04
    58be:	0f 90       	pop	r0
    58c0:	0f 90       	pop	r0
    58c2:	cf 91       	pop	r28
    58c4:	df 91       	pop	r29
    58c6:	1f 91       	pop	r17
    58c8:	0f 91       	pop	r16
    58ca:	ff 90       	pop	r15
    58cc:	ef 90       	pop	r14
    58ce:	08 95       	ret

000058d0 <f_printf>:
    58d0:	2f 92       	push	r2
    58d2:	3f 92       	push	r3
    58d4:	4f 92       	push	r4
    58d6:	5f 92       	push	r5
    58d8:	6f 92       	push	r6
    58da:	7f 92       	push	r7
    58dc:	8f 92       	push	r8
    58de:	9f 92       	push	r9
    58e0:	af 92       	push	r10
    58e2:	bf 92       	push	r11
    58e4:	cf 92       	push	r12
    58e6:	df 92       	push	r13
    58e8:	ef 92       	push	r14
    58ea:	ff 92       	push	r15
    58ec:	0f 93       	push	r16
    58ee:	1f 93       	push	r17
    58f0:	df 93       	push	r29
    58f2:	cf 93       	push	r28
    58f4:	cd b7       	in	r28, 0x3d	; 61
    58f6:	de b7       	in	r29, 0x3e	; 62
    58f8:	cc 55       	subi	r28, 0x5C	; 92
    58fa:	d0 40       	sbci	r29, 0x00	; 0
    58fc:	0f b6       	in	r0, 0x3f	; 63
    58fe:	f8 94       	cli
    5900:	de bf       	out	0x3e, r29	; 62
    5902:	0f be       	out	0x3f, r0	; 63
    5904:	cd bf       	out	0x3d, r28	; 61
    5906:	e5 96       	adiw	r28, 0x35	; 53
    5908:	6e ac       	ldd	r6, Y+62	; 0x3e
    590a:	7f ac       	ldd	r7, Y+63	; 0x3f
    590c:	e5 97       	sbiw	r28, 0x35	; 53
    590e:	e3 96       	adiw	r28, 0x33	; 51
    5910:	8e ad       	ldd	r24, Y+62	; 0x3e
    5912:	9f ad       	ldd	r25, Y+63	; 0x3f
    5914:	e3 97       	sbiw	r28, 0x33	; 51
    5916:	9c 8b       	std	Y+20, r25	; 0x14
    5918:	8b 8b       	std	Y+19, r24	; 0x13
    591a:	1e 8a       	std	Y+22, r1	; 0x16
    591c:	1d 8a       	std	Y+21, r1	; 0x15
    591e:	18 8e       	std	Y+24, r1	; 0x18
    5920:	1f 8a       	std	Y+23, r1	; 0x17
    5922:	65 e7       	ldi	r22, 0x75	; 117
    5924:	e6 2e       	mov	r14, r22
    5926:	f1 2c       	mov	r15, r1
    5928:	ec 0e       	add	r14, r28
    592a:	fd 1e       	adc	r15, r29
    592c:	5d e2       	ldi	r21, 0x2D	; 45
    592e:	25 2e       	mov	r2, r21
    5930:	01 c0       	rjmp	.+2      	; 0x5934 <f_printf+0x64>
    5932:	72 01       	movw	r14, r4
    5934:	d3 01       	movw	r26, r6
    5936:	6c 91       	ld	r22, X
    5938:	66 23       	and	r22, r22
    593a:	09 f4       	brne	.+2      	; 0x593e <f_printf+0x6e>
    593c:	7b c1       	rjmp	.+758    	; 0x5c34 <f_printf+0x364>
    593e:	08 94       	sec
    5940:	61 1c       	adc	r6, r1
    5942:	71 1c       	adc	r7, r1
    5944:	65 32       	cpi	r22, 0x25	; 37
    5946:	19 f0       	breq	.+6      	; 0x594e <f_printf+0x7e>
    5948:	ce 01       	movw	r24, r28
    594a:	43 96       	adiw	r24, 0x13	; 19
    594c:	ab c0       	rjmp	.+342    	; 0x5aa4 <f_printf+0x1d4>
    594e:	f3 01       	movw	r30, r6
    5950:	b1 90       	ld	r11, Z+
    5952:	3f 01       	movw	r6, r30
    5954:	f0 e3       	ldi	r31, 0x30	; 48
    5956:	bf 16       	cp	r11, r31
    5958:	31 f4       	brne	.+12     	; 0x5966 <f_printf+0x96>
    595a:	d3 01       	movw	r26, r6
    595c:	bd 90       	ld	r11, X+
    595e:	3d 01       	movw	r6, r26
    5960:	33 24       	eor	r3, r3
    5962:	33 94       	inc	r3
    5964:	0a c0       	rjmp	.+20     	; 0x597a <f_printf+0xaa>
    5966:	bd e2       	ldi	r27, 0x2D	; 45
    5968:	bb 16       	cp	r11, r27
    596a:	11 f0       	breq	.+4      	; 0x5970 <f_printf+0xa0>
    596c:	33 24       	eor	r3, r3
    596e:	05 c0       	rjmp	.+10     	; 0x597a <f_printf+0xaa>
    5970:	f3 01       	movw	r30, r6
    5972:	b1 90       	ld	r11, Z+
    5974:	3f 01       	movw	r6, r30
    5976:	42 e0       	ldi	r20, 0x02	; 2
    5978:	34 2e       	mov	r3, r20
    597a:	88 24       	eor	r8, r8
    597c:	99 24       	eor	r9, r9
    597e:	13 c0       	rjmp	.+38     	; 0x59a6 <f_printf+0xd6>
    5980:	c4 01       	movw	r24, r8
    5982:	33 e0       	ldi	r19, 0x03	; 3
    5984:	88 0f       	add	r24, r24
    5986:	99 1f       	adc	r25, r25
    5988:	3a 95       	dec	r19
    598a:	e1 f7       	brne	.-8      	; 0x5984 <f_printf+0xb4>
    598c:	88 0c       	add	r8, r8
    598e:	99 1c       	adc	r9, r9
    5990:	88 0e       	add	r8, r24
    5992:	99 1e       	adc	r9, r25
    5994:	8b 0c       	add	r8, r11
    5996:	91 1c       	adc	r9, r1
    5998:	80 ed       	ldi	r24, 0xD0	; 208
    599a:	9f ef       	ldi	r25, 0xFF	; 255
    599c:	88 0e       	add	r8, r24
    599e:	99 1e       	adc	r9, r25
    59a0:	d3 01       	movw	r26, r6
    59a2:	bd 90       	ld	r11, X+
    59a4:	3d 01       	movw	r6, r26
    59a6:	8b 2d       	mov	r24, r11
    59a8:	80 53       	subi	r24, 0x30	; 48
    59aa:	8a 30       	cpi	r24, 0x0A	; 10
    59ac:	48 f3       	brcs	.-46     	; 0x5980 <f_printf+0xb0>
    59ae:	bc e6       	ldi	r27, 0x6C	; 108
    59b0:	bb 16       	cp	r11, r27
    59b2:	19 f0       	breq	.+6      	; 0x59ba <f_printf+0xea>
    59b4:	ec e4       	ldi	r30, 0x4C	; 76
    59b6:	be 16       	cp	r11, r30
    59b8:	29 f4       	brne	.+10     	; 0x59c4 <f_printf+0xf4>
    59ba:	f4 e0       	ldi	r31, 0x04	; 4
    59bc:	3f 2a       	or	r3, r31
    59be:	d3 01       	movw	r26, r6
    59c0:	bd 90       	ld	r11, X+
    59c2:	3d 01       	movw	r6, r26
    59c4:	bb 20       	and	r11, r11
    59c6:	09 f4       	brne	.+2      	; 0x59ca <f_printf+0xfa>
    59c8:	35 c1       	rjmp	.+618    	; 0x5c34 <f_printf+0x364>
    59ca:	8b 2d       	mov	r24, r11
    59cc:	81 56       	subi	r24, 0x61	; 97
    59ce:	8a 31       	cpi	r24, 0x1A	; 26
    59d0:	10 f0       	brcs	.+4      	; 0x59d6 <f_printf+0x106>
    59d2:	ab 2d       	mov	r26, r11
    59d4:	02 c0       	rjmp	.+4      	; 0x59da <f_printf+0x10a>
    59d6:	ab 2d       	mov	r26, r11
    59d8:	a0 52       	subi	r26, 0x20	; 32
    59da:	af 34       	cpi	r26, 0x4F	; 79
    59dc:	a1 f0       	breq	.+40     	; 0x5a06 <f_printf+0x136>
    59de:	a0 35       	cpi	r26, 0x50	; 80
    59e0:	48 f4       	brcc	.+18     	; 0x59f4 <f_printf+0x124>
    59e2:	a3 34       	cpi	r26, 0x43	; 67
    59e4:	09 f4       	brne	.+2      	; 0x59e8 <f_printf+0x118>
    59e6:	4d c0       	rjmp	.+154    	; 0x5a82 <f_printf+0x1b2>
    59e8:	a4 34       	cpi	r26, 0x44	; 68
    59ea:	79 f0       	breq	.+30     	; 0x5a0a <f_printf+0x13a>
    59ec:	a2 34       	cpi	r26, 0x42	; 66
    59ee:	09 f0       	breq	.+2      	; 0x59f2 <f_printf+0x122>
    59f0:	56 c0       	rjmp	.+172    	; 0x5a9e <f_printf+0x1ce>
    59f2:	5c c0       	rjmp	.+184    	; 0x5aac <f_printf+0x1dc>
    59f4:	a5 35       	cpi	r26, 0x55	; 85
    59f6:	49 f0       	breq	.+18     	; 0x5a0a <f_printf+0x13a>
    59f8:	a8 35       	cpi	r26, 0x58	; 88
    59fa:	09 f4       	brne	.+2      	; 0x59fe <f_printf+0x12e>
    59fc:	4e c0       	rjmp	.+156    	; 0x5a9a <f_printf+0x1ca>
    59fe:	a3 35       	cpi	r26, 0x53	; 83
    5a00:	09 f0       	breq	.+2      	; 0x5a04 <f_printf+0x134>
    5a02:	4d c0       	rjmp	.+154    	; 0x5a9e <f_printf+0x1ce>
    5a04:	04 c0       	rjmp	.+8      	; 0x5a0e <f_printf+0x13e>
    5a06:	28 e0       	ldi	r18, 0x08	; 8
    5a08:	52 c0       	rjmp	.+164    	; 0x5aae <f_printf+0x1de>
    5a0a:	2a e0       	ldi	r18, 0x0A	; 10
    5a0c:	50 c0       	rjmp	.+160    	; 0x5aae <f_printf+0x1de>
    5a0e:	02 e0       	ldi	r16, 0x02	; 2
    5a10:	40 2e       	mov	r4, r16
    5a12:	51 2c       	mov	r5, r1
    5a14:	4e 0c       	add	r4, r14
    5a16:	5f 1c       	adc	r5, r15
    5a18:	f7 01       	movw	r30, r14
    5a1a:	e0 80       	ld	r14, Z
    5a1c:	f1 80       	ldd	r15, Z+1	; 0x01
    5a1e:	00 e0       	ldi	r16, 0x00	; 0
    5a20:	10 e0       	ldi	r17, 0x00	; 0
    5a22:	02 c0       	rjmp	.+4      	; 0x5a28 <f_printf+0x158>
    5a24:	0f 5f       	subi	r16, 0xFF	; 255
    5a26:	1f 4f       	sbci	r17, 0xFF	; 255
    5a28:	f7 01       	movw	r30, r14
    5a2a:	e0 0f       	add	r30, r16
    5a2c:	f1 1f       	adc	r31, r17
    5a2e:	80 81       	ld	r24, Z
    5a30:	88 23       	and	r24, r24
    5a32:	c1 f7       	brne	.-16     	; 0x5a24 <f_printf+0x154>
    5a34:	31 fe       	sbrs	r3, 1
    5a36:	06 c0       	rjmp	.+12     	; 0x5a44 <f_printf+0x174>
    5a38:	14 c0       	rjmp	.+40     	; 0x5a62 <f_printf+0x192>
    5a3a:	ce 01       	movw	r24, r28
    5a3c:	43 96       	adiw	r24, 0x13	; 19
    5a3e:	60 e2       	ldi	r22, 0x20	; 32
    5a40:	0e 94 23 2c 	call	0x5846	; 0x5846 <putc_bfd>
    5a44:	0f 5f       	subi	r16, 0xFF	; 255
    5a46:	1f 4f       	sbci	r17, 0xFF	; 255
    5a48:	c8 01       	movw	r24, r16
    5a4a:	01 97       	sbiw	r24, 0x01	; 1
    5a4c:	88 15       	cp	r24, r8
    5a4e:	99 05       	cpc	r25, r9
    5a50:	a0 f3       	brcs	.-24     	; 0x5a3a <f_printf+0x16a>
    5a52:	07 c0       	rjmp	.+14     	; 0x5a62 <f_printf+0x192>
    5a54:	08 94       	sec
    5a56:	e1 1c       	adc	r14, r1
    5a58:	f1 1c       	adc	r15, r1
    5a5a:	ce 01       	movw	r24, r28
    5a5c:	43 96       	adiw	r24, 0x13	; 19
    5a5e:	0e 94 23 2c 	call	0x5846	; 0x5846 <putc_bfd>
    5a62:	d7 01       	movw	r26, r14
    5a64:	6c 91       	ld	r22, X
    5a66:	66 23       	and	r22, r22
    5a68:	a9 f7       	brne	.-22     	; 0x5a54 <f_printf+0x184>
    5a6a:	07 c0       	rjmp	.+14     	; 0x5a7a <f_printf+0x1aa>
    5a6c:	ce 01       	movw	r24, r28
    5a6e:	43 96       	adiw	r24, 0x13	; 19
    5a70:	60 e2       	ldi	r22, 0x20	; 32
    5a72:	0e 94 23 2c 	call	0x5846	; 0x5846 <putc_bfd>
    5a76:	0f 5f       	subi	r16, 0xFF	; 255
    5a78:	1f 4f       	sbci	r17, 0xFF	; 255
    5a7a:	08 15       	cp	r16, r8
    5a7c:	19 05       	cpc	r17, r9
    5a7e:	b0 f3       	brcs	.-20     	; 0x5a6c <f_printf+0x19c>
    5a80:	58 cf       	rjmp	.-336    	; 0x5932 <f_printf+0x62>
    5a82:	12 e0       	ldi	r17, 0x02	; 2
    5a84:	41 2e       	mov	r4, r17
    5a86:	51 2c       	mov	r5, r1
    5a88:	4e 0c       	add	r4, r14
    5a8a:	5f 1c       	adc	r5, r15
    5a8c:	ce 01       	movw	r24, r28
    5a8e:	43 96       	adiw	r24, 0x13	; 19
    5a90:	f7 01       	movw	r30, r14
    5a92:	60 81       	ld	r22, Z
    5a94:	0e 94 23 2c 	call	0x5846	; 0x5846 <putc_bfd>
    5a98:	4c cf       	rjmp	.-360    	; 0x5932 <f_printf+0x62>
    5a9a:	20 e1       	ldi	r18, 0x10	; 16
    5a9c:	08 c0       	rjmp	.+16     	; 0x5aae <f_printf+0x1de>
    5a9e:	ce 01       	movw	r24, r28
    5aa0:	43 96       	adiw	r24, 0x13	; 19
    5aa2:	6b 2d       	mov	r22, r11
    5aa4:	0e 94 23 2c 	call	0x5846	; 0x5846 <putc_bfd>
    5aa8:	27 01       	movw	r4, r14
    5aaa:	43 cf       	rjmp	.-378    	; 0x5932 <f_printf+0x62>
    5aac:	22 e0       	ldi	r18, 0x02	; 2
    5aae:	32 fe       	sbrs	r3, 2
    5ab0:	0d c0       	rjmp	.+26     	; 0x5acc <f_printf+0x1fc>
    5ab2:	b4 e0       	ldi	r27, 0x04	; 4
    5ab4:	4b 2e       	mov	r4, r27
    5ab6:	51 2c       	mov	r5, r1
    5ab8:	4e 0c       	add	r4, r14
    5aba:	5f 1c       	adc	r5, r15
    5abc:	f7 01       	movw	r30, r14
    5abe:	e0 80       	ld	r14, Z
    5ac0:	f1 80       	ldd	r15, Z+1	; 0x01
    5ac2:	02 81       	ldd	r16, Z+2	; 0x02
    5ac4:	13 81       	ldd	r17, Z+3	; 0x03
    5ac6:	a4 34       	cpi	r26, 0x44	; 68
    5ac8:	09 f5       	brne	.+66     	; 0x5b0c <f_printf+0x23c>
    5aca:	14 c0       	rjmp	.+40     	; 0x5af4 <f_printf+0x224>
    5acc:	87 01       	movw	r16, r14
    5ace:	0e 5f       	subi	r16, 0xFE	; 254
    5ad0:	1f 4f       	sbci	r17, 0xFF	; 255
    5ad2:	f7 01       	movw	r30, r14
    5ad4:	60 81       	ld	r22, Z
    5ad6:	71 81       	ldd	r23, Z+1	; 0x01
    5ad8:	a4 34       	cpi	r26, 0x44	; 68
    5ada:	39 f4       	brne	.+14     	; 0x5aea <f_printf+0x21a>
    5adc:	28 01       	movw	r4, r16
    5ade:	7b 01       	movw	r14, r22
    5ae0:	00 27       	eor	r16, r16
    5ae2:	f7 fc       	sbrc	r15, 7
    5ae4:	00 95       	com	r16
    5ae6:	10 2f       	mov	r17, r16
    5ae8:	05 c0       	rjmp	.+10     	; 0x5af4 <f_printf+0x224>
    5aea:	28 01       	movw	r4, r16
    5aec:	7b 01       	movw	r14, r22
    5aee:	00 e0       	ldi	r16, 0x00	; 0
    5af0:	10 e0       	ldi	r17, 0x00	; 0
    5af2:	0c c0       	rjmp	.+24     	; 0x5b0c <f_printf+0x23c>
    5af4:	17 ff       	sbrs	r17, 7
    5af6:	0a c0       	rjmp	.+20     	; 0x5b0c <f_printf+0x23c>
    5af8:	10 95       	com	r17
    5afa:	00 95       	com	r16
    5afc:	f0 94       	com	r15
    5afe:	e0 94       	com	r14
    5b00:	e1 1c       	adc	r14, r1
    5b02:	f1 1c       	adc	r15, r1
    5b04:	01 1d       	adc	r16, r1
    5b06:	11 1d       	adc	r17, r1
    5b08:	f8 e0       	ldi	r31, 0x08	; 8
    5b0a:	3f 2a       	or	r3, r31
    5b0c:	cc 24       	eor	r12, r12
    5b0e:	dd 24       	eor	r13, r13
    5b10:	82 2f       	mov	r24, r18
    5b12:	90 e0       	ldi	r25, 0x00	; 0
    5b14:	a0 e0       	ldi	r26, 0x00	; 0
    5b16:	b0 e0       	ldi	r27, 0x00	; 0
    5b18:	6d 96       	adiw	r28, 0x1d	; 29
    5b1a:	8c af       	std	Y+60, r24	; 0x3c
    5b1c:	9d af       	std	Y+61, r25	; 0x3d
    5b1e:	ae af       	std	Y+62, r26	; 0x3e
    5b20:	bf af       	std	Y+63, r27	; 0x3f
    5b22:	6d 97       	sbiw	r28, 0x1d	; 29
    5b24:	c8 01       	movw	r24, r16
    5b26:	b7 01       	movw	r22, r14
    5b28:	6d 96       	adiw	r28, 0x1d	; 29
    5b2a:	2c ad       	ldd	r18, Y+60	; 0x3c
    5b2c:	3d ad       	ldd	r19, Y+61	; 0x3d
    5b2e:	4e ad       	ldd	r20, Y+62	; 0x3e
    5b30:	5f ad       	ldd	r21, Y+63	; 0x3f
    5b32:	6d 97       	sbiw	r28, 0x1d	; 29
    5b34:	0e 94 04 41 	call	0x8208	; 0x8208 <__udivmodsi4>
    5b38:	a6 2e       	mov	r10, r22
    5b3a:	c8 01       	movw	r24, r16
    5b3c:	b7 01       	movw	r22, r14
    5b3e:	6d 96       	adiw	r28, 0x1d	; 29
    5b40:	2c ad       	ldd	r18, Y+60	; 0x3c
    5b42:	3d ad       	ldd	r19, Y+61	; 0x3d
    5b44:	4e ad       	ldd	r20, Y+62	; 0x3e
    5b46:	5f ad       	ldd	r21, Y+63	; 0x3f
    5b48:	6d 97       	sbiw	r28, 0x1d	; 29
    5b4a:	0e 94 04 41 	call	0x8208	; 0x8208 <__udivmodsi4>
    5b4e:	c9 01       	movw	r24, r18
    5b50:	da 01       	movw	r26, r20
    5b52:	7c 01       	movw	r14, r24
    5b54:	8d 01       	movw	r16, r26
    5b56:	e9 e0       	ldi	r30, 0x09	; 9
    5b58:	ea 15       	cp	r30, r10
    5b5a:	38 f4       	brcc	.+14     	; 0x5b6a <f_printf+0x29a>
    5b5c:	f8 e7       	ldi	r31, 0x78	; 120
    5b5e:	bf 16       	cp	r11, r31
    5b60:	11 f0       	breq	.+4      	; 0x5b66 <f_printf+0x296>
    5b62:	27 e0       	ldi	r18, 0x07	; 7
    5b64:	01 c0       	rjmp	.+2      	; 0x5b68 <f_printf+0x298>
    5b66:	27 e2       	ldi	r18, 0x27	; 39
    5b68:	a2 0e       	add	r10, r18
    5b6a:	e3 e0       	ldi	r30, 0x03	; 3
    5b6c:	f0 e0       	ldi	r31, 0x00	; 0
    5b6e:	ec 0f       	add	r30, r28
    5b70:	fd 1f       	adc	r31, r29
    5b72:	ec 0d       	add	r30, r12
    5b74:	fd 1d       	adc	r31, r13
    5b76:	20 e3       	ldi	r18, 0x30	; 48
    5b78:	a2 0e       	add	r10, r18
    5b7a:	a0 82       	st	Z, r10
    5b7c:	08 94       	sec
    5b7e:	c1 1c       	adc	r12, r1
    5b80:	d1 1c       	adc	r13, r1
    5b82:	00 97       	sbiw	r24, 0x00	; 0
    5b84:	a1 05       	cpc	r26, r1
    5b86:	b1 05       	cpc	r27, r1
    5b88:	21 f0       	breq	.+8      	; 0x5b92 <f_printf+0x2c2>
    5b8a:	80 e1       	ldi	r24, 0x10	; 16
    5b8c:	c8 16       	cp	r12, r24
    5b8e:	d1 04       	cpc	r13, r1
    5b90:	49 f6       	brne	.-110    	; 0x5b24 <f_printf+0x254>
    5b92:	83 2d       	mov	r24, r3
    5b94:	90 e0       	ldi	r25, 0x00	; 0
    5b96:	33 fe       	sbrs	r3, 3
    5b98:	0a c0       	rjmp	.+20     	; 0x5bae <f_printf+0x2de>
    5b9a:	e3 e0       	ldi	r30, 0x03	; 3
    5b9c:	f0 e0       	ldi	r31, 0x00	; 0
    5b9e:	ec 0f       	add	r30, r28
    5ba0:	fd 1f       	adc	r31, r29
    5ba2:	ec 0d       	add	r30, r12
    5ba4:	fd 1d       	adc	r31, r13
    5ba6:	20 82       	st	Z, r2
    5ba8:	08 94       	sec
    5baa:	c1 1c       	adc	r12, r1
    5bac:	d1 1c       	adc	r13, r1
    5bae:	80 fd       	sbrc	r24, 0
    5bb0:	03 c0       	rjmp	.+6      	; 0x5bb8 <f_printf+0x2e8>
    5bb2:	f0 e2       	ldi	r31, 0x20	; 32
    5bb4:	bf 2e       	mov	r11, r31
    5bb6:	02 c0       	rjmp	.+4      	; 0x5bbc <f_printf+0x2ec>
    5bb8:	e0 e3       	ldi	r30, 0x30	; 48
    5bba:	be 2e       	mov	r11, r30
    5bbc:	76 01       	movw	r14, r12
    5bbe:	8c 01       	movw	r16, r24
    5bc0:	02 70       	andi	r16, 0x02	; 2
    5bc2:	10 70       	andi	r17, 0x00	; 0
    5bc4:	05 c0       	rjmp	.+10     	; 0x5bd0 <f_printf+0x300>
    5bc6:	ce 01       	movw	r24, r28
    5bc8:	43 96       	adiw	r24, 0x13	; 19
    5bca:	6b 2d       	mov	r22, r11
    5bcc:	0e 94 23 2c 	call	0x5846	; 0x5846 <putc_bfd>
    5bd0:	01 15       	cp	r16, r1
    5bd2:	11 05       	cpc	r17, r1
    5bd4:	41 f4       	brne	.+16     	; 0x5be6 <f_printf+0x316>
    5bd6:	08 94       	sec
    5bd8:	e1 1c       	adc	r14, r1
    5bda:	f1 1c       	adc	r15, r1
    5bdc:	c7 01       	movw	r24, r14
    5bde:	01 97       	sbiw	r24, 0x01	; 1
    5be0:	88 15       	cp	r24, r8
    5be2:	99 05       	cpc	r25, r9
    5be4:	80 f3       	brcs	.-32     	; 0x5bc6 <f_printf+0x2f6>
    5be6:	08 94       	sec
    5be8:	c1 08       	sbc	r12, r1
    5bea:	d1 08       	sbc	r13, r1
    5bec:	03 e0       	ldi	r16, 0x03	; 3
    5bee:	10 e0       	ldi	r17, 0x00	; 0
    5bf0:	0c 0f       	add	r16, r28
    5bf2:	1d 1f       	adc	r17, r29
    5bf4:	0c 0d       	add	r16, r12
    5bf6:	1d 1d       	adc	r17, r13
    5bf8:	08 94       	sec
    5bfa:	c1 1c       	adc	r12, r1
    5bfc:	d1 1c       	adc	r13, r1
    5bfe:	08 94       	sec
    5c00:	c1 08       	sbc	r12, r1
    5c02:	d1 08       	sbc	r13, r1
    5c04:	ce 01       	movw	r24, r28
    5c06:	43 96       	adiw	r24, 0x13	; 19
    5c08:	d8 01       	movw	r26, r16
    5c0a:	6c 91       	ld	r22, X
    5c0c:	0e 94 23 2c 	call	0x5846	; 0x5846 <putc_bfd>
    5c10:	01 50       	subi	r16, 0x01	; 1
    5c12:	10 40       	sbci	r17, 0x00	; 0
    5c14:	c1 14       	cp	r12, r1
    5c16:	d1 04       	cpc	r13, r1
    5c18:	91 f7       	brne	.-28     	; 0x5bfe <f_printf+0x32e>
    5c1a:	08 c0       	rjmp	.+16     	; 0x5c2c <f_printf+0x35c>
    5c1c:	ce 01       	movw	r24, r28
    5c1e:	43 96       	adiw	r24, 0x13	; 19
    5c20:	6b 2d       	mov	r22, r11
    5c22:	0e 94 23 2c 	call	0x5846	; 0x5846 <putc_bfd>
    5c26:	08 94       	sec
    5c28:	e1 1c       	adc	r14, r1
    5c2a:	f1 1c       	adc	r15, r1
    5c2c:	e8 14       	cp	r14, r8
    5c2e:	f9 04       	cpc	r15, r9
    5c30:	a8 f3       	brcs	.-22     	; 0x5c1c <f_printf+0x34c>
    5c32:	7f ce       	rjmp	.-770    	; 0x5932 <f_printf+0x62>
    5c34:	4d 89       	ldd	r20, Y+21	; 0x15
    5c36:	5e 89       	ldd	r21, Y+22	; 0x16
    5c38:	57 fd       	sbrc	r21, 7
    5c3a:	16 c0       	rjmp	.+44     	; 0x5c68 <f_printf+0x398>
    5c3c:	8b 89       	ldd	r24, Y+19	; 0x13
    5c3e:	9c 89       	ldd	r25, Y+20	; 0x14
    5c40:	be 01       	movw	r22, r28
    5c42:	67 5e       	subi	r22, 0xE7	; 231
    5c44:	7f 4f       	sbci	r23, 0xFF	; 255
    5c46:	9e 01       	movw	r18, r28
    5c48:	2f 5f       	subi	r18, 0xFF	; 255
    5c4a:	3f 4f       	sbci	r19, 0xFF	; 255
    5c4c:	0e 94 f9 29 	call	0x53f2	; 0x53f2 <f_write>
    5c50:	88 23       	and	r24, r24
    5c52:	51 f4       	brne	.+20     	; 0x5c68 <f_printf+0x398>
    5c54:	2d 89       	ldd	r18, Y+21	; 0x15
    5c56:	3e 89       	ldd	r19, Y+22	; 0x16
    5c58:	89 81       	ldd	r24, Y+1	; 0x01
    5c5a:	9a 81       	ldd	r25, Y+2	; 0x02
    5c5c:	28 17       	cp	r18, r24
    5c5e:	39 07       	cpc	r19, r25
    5c60:	19 f4       	brne	.+6      	; 0x5c68 <f_printf+0x398>
    5c62:	2f 89       	ldd	r18, Y+23	; 0x17
    5c64:	38 8d       	ldd	r19, Y+24	; 0x18
    5c66:	02 c0       	rjmp	.+4      	; 0x5c6c <f_printf+0x39c>
    5c68:	2f ef       	ldi	r18, 0xFF	; 255
    5c6a:	3f ef       	ldi	r19, 0xFF	; 255
    5c6c:	c9 01       	movw	r24, r18
    5c6e:	c4 5a       	subi	r28, 0xA4	; 164
    5c70:	df 4f       	sbci	r29, 0xFF	; 255
    5c72:	0f b6       	in	r0, 0x3f	; 63
    5c74:	f8 94       	cli
    5c76:	de bf       	out	0x3e, r29	; 62
    5c78:	0f be       	out	0x3f, r0	; 63
    5c7a:	cd bf       	out	0x3d, r28	; 61
    5c7c:	cf 91       	pop	r28
    5c7e:	df 91       	pop	r29
    5c80:	1f 91       	pop	r17
    5c82:	0f 91       	pop	r16
    5c84:	ff 90       	pop	r15
    5c86:	ef 90       	pop	r14
    5c88:	df 90       	pop	r13
    5c8a:	cf 90       	pop	r12
    5c8c:	bf 90       	pop	r11
    5c8e:	af 90       	pop	r10
    5c90:	9f 90       	pop	r9
    5c92:	8f 90       	pop	r8
    5c94:	7f 90       	pop	r7
    5c96:	6f 90       	pop	r6
    5c98:	5f 90       	pop	r5
    5c9a:	4f 90       	pop	r4
    5c9c:	3f 90       	pop	r3
    5c9e:	2f 90       	pop	r2
    5ca0:	08 95       	ret

00005ca2 <f_puts>:
    5ca2:	ef 92       	push	r14
    5ca4:	ff 92       	push	r15
    5ca6:	0f 93       	push	r16
    5ca8:	1f 93       	push	r17
    5caa:	df 93       	push	r29
    5cac:	cf 93       	push	r28
    5cae:	cd b7       	in	r28, 0x3d	; 61
    5cb0:	de b7       	in	r29, 0x3e	; 62
    5cb2:	c8 54       	subi	r28, 0x48	; 72
    5cb4:	d0 40       	sbci	r29, 0x00	; 0
    5cb6:	0f b6       	in	r0, 0x3f	; 63
    5cb8:	f8 94       	cli
    5cba:	de bf       	out	0x3e, r29	; 62
    5cbc:	0f be       	out	0x3f, r0	; 63
    5cbe:	cd bf       	out	0x3d, r28	; 61
    5cc0:	8c 01       	movw	r16, r24
    5cc2:	7c 83       	std	Y+4, r23	; 0x04
    5cc4:	6b 83       	std	Y+3, r22	; 0x03
    5cc6:	1e 82       	std	Y+6, r1	; 0x06
    5cc8:	1d 82       	std	Y+5, r1	; 0x05
    5cca:	18 86       	std	Y+8, r1	; 0x08
    5ccc:	1f 82       	std	Y+7, r1	; 0x07
    5cce:	73 e0       	ldi	r23, 0x03	; 3
    5cd0:	e7 2e       	mov	r14, r23
    5cd2:	f1 2c       	mov	r15, r1
    5cd4:	ec 0e       	add	r14, r28
    5cd6:	fd 1e       	adc	r15, r29
    5cd8:	05 c0       	rjmp	.+10     	; 0x5ce4 <f_puts+0x42>
    5cda:	0f 5f       	subi	r16, 0xFF	; 255
    5cdc:	1f 4f       	sbci	r17, 0xFF	; 255
    5cde:	c7 01       	movw	r24, r14
    5ce0:	0e 94 23 2c 	call	0x5846	; 0x5846 <putc_bfd>
    5ce4:	f8 01       	movw	r30, r16
    5ce6:	60 81       	ld	r22, Z
    5ce8:	66 23       	and	r22, r22
    5cea:	b9 f7       	brne	.-18     	; 0x5cda <f_puts+0x38>
    5cec:	4d 81       	ldd	r20, Y+5	; 0x05
    5cee:	5e 81       	ldd	r21, Y+6	; 0x06
    5cf0:	57 fd       	sbrc	r21, 7
    5cf2:	16 c0       	rjmp	.+44     	; 0x5d20 <f_puts+0x7e>
    5cf4:	8b 81       	ldd	r24, Y+3	; 0x03
    5cf6:	9c 81       	ldd	r25, Y+4	; 0x04
    5cf8:	be 01       	movw	r22, r28
    5cfa:	67 5f       	subi	r22, 0xF7	; 247
    5cfc:	7f 4f       	sbci	r23, 0xFF	; 255
    5cfe:	9e 01       	movw	r18, r28
    5d00:	2f 5f       	subi	r18, 0xFF	; 255
    5d02:	3f 4f       	sbci	r19, 0xFF	; 255
    5d04:	0e 94 f9 29 	call	0x53f2	; 0x53f2 <f_write>
    5d08:	88 23       	and	r24, r24
    5d0a:	51 f4       	brne	.+20     	; 0x5d20 <f_puts+0x7e>
    5d0c:	2d 81       	ldd	r18, Y+5	; 0x05
    5d0e:	3e 81       	ldd	r19, Y+6	; 0x06
    5d10:	89 81       	ldd	r24, Y+1	; 0x01
    5d12:	9a 81       	ldd	r25, Y+2	; 0x02
    5d14:	28 17       	cp	r18, r24
    5d16:	39 07       	cpc	r19, r25
    5d18:	19 f4       	brne	.+6      	; 0x5d20 <f_puts+0x7e>
    5d1a:	2f 81       	ldd	r18, Y+7	; 0x07
    5d1c:	38 85       	ldd	r19, Y+8	; 0x08
    5d1e:	02 c0       	rjmp	.+4      	; 0x5d24 <f_puts+0x82>
    5d20:	2f ef       	ldi	r18, 0xFF	; 255
    5d22:	3f ef       	ldi	r19, 0xFF	; 255
    5d24:	c9 01       	movw	r24, r18
    5d26:	c8 5b       	subi	r28, 0xB8	; 184
    5d28:	df 4f       	sbci	r29, 0xFF	; 255
    5d2a:	0f b6       	in	r0, 0x3f	; 63
    5d2c:	f8 94       	cli
    5d2e:	de bf       	out	0x3e, r29	; 62
    5d30:	0f be       	out	0x3f, r0	; 63
    5d32:	cd bf       	out	0x3d, r28	; 61
    5d34:	cf 91       	pop	r28
    5d36:	df 91       	pop	r29
    5d38:	1f 91       	pop	r17
    5d3a:	0f 91       	pop	r16
    5d3c:	ff 90       	pop	r15
    5d3e:	ef 90       	pop	r14
    5d40:	08 95       	ret

00005d42 <f_putc>:
    5d42:	df 93       	push	r29
    5d44:	cf 93       	push	r28
    5d46:	cd b7       	in	r28, 0x3d	; 61
    5d48:	de b7       	in	r29, 0x3e	; 62
    5d4a:	c8 54       	subi	r28, 0x48	; 72
    5d4c:	d0 40       	sbci	r29, 0x00	; 0
    5d4e:	0f b6       	in	r0, 0x3f	; 63
    5d50:	f8 94       	cli
    5d52:	de bf       	out	0x3e, r29	; 62
    5d54:	0f be       	out	0x3f, r0	; 63
    5d56:	cd bf       	out	0x3d, r28	; 61
    5d58:	28 2f       	mov	r18, r24
    5d5a:	7c 83       	std	Y+4, r23	; 0x04
    5d5c:	6b 83       	std	Y+3, r22	; 0x03
    5d5e:	1e 82       	std	Y+6, r1	; 0x06
    5d60:	1d 82       	std	Y+5, r1	; 0x05
    5d62:	18 86       	std	Y+8, r1	; 0x08
    5d64:	1f 82       	std	Y+7, r1	; 0x07
    5d66:	ce 01       	movw	r24, r28
    5d68:	03 96       	adiw	r24, 0x03	; 3
    5d6a:	62 2f       	mov	r22, r18
    5d6c:	0e 94 23 2c 	call	0x5846	; 0x5846 <putc_bfd>
    5d70:	4d 81       	ldd	r20, Y+5	; 0x05
    5d72:	5e 81       	ldd	r21, Y+6	; 0x06
    5d74:	57 fd       	sbrc	r21, 7
    5d76:	16 c0       	rjmp	.+44     	; 0x5da4 <f_putc+0x62>
    5d78:	8b 81       	ldd	r24, Y+3	; 0x03
    5d7a:	9c 81       	ldd	r25, Y+4	; 0x04
    5d7c:	be 01       	movw	r22, r28
    5d7e:	67 5f       	subi	r22, 0xF7	; 247
    5d80:	7f 4f       	sbci	r23, 0xFF	; 255
    5d82:	9e 01       	movw	r18, r28
    5d84:	2f 5f       	subi	r18, 0xFF	; 255
    5d86:	3f 4f       	sbci	r19, 0xFF	; 255
    5d88:	0e 94 f9 29 	call	0x53f2	; 0x53f2 <f_write>
    5d8c:	88 23       	and	r24, r24
    5d8e:	51 f4       	brne	.+20     	; 0x5da4 <f_putc+0x62>
    5d90:	2d 81       	ldd	r18, Y+5	; 0x05
    5d92:	3e 81       	ldd	r19, Y+6	; 0x06
    5d94:	89 81       	ldd	r24, Y+1	; 0x01
    5d96:	9a 81       	ldd	r25, Y+2	; 0x02
    5d98:	28 17       	cp	r18, r24
    5d9a:	39 07       	cpc	r19, r25
    5d9c:	19 f4       	brne	.+6      	; 0x5da4 <f_putc+0x62>
    5d9e:	2f 81       	ldd	r18, Y+7	; 0x07
    5da0:	38 85       	ldd	r19, Y+8	; 0x08
    5da2:	02 c0       	rjmp	.+4      	; 0x5da8 <f_putc+0x66>
    5da4:	2f ef       	ldi	r18, 0xFF	; 255
    5da6:	3f ef       	ldi	r19, 0xFF	; 255
    5da8:	c9 01       	movw	r24, r18
    5daa:	c8 5b       	subi	r28, 0xB8	; 184
    5dac:	df 4f       	sbci	r29, 0xFF	; 255
    5dae:	0f b6       	in	r0, 0x3f	; 63
    5db0:	f8 94       	cli
    5db2:	de bf       	out	0x3e, r29	; 62
    5db4:	0f be       	out	0x3f, r0	; 63
    5db6:	cd bf       	out	0x3d, r28	; 61
    5db8:	cf 91       	pop	r28
    5dba:	df 91       	pop	r29
    5dbc:	08 95       	ret

00005dbe <f_read>:
    5dbe:	3f 92       	push	r3
    5dc0:	4f 92       	push	r4
    5dc2:	5f 92       	push	r5
    5dc4:	6f 92       	push	r6
    5dc6:	7f 92       	push	r7
    5dc8:	8f 92       	push	r8
    5dca:	9f 92       	push	r9
    5dcc:	af 92       	push	r10
    5dce:	bf 92       	push	r11
    5dd0:	cf 92       	push	r12
    5dd2:	df 92       	push	r13
    5dd4:	ef 92       	push	r14
    5dd6:	ff 92       	push	r15
    5dd8:	0f 93       	push	r16
    5dda:	1f 93       	push	r17
    5ddc:	df 93       	push	r29
    5dde:	cf 93       	push	r28
    5de0:	00 d0       	rcall	.+0      	; 0x5de2 <f_read+0x24>
    5de2:	00 d0       	rcall	.+0      	; 0x5de4 <f_read+0x26>
    5de4:	00 d0       	rcall	.+0      	; 0x5de6 <f_read+0x28>
    5de6:	cd b7       	in	r28, 0x3d	; 61
    5de8:	de b7       	in	r29, 0x3e	; 62
    5dea:	9e 83       	std	Y+6, r25	; 0x06
    5dec:	8d 83       	std	Y+5, r24	; 0x05
    5dee:	16 2f       	mov	r17, r22
    5df0:	07 2f       	mov	r16, r23
    5df2:	3a 01       	movw	r6, r20
    5df4:	3c 83       	std	Y+4, r19	; 0x04
    5df6:	2b 83       	std	Y+3, r18	; 0x03
    5df8:	d9 01       	movw	r26, r18
    5dfa:	1d 92       	st	X+, r1
    5dfc:	1c 92       	st	X, r1
    5dfe:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <validate>
    5e02:	88 2e       	mov	r8, r24
    5e04:	88 23       	and	r24, r24
    5e06:	09 f0       	breq	.+2      	; 0x5e0a <f_read+0x4c>
    5e08:	91 c1       	rjmp	.+802    	; 0x612c <f_read+0x36e>
    5e0a:	ed 81       	ldd	r30, Y+5	; 0x05
    5e0c:	fe 81       	ldd	r31, Y+6	; 0x06
    5e0e:	85 80       	ldd	r8, Z+5	; 0x05
    5e10:	88 20       	and	r8, r8
    5e12:	09 f0       	breq	.+2      	; 0x5e16 <f_read+0x58>
    5e14:	8b c1       	rjmp	.+790    	; 0x612c <f_read+0x36e>
    5e16:	84 81       	ldd	r24, Z+4	; 0x04
    5e18:	80 fd       	sbrc	r24, 0
    5e1a:	03 c0       	rjmp	.+6      	; 0x5e22 <f_read+0x64>
    5e1c:	07 e0       	ldi	r16, 0x07	; 7
    5e1e:	80 2e       	mov	r8, r16
    5e20:	85 c1       	rjmp	.+778    	; 0x612c <f_read+0x36e>
    5e22:	ad 81       	ldd	r26, Y+5	; 0x05
    5e24:	be 81       	ldd	r27, Y+6	; 0x06
    5e26:	1a 96       	adiw	r26, 0x0a	; 10
    5e28:	2d 91       	ld	r18, X+
    5e2a:	3d 91       	ld	r19, X+
    5e2c:	4d 91       	ld	r20, X+
    5e2e:	5c 91       	ld	r21, X
    5e30:	1d 97       	sbiw	r26, 0x0d	; 13
    5e32:	16 96       	adiw	r26, 0x06	; 6
    5e34:	8d 91       	ld	r24, X+
    5e36:	9d 91       	ld	r25, X+
    5e38:	0d 90       	ld	r0, X+
    5e3a:	bc 91       	ld	r27, X
    5e3c:	a0 2d       	mov	r26, r0
    5e3e:	28 1b       	sub	r18, r24
    5e40:	39 0b       	sbc	r19, r25
    5e42:	4a 0b       	sbc	r20, r26
    5e44:	5b 0b       	sbc	r21, r27
    5e46:	c3 01       	movw	r24, r6
    5e48:	a0 e0       	ldi	r26, 0x00	; 0
    5e4a:	b0 e0       	ldi	r27, 0x00	; 0
    5e4c:	28 17       	cp	r18, r24
    5e4e:	39 07       	cpc	r19, r25
    5e50:	4a 07       	cpc	r20, r26
    5e52:	5b 07       	cpc	r21, r27
    5e54:	08 f4       	brcc	.+2      	; 0x5e58 <f_read+0x9a>
    5e56:	39 01       	movw	r6, r18
    5e58:	81 2f       	mov	r24, r17
    5e5a:	90 2f       	mov	r25, r16
    5e5c:	9c 01       	movw	r18, r24
    5e5e:	29 01       	movw	r4, r18
    5e60:	ed 81       	ldd	r30, Y+5	; 0x05
    5e62:	fe 81       	ldd	r31, Y+6	; 0x06
    5e64:	b2 96       	adiw	r30, 0x22	; 34
    5e66:	fa 83       	std	Y+2, r31	; 0x02
    5e68:	e9 83       	std	Y+1, r30	; 0x01
    5e6a:	5c c1       	rjmp	.+696    	; 0x6124 <f_read+0x366>
    5e6c:	ad 81       	ldd	r26, Y+5	; 0x05
    5e6e:	be 81       	ldd	r27, Y+6	; 0x06
    5e70:	16 96       	adiw	r26, 0x06	; 6
    5e72:	2d 91       	ld	r18, X+
    5e74:	3d 91       	ld	r19, X+
    5e76:	4d 91       	ld	r20, X+
    5e78:	5c 91       	ld	r21, X
    5e7a:	19 97       	sbiw	r26, 0x09	; 9
    5e7c:	da 01       	movw	r26, r20
    5e7e:	c9 01       	movw	r24, r18
    5e80:	91 70       	andi	r25, 0x01	; 1
    5e82:	a0 70       	andi	r26, 0x00	; 0
    5e84:	b0 70       	andi	r27, 0x00	; 0
    5e86:	00 97       	sbiw	r24, 0x00	; 0
    5e88:	a1 05       	cpc	r26, r1
    5e8a:	b1 05       	cpc	r27, r1
    5e8c:	09 f0       	breq	.+2      	; 0x5e90 <f_read+0xd2>
    5e8e:	10 c1       	rjmp	.+544    	; 0x60b0 <f_read+0x2f2>
    5e90:	ad 81       	ldd	r26, Y+5	; 0x05
    5e92:	be 81       	ldd	r27, Y+6	; 0x06
    5e94:	ed 91       	ld	r30, X+
    5e96:	fc 91       	ld	r31, X
    5e98:	da 01       	movw	r26, r20
    5e9a:	c9 01       	movw	r24, r18
    5e9c:	19 e0       	ldi	r17, 0x09	; 9
    5e9e:	b6 95       	lsr	r27
    5ea0:	a7 95       	ror	r26
    5ea2:	97 95       	ror	r25
    5ea4:	87 95       	ror	r24
    5ea6:	1a 95       	dec	r17
    5ea8:	d1 f7       	brne	.-12     	; 0x5e9e <f_read+0xe0>
    5eaa:	92 80       	ldd	r9, Z+2	; 0x02
    5eac:	9a 94       	dec	r9
    5eae:	98 22       	and	r9, r24
    5eb0:	81 f5       	brne	.+96     	; 0x5f12 <f_read+0x154>
    5eb2:	21 15       	cp	r18, r1
    5eb4:	31 05       	cpc	r19, r1
    5eb6:	41 05       	cpc	r20, r1
    5eb8:	51 05       	cpc	r21, r1
    5eba:	39 f4       	brne	.+14     	; 0x5eca <f_read+0x10c>
    5ebc:	ed 81       	ldd	r30, Y+5	; 0x05
    5ebe:	fe 81       	ldd	r31, Y+6	; 0x06
    5ec0:	66 85       	ldd	r22, Z+14	; 0x0e
    5ec2:	77 85       	ldd	r23, Z+15	; 0x0f
    5ec4:	80 89       	ldd	r24, Z+16	; 0x10
    5ec6:	91 89       	ldd	r25, Z+17	; 0x11
    5ec8:	0b c0       	rjmp	.+22     	; 0x5ee0 <f_read+0x122>
    5eca:	ad 81       	ldd	r26, Y+5	; 0x05
    5ecc:	be 81       	ldd	r27, Y+6	; 0x06
    5ece:	52 96       	adiw	r26, 0x12	; 18
    5ed0:	4d 91       	ld	r20, X+
    5ed2:	5d 91       	ld	r21, X+
    5ed4:	6d 91       	ld	r22, X+
    5ed6:	7c 91       	ld	r23, X
    5ed8:	55 97       	sbiw	r26, 0x15	; 21
    5eda:	cf 01       	movw	r24, r30
    5edc:	0e 94 f3 1c 	call	0x39e6	; 0x39e6 <get_fat>
    5ee0:	62 30       	cpi	r22, 0x02	; 2
    5ee2:	71 05       	cpc	r23, r1
    5ee4:	81 05       	cpc	r24, r1
    5ee6:	91 05       	cpc	r25, r1
    5ee8:	28 f4       	brcc	.+10     	; 0x5ef4 <f_read+0x136>
    5eea:	82 e0       	ldi	r24, 0x02	; 2
    5eec:	ed 81       	ldd	r30, Y+5	; 0x05
    5eee:	fe 81       	ldd	r31, Y+6	; 0x06
    5ef0:	85 83       	std	Z+5, r24	; 0x05
    5ef2:	47 c0       	rjmp	.+142    	; 0x5f82 <f_read+0x1c4>
    5ef4:	6f 3f       	cpi	r22, 0xFF	; 255
    5ef6:	ff ef       	ldi	r31, 0xFF	; 255
    5ef8:	7f 07       	cpc	r23, r31
    5efa:	ff ef       	ldi	r31, 0xFF	; 255
    5efc:	8f 07       	cpc	r24, r31
    5efe:	ff ef       	ldi	r31, 0xFF	; 255
    5f00:	9f 07       	cpc	r25, r31
    5f02:	09 f4       	brne	.+2      	; 0x5f06 <f_read+0x148>
    5f04:	ac c0       	rjmp	.+344    	; 0x605e <f_read+0x2a0>
    5f06:	ed 81       	ldd	r30, Y+5	; 0x05
    5f08:	fe 81       	ldd	r31, Y+6	; 0x06
    5f0a:	62 8b       	std	Z+18, r22	; 0x12
    5f0c:	73 8b       	std	Z+19, r23	; 0x13
    5f0e:	84 8b       	std	Z+20, r24	; 0x14
    5f10:	95 8b       	std	Z+21, r25	; 0x15
    5f12:	ad 81       	ldd	r26, Y+5	; 0x05
    5f14:	be 81       	ldd	r27, Y+6	; 0x06
    5f16:	0d 91       	ld	r16, X+
    5f18:	1c 91       	ld	r17, X
    5f1a:	11 97       	sbiw	r26, 0x01	; 1
    5f1c:	52 96       	adiw	r26, 0x12	; 18
    5f1e:	2d 91       	ld	r18, X+
    5f20:	3d 91       	ld	r19, X+
    5f22:	4d 91       	ld	r20, X+
    5f24:	5c 91       	ld	r21, X
    5f26:	55 97       	sbiw	r26, 0x15	; 21
    5f28:	22 50       	subi	r18, 0x02	; 2
    5f2a:	30 40       	sbci	r19, 0x00	; 0
    5f2c:	40 40       	sbci	r20, 0x00	; 0
    5f2e:	50 40       	sbci	r21, 0x00	; 0
    5f30:	f8 01       	movw	r30, r16
    5f32:	82 89       	ldd	r24, Z+18	; 0x12
    5f34:	93 89       	ldd	r25, Z+19	; 0x13
    5f36:	a4 89       	ldd	r26, Z+20	; 0x14
    5f38:	b5 89       	ldd	r27, Z+21	; 0x15
    5f3a:	02 97       	sbiw	r24, 0x02	; 2
    5f3c:	a1 09       	sbc	r26, r1
    5f3e:	b1 09       	sbc	r27, r1
    5f40:	28 17       	cp	r18, r24
    5f42:	39 07       	cpc	r19, r25
    5f44:	4a 07       	cpc	r20, r26
    5f46:	5b 07       	cpc	r21, r27
    5f48:	b8 f4       	brcc	.+46     	; 0x5f78 <f_read+0x1ba>
    5f4a:	32 80       	ldd	r3, Z+2	; 0x02
    5f4c:	63 2d       	mov	r22, r3
    5f4e:	70 e0       	ldi	r23, 0x00	; 0
    5f50:	80 e0       	ldi	r24, 0x00	; 0
    5f52:	90 e0       	ldi	r25, 0x00	; 0
    5f54:	0e 94 b2 40 	call	0x8164	; 0x8164 <__mulsi3>
    5f58:	9b 01       	movw	r18, r22
    5f5a:	ac 01       	movw	r20, r24
    5f5c:	f8 01       	movw	r30, r16
    5f5e:	86 a1       	ldd	r24, Z+38	; 0x26
    5f60:	97 a1       	ldd	r25, Z+39	; 0x27
    5f62:	a0 a5       	ldd	r26, Z+40	; 0x28
    5f64:	b1 a5       	ldd	r27, Z+41	; 0x29
    5f66:	28 0f       	add	r18, r24
    5f68:	39 1f       	adc	r19, r25
    5f6a:	4a 1f       	adc	r20, r26
    5f6c:	5b 1f       	adc	r21, r27
    5f6e:	21 15       	cp	r18, r1
    5f70:	31 05       	cpc	r19, r1
    5f72:	41 05       	cpc	r20, r1
    5f74:	51 05       	cpc	r21, r1
    5f76:	41 f4       	brne	.+16     	; 0x5f88 <f_read+0x1ca>
    5f78:	82 e0       	ldi	r24, 0x02	; 2
    5f7a:	ad 81       	ldd	r26, Y+5	; 0x05
    5f7c:	be 81       	ldd	r27, Y+6	; 0x06
    5f7e:	15 96       	adiw	r26, 0x05	; 5
    5f80:	8c 93       	st	X, r24
    5f82:	b2 e0       	ldi	r27, 0x02	; 2
    5f84:	8b 2e       	mov	r8, r27
    5f86:	d2 c0       	rjmp	.+420    	; 0x612c <f_read+0x36e>
    5f88:	69 01       	movw	r12, r18
    5f8a:	7a 01       	movw	r14, r20
    5f8c:	c9 0c       	add	r12, r9
    5f8e:	d1 1c       	adc	r13, r1
    5f90:	e1 1c       	adc	r14, r1
    5f92:	f1 1c       	adc	r15, r1
    5f94:	53 01       	movw	r10, r6
    5f96:	ab 2c       	mov	r10, r11
    5f98:	bb 24       	eor	r11, r11
    5f9a:	a6 94       	lsr	r10
    5f9c:	a1 14       	cp	r10, r1
    5f9e:	b1 04       	cpc	r11, r1
    5fa0:	09 f4       	brne	.+2      	; 0x5fa4 <f_read+0x1e6>
    5fa2:	42 c0       	rjmp	.+132    	; 0x6028 <f_read+0x26a>
    5fa4:	29 2d       	mov	r18, r9
    5fa6:	30 e0       	ldi	r19, 0x00	; 0
    5fa8:	c5 01       	movw	r24, r10
    5faa:	82 0f       	add	r24, r18
    5fac:	93 1f       	adc	r25, r19
    5fae:	63 2d       	mov	r22, r3
    5fb0:	70 e0       	ldi	r23, 0x00	; 0
    5fb2:	68 17       	cp	r22, r24
    5fb4:	79 07       	cpc	r23, r25
    5fb6:	18 f4       	brcc	.+6      	; 0x5fbe <f_read+0x200>
    5fb8:	5b 01       	movw	r10, r22
    5fba:	a2 1a       	sub	r10, r18
    5fbc:	b3 0a       	sbc	r11, r19
    5fbe:	f8 01       	movw	r30, r16
    5fc0:	81 81       	ldd	r24, Z+1	; 0x01
    5fc2:	b2 01       	movw	r22, r4
    5fc4:	a7 01       	movw	r20, r14
    5fc6:	96 01       	movw	r18, r12
    5fc8:	85 01       	movw	r16, r10
    5fca:	0e 94 cf 37 	call	0x6f9e	; 0x6f9e <disk_read>
    5fce:	88 23       	and	r24, r24
    5fd0:	09 f0       	breq	.+2      	; 0x5fd4 <f_read+0x216>
    5fd2:	45 c0       	rjmp	.+138    	; 0x605e <f_read+0x2a0>
    5fd4:	ed 81       	ldd	r30, Y+5	; 0x05
    5fd6:	fe 81       	ldd	r31, Y+6	; 0x06
    5fd8:	84 81       	ldd	r24, Z+4	; 0x04
    5fda:	86 ff       	sbrs	r24, 6
    5fdc:	20 c0       	rjmp	.+64     	; 0x601e <f_read+0x260>
    5fde:	26 89       	ldd	r18, Z+22	; 0x16
    5fe0:	37 89       	ldd	r19, Z+23	; 0x17
    5fe2:	40 8d       	ldd	r20, Z+24	; 0x18
    5fe4:	51 8d       	ldd	r21, Z+25	; 0x19
    5fe6:	2c 19       	sub	r18, r12
    5fe8:	3d 09       	sbc	r19, r13
    5fea:	4e 09       	sbc	r20, r14
    5fec:	5f 09       	sbc	r21, r15
    5fee:	c5 01       	movw	r24, r10
    5ff0:	a0 e0       	ldi	r26, 0x00	; 0
    5ff2:	b0 e0       	ldi	r27, 0x00	; 0
    5ff4:	28 17       	cp	r18, r24
    5ff6:	39 07       	cpc	r19, r25
    5ff8:	4a 07       	cpc	r20, r26
    5ffa:	5b 07       	cpc	r21, r27
    5ffc:	80 f4       	brcc	.+32     	; 0x601e <f_read+0x260>
    5ffe:	f9 e0       	ldi	r31, 0x09	; 9
    6000:	22 0f       	add	r18, r18
    6002:	33 1f       	adc	r19, r19
    6004:	44 1f       	adc	r20, r20
    6006:	55 1f       	adc	r21, r21
    6008:	fa 95       	dec	r31
    600a:	d1 f7       	brne	.-12     	; 0x6000 <f_read+0x242>
    600c:	c2 01       	movw	r24, r4
    600e:	82 0f       	add	r24, r18
    6010:	93 1f       	adc	r25, r19
    6012:	69 81       	ldd	r22, Y+1	; 0x01
    6014:	7a 81       	ldd	r23, Y+2	; 0x02
    6016:	40 e0       	ldi	r20, 0x00	; 0
    6018:	52 e0       	ldi	r21, 0x02	; 2
    601a:	0e 94 54 16 	call	0x2ca8	; 0x2ca8 <mem_cpy>
    601e:	85 01       	movw	r16, r10
    6020:	10 2f       	mov	r17, r16
    6022:	00 27       	eor	r16, r16
    6024:	11 0f       	add	r17, r17
    6026:	61 c0       	rjmp	.+194    	; 0x60ea <f_read+0x32c>
    6028:	ad 81       	ldd	r26, Y+5	; 0x05
    602a:	be 81       	ldd	r27, Y+6	; 0x06
    602c:	56 96       	adiw	r26, 0x16	; 22
    602e:	2d 91       	ld	r18, X+
    6030:	3d 91       	ld	r19, X+
    6032:	4d 91       	ld	r20, X+
    6034:	5c 91       	ld	r21, X
    6036:	59 97       	sbiw	r26, 0x19	; 25
    6038:	2c 15       	cp	r18, r12
    603a:	3d 05       	cpc	r19, r13
    603c:	4e 05       	cpc	r20, r14
    603e:	5f 05       	cpc	r21, r15
    6040:	79 f1       	breq	.+94     	; 0x60a0 <f_read+0x2e2>
    6042:	14 96       	adiw	r26, 0x04	; 4
    6044:	8c 91       	ld	r24, X
    6046:	86 ff       	sbrs	r24, 6
    6048:	15 c0       	rjmp	.+42     	; 0x6074 <f_read+0x2b6>
    604a:	f8 01       	movw	r30, r16
    604c:	81 81       	ldd	r24, Z+1	; 0x01
    604e:	69 81       	ldd	r22, Y+1	; 0x01
    6050:	7a 81       	ldd	r23, Y+2	; 0x02
    6052:	01 e0       	ldi	r16, 0x01	; 1
    6054:	10 e0       	ldi	r17, 0x00	; 0
    6056:	0e 94 25 38 	call	0x704a	; 0x704a <disk_write>
    605a:	88 23       	and	r24, r24
    605c:	31 f0       	breq	.+12     	; 0x606a <f_read+0x2ac>
    605e:	81 e0       	ldi	r24, 0x01	; 1
    6060:	ad 81       	ldd	r26, Y+5	; 0x05
    6062:	be 81       	ldd	r27, Y+6	; 0x06
    6064:	15 96       	adiw	r26, 0x05	; 5
    6066:	8c 93       	st	X, r24
    6068:	18 c0       	rjmp	.+48     	; 0x609a <f_read+0x2dc>
    606a:	ed 81       	ldd	r30, Y+5	; 0x05
    606c:	fe 81       	ldd	r31, Y+6	; 0x06
    606e:	84 81       	ldd	r24, Z+4	; 0x04
    6070:	8f 7b       	andi	r24, 0xBF	; 191
    6072:	84 83       	std	Z+4, r24	; 0x04
    6074:	ad 81       	ldd	r26, Y+5	; 0x05
    6076:	be 81       	ldd	r27, Y+6	; 0x06
    6078:	ed 91       	ld	r30, X+
    607a:	fc 91       	ld	r31, X
    607c:	81 81       	ldd	r24, Z+1	; 0x01
    607e:	69 81       	ldd	r22, Y+1	; 0x01
    6080:	7a 81       	ldd	r23, Y+2	; 0x02
    6082:	a7 01       	movw	r20, r14
    6084:	96 01       	movw	r18, r12
    6086:	01 e0       	ldi	r16, 0x01	; 1
    6088:	10 e0       	ldi	r17, 0x00	; 0
    608a:	0e 94 cf 37 	call	0x6f9e	; 0x6f9e <disk_read>
    608e:	88 23       	and	r24, r24
    6090:	39 f0       	breq	.+14     	; 0x60a0 <f_read+0x2e2>
    6092:	81 e0       	ldi	r24, 0x01	; 1
    6094:	ed 81       	ldd	r30, Y+5	; 0x05
    6096:	fe 81       	ldd	r31, Y+6	; 0x06
    6098:	85 83       	std	Z+5, r24	; 0x05
    609a:	88 24       	eor	r8, r8
    609c:	83 94       	inc	r8
    609e:	46 c0       	rjmp	.+140    	; 0x612c <f_read+0x36e>
    60a0:	ad 81       	ldd	r26, Y+5	; 0x05
    60a2:	be 81       	ldd	r27, Y+6	; 0x06
    60a4:	56 96       	adiw	r26, 0x16	; 22
    60a6:	cd 92       	st	X+, r12
    60a8:	dd 92       	st	X+, r13
    60aa:	ed 92       	st	X+, r14
    60ac:	fc 92       	st	X, r15
    60ae:	59 97       	sbiw	r26, 0x19	; 25
    60b0:	ed 81       	ldd	r30, Y+5	; 0x05
    60b2:	fe 81       	ldd	r31, Y+6	; 0x06
    60b4:	26 81       	ldd	r18, Z+6	; 0x06
    60b6:	37 81       	ldd	r19, Z+7	; 0x07
    60b8:	40 85       	ldd	r20, Z+8	; 0x08
    60ba:	51 85       	ldd	r21, Z+9	; 0x09
    60bc:	c9 01       	movw	r24, r18
    60be:	91 70       	andi	r25, 0x01	; 1
    60c0:	60 e0       	ldi	r22, 0x00	; 0
    60c2:	72 e0       	ldi	r23, 0x02	; 2
    60c4:	68 1b       	sub	r22, r24
    60c6:	79 0b       	sbc	r23, r25
    60c8:	83 01       	movw	r16, r6
    60ca:	66 15       	cp	r22, r6
    60cc:	77 05       	cpc	r23, r7
    60ce:	08 f4       	brcc	.+2      	; 0x60d2 <f_read+0x314>
    60d0:	8b 01       	movw	r16, r22
    60d2:	b9 01       	movw	r22, r18
    60d4:	71 70       	andi	r23, 0x01	; 1
    60d6:	6e 5d       	subi	r22, 0xDE	; 222
    60d8:	7f 4f       	sbci	r23, 0xFF	; 255
    60da:	8d 81       	ldd	r24, Y+5	; 0x05
    60dc:	9e 81       	ldd	r25, Y+6	; 0x06
    60de:	68 0f       	add	r22, r24
    60e0:	79 1f       	adc	r23, r25
    60e2:	c2 01       	movw	r24, r4
    60e4:	a8 01       	movw	r20, r16
    60e6:	0e 94 54 16 	call	0x2ca8	; 0x2ca8 <mem_cpy>
    60ea:	40 0e       	add	r4, r16
    60ec:	51 1e       	adc	r5, r17
    60ee:	c8 01       	movw	r24, r16
    60f0:	a0 e0       	ldi	r26, 0x00	; 0
    60f2:	b0 e0       	ldi	r27, 0x00	; 0
    60f4:	ed 81       	ldd	r30, Y+5	; 0x05
    60f6:	fe 81       	ldd	r31, Y+6	; 0x06
    60f8:	26 81       	ldd	r18, Z+6	; 0x06
    60fa:	37 81       	ldd	r19, Z+7	; 0x07
    60fc:	40 85       	ldd	r20, Z+8	; 0x08
    60fe:	51 85       	ldd	r21, Z+9	; 0x09
    6100:	28 0f       	add	r18, r24
    6102:	39 1f       	adc	r19, r25
    6104:	4a 1f       	adc	r20, r26
    6106:	5b 1f       	adc	r21, r27
    6108:	26 83       	std	Z+6, r18	; 0x06
    610a:	37 83       	std	Z+7, r19	; 0x07
    610c:	40 87       	std	Z+8, r20	; 0x08
    610e:	51 87       	std	Z+9, r21	; 0x09
    6110:	eb 81       	ldd	r30, Y+3	; 0x03
    6112:	fc 81       	ldd	r31, Y+4	; 0x04
    6114:	80 81       	ld	r24, Z
    6116:	91 81       	ldd	r25, Z+1	; 0x01
    6118:	80 0f       	add	r24, r16
    611a:	91 1f       	adc	r25, r17
    611c:	91 83       	std	Z+1, r25	; 0x01
    611e:	80 83       	st	Z, r24
    6120:	60 1a       	sub	r6, r16
    6122:	71 0a       	sbc	r7, r17
    6124:	61 14       	cp	r6, r1
    6126:	71 04       	cpc	r7, r1
    6128:	09 f0       	breq	.+2      	; 0x612c <f_read+0x36e>
    612a:	a0 ce       	rjmp	.-704    	; 0x5e6c <f_read+0xae>
    612c:	88 2d       	mov	r24, r8
    612e:	26 96       	adiw	r28, 0x06	; 6
    6130:	0f b6       	in	r0, 0x3f	; 63
    6132:	f8 94       	cli
    6134:	de bf       	out	0x3e, r29	; 62
    6136:	0f be       	out	0x3f, r0	; 63
    6138:	cd bf       	out	0x3d, r28	; 61
    613a:	cf 91       	pop	r28
    613c:	df 91       	pop	r29
    613e:	1f 91       	pop	r17
    6140:	0f 91       	pop	r16
    6142:	ff 90       	pop	r15
    6144:	ef 90       	pop	r14
    6146:	df 90       	pop	r13
    6148:	cf 90       	pop	r12
    614a:	bf 90       	pop	r11
    614c:	af 90       	pop	r10
    614e:	9f 90       	pop	r9
    6150:	8f 90       	pop	r8
    6152:	7f 90       	pop	r7
    6154:	6f 90       	pop	r6
    6156:	5f 90       	pop	r5
    6158:	4f 90       	pop	r4
    615a:	3f 90       	pop	r3
    615c:	08 95       	ret

0000615e <f_gets>:
    615e:	4f 92       	push	r4
    6160:	5f 92       	push	r5
    6162:	6f 92       	push	r6
    6164:	7f 92       	push	r7
    6166:	8f 92       	push	r8
    6168:	9f 92       	push	r9
    616a:	af 92       	push	r10
    616c:	bf 92       	push	r11
    616e:	cf 92       	push	r12
    6170:	df 92       	push	r13
    6172:	ef 92       	push	r14
    6174:	ff 92       	push	r15
    6176:	0f 93       	push	r16
    6178:	1f 93       	push	r17
    617a:	df 93       	push	r29
    617c:	cf 93       	push	r28
    617e:	00 d0       	rcall	.+0      	; 0x6180 <f_gets+0x22>
    6180:	00 d0       	rcall	.+0      	; 0x6182 <f_gets+0x24>
    6182:	cd b7       	in	r28, 0x3d	; 61
    6184:	de b7       	in	r29, 0x3e	; 62
    6186:	6c 01       	movw	r12, r24
    6188:	5b 01       	movw	r10, r22
    618a:	4a 01       	movw	r8, r20
    618c:	7c 01       	movw	r14, r24
    618e:	00 e0       	ldi	r16, 0x00	; 0
    6190:	10 e0       	ldi	r17, 0x00	; 0
    6192:	08 94       	sec
    6194:	a1 08       	sbc	r10, r1
    6196:	b1 08       	sbc	r11, r1
    6198:	83 e0       	ldi	r24, 0x03	; 3
    619a:	48 2e       	mov	r4, r24
    619c:	51 2c       	mov	r5, r1
    619e:	4c 0e       	add	r4, r28
    61a0:	5d 1e       	adc	r5, r29
    61a2:	3e 01       	movw	r6, r28
    61a4:	08 94       	sec
    61a6:	61 1c       	adc	r6, r1
    61a8:	71 1c       	adc	r7, r1
    61aa:	15 c0       	rjmp	.+42     	; 0x61d6 <f_gets+0x78>
    61ac:	c4 01       	movw	r24, r8
    61ae:	b3 01       	movw	r22, r6
    61b0:	41 e0       	ldi	r20, 0x01	; 1
    61b2:	50 e0       	ldi	r21, 0x00	; 0
    61b4:	92 01       	movw	r18, r4
    61b6:	0e 94 df 2e 	call	0x5dbe	; 0x5dbe <f_read>
    61ba:	8b 81       	ldd	r24, Y+3	; 0x03
    61bc:	9c 81       	ldd	r25, Y+4	; 0x04
    61be:	01 97       	sbiw	r24, 0x01	; 1
    61c0:	69 f4       	brne	.+26     	; 0x61dc <f_gets+0x7e>
    61c2:	89 81       	ldd	r24, Y+1	; 0x01
    61c4:	8d 30       	cpi	r24, 0x0D	; 13
    61c6:	39 f0       	breq	.+14     	; 0x61d6 <f_gets+0x78>
    61c8:	f7 01       	movw	r30, r14
    61ca:	81 93       	st	Z+, r24
    61cc:	7f 01       	movw	r14, r30
    61ce:	0f 5f       	subi	r16, 0xFF	; 255
    61d0:	1f 4f       	sbci	r17, 0xFF	; 255
    61d2:	8a 30       	cpi	r24, 0x0A	; 10
    61d4:	19 f0       	breq	.+6      	; 0x61dc <f_gets+0x7e>
    61d6:	0a 15       	cp	r16, r10
    61d8:	1b 05       	cpc	r17, r11
    61da:	44 f3       	brlt	.-48     	; 0x61ac <f_gets+0x4e>
    61dc:	f7 01       	movw	r30, r14
    61de:	10 82       	st	Z, r1
    61e0:	01 2b       	or	r16, r17
    61e2:	11 f4       	brne	.+4      	; 0x61e8 <f_gets+0x8a>
    61e4:	cc 24       	eor	r12, r12
    61e6:	dd 24       	eor	r13, r13
    61e8:	c6 01       	movw	r24, r12
    61ea:	0f 90       	pop	r0
    61ec:	0f 90       	pop	r0
    61ee:	0f 90       	pop	r0
    61f0:	0f 90       	pop	r0
    61f2:	cf 91       	pop	r28
    61f4:	df 91       	pop	r29
    61f6:	1f 91       	pop	r17
    61f8:	0f 91       	pop	r16
    61fa:	ff 90       	pop	r15
    61fc:	ef 90       	pop	r14
    61fe:	df 90       	pop	r13
    6200:	cf 90       	pop	r12
    6202:	bf 90       	pop	r11
    6204:	af 90       	pop	r10
    6206:	9f 90       	pop	r9
    6208:	8f 90       	pop	r8
    620a:	7f 90       	pop	r7
    620c:	6f 90       	pop	r6
    620e:	5f 90       	pop	r5
    6210:	4f 90       	pop	r4
    6212:	08 95       	ret

00006214 <sync_fs>:
    6214:	0f 93       	push	r16
    6216:	1f 93       	push	r17
    6218:	cf 93       	push	r28
    621a:	df 93       	push	r29
    621c:	ec 01       	movw	r28, r24
    621e:	0e 94 18 18 	call	0x3030	; 0x3030 <sync_window>
    6222:	88 23       	and	r24, r24
    6224:	09 f0       	breq	.+2      	; 0x6228 <sync_fs+0x14>
    6226:	63 c0       	rjmp	.+198    	; 0x62ee <sync_fs+0xda>
    6228:	88 81       	ld	r24, Y
    622a:	83 30       	cpi	r24, 0x03	; 3
    622c:	09 f0       	breq	.+2      	; 0x6230 <sync_fs+0x1c>
    622e:	57 c0       	rjmp	.+174    	; 0x62de <sync_fs+0xca>
    6230:	8d 81       	ldd	r24, Y+5	; 0x05
    6232:	81 30       	cpi	r24, 0x01	; 1
    6234:	09 f0       	breq	.+2      	; 0x6238 <sync_fs+0x24>
    6236:	53 c0       	rjmp	.+166    	; 0x62de <sync_fs+0xca>
    6238:	be 01       	movw	r22, r28
    623a:	62 5d       	subi	r22, 0xD2	; 210
    623c:	7f 4f       	sbci	r23, 0xFF	; 255
    623e:	fb 01       	movw	r30, r22
    6240:	80 e0       	ldi	r24, 0x00	; 0
    6242:	92 e0       	ldi	r25, 0x02	; 2
    6244:	01 c0       	rjmp	.+2      	; 0x6248 <sync_fs+0x34>
    6246:	11 92       	st	Z+, r1
    6248:	01 97       	sbiw	r24, 0x01	; 1
    624a:	2f ef       	ldi	r18, 0xFF	; 255
    624c:	8f 3f       	cpi	r24, 0xFF	; 255
    624e:	92 07       	cpc	r25, r18
    6250:	d1 f7       	brne	.-12     	; 0x6246 <sync_fs+0x32>
    6252:	c4 5d       	subi	r28, 0xD4	; 212
    6254:	dd 4f       	sbci	r29, 0xFD	; 253
    6256:	85 e5       	ldi	r24, 0x55	; 85
    6258:	9a ea       	ldi	r25, 0xAA	; 170
    625a:	99 83       	std	Y+1, r25	; 0x01
    625c:	88 83       	st	Y, r24
    625e:	cc 52       	subi	r28, 0x2C	; 44
    6260:	d2 40       	sbci	r29, 0x02	; 2
    6262:	82 e5       	ldi	r24, 0x52	; 82
    6264:	92 e5       	ldi	r25, 0x52	; 82
    6266:	a1 e6       	ldi	r26, 0x61	; 97
    6268:	b1 e4       	ldi	r27, 0x41	; 65
    626a:	8e a7       	std	Y+46, r24	; 0x2e
    626c:	9f a7       	std	Y+47, r25	; 0x2f
    626e:	a8 ab       	std	Y+48, r26	; 0x30
    6270:	b9 ab       	std	Y+49, r27	; 0x31
    6272:	ce 5e       	subi	r28, 0xEE	; 238
    6274:	dd 4f       	sbci	r29, 0xFD	; 253
    6276:	82 e7       	ldi	r24, 0x72	; 114
    6278:	92 e7       	ldi	r25, 0x72	; 114
    627a:	a1 e4       	ldi	r26, 0x41	; 65
    627c:	b1 e6       	ldi	r27, 0x61	; 97
    627e:	88 83       	st	Y, r24
    6280:	99 83       	std	Y+1, r25	; 0x01
    6282:	aa 83       	std	Y+2, r26	; 0x02
    6284:	bb 83       	std	Y+3, r27	; 0x03
    6286:	c2 51       	subi	r28, 0x12	; 18
    6288:	d2 40       	sbci	r29, 0x02	; 2
    628a:	8e 85       	ldd	r24, Y+14	; 0x0e
    628c:	9f 85       	ldd	r25, Y+15	; 0x0f
    628e:	a8 89       	ldd	r26, Y+16	; 0x10
    6290:	b9 89       	ldd	r27, Y+17	; 0x11
    6292:	ca 5e       	subi	r28, 0xEA	; 234
    6294:	dd 4f       	sbci	r29, 0xFD	; 253
    6296:	88 83       	st	Y, r24
    6298:	99 83       	std	Y+1, r25	; 0x01
    629a:	aa 83       	std	Y+2, r26	; 0x02
    629c:	bb 83       	std	Y+3, r27	; 0x03
    629e:	c6 51       	subi	r28, 0x16	; 22
    62a0:	d2 40       	sbci	r29, 0x02	; 2
    62a2:	8a 85       	ldd	r24, Y+10	; 0x0a
    62a4:	9b 85       	ldd	r25, Y+11	; 0x0b
    62a6:	ac 85       	ldd	r26, Y+12	; 0x0c
    62a8:	bd 85       	ldd	r27, Y+13	; 0x0d
    62aa:	c6 5e       	subi	r28, 0xE6	; 230
    62ac:	dd 4f       	sbci	r29, 0xFD	; 253
    62ae:	88 83       	st	Y, r24
    62b0:	99 83       	std	Y+1, r25	; 0x01
    62b2:	aa 83       	std	Y+2, r26	; 0x02
    62b4:	bb 83       	std	Y+3, r27	; 0x03
    62b6:	ca 51       	subi	r28, 0x1A	; 26
    62b8:	d2 40       	sbci	r29, 0x02	; 2
    62ba:	2a 8d       	ldd	r18, Y+26	; 0x1a
    62bc:	3b 8d       	ldd	r19, Y+27	; 0x1b
    62be:	4c 8d       	ldd	r20, Y+28	; 0x1c
    62c0:	5d 8d       	ldd	r21, Y+29	; 0x1d
    62c2:	2f 5f       	subi	r18, 0xFF	; 255
    62c4:	3f 4f       	sbci	r19, 0xFF	; 255
    62c6:	4f 4f       	sbci	r20, 0xFF	; 255
    62c8:	5f 4f       	sbci	r21, 0xFF	; 255
    62ca:	2a a7       	std	Y+42, r18	; 0x2a
    62cc:	3b a7       	std	Y+43, r19	; 0x2b
    62ce:	4c a7       	std	Y+44, r20	; 0x2c
    62d0:	5d a7       	std	Y+45, r21	; 0x2d
    62d2:	89 81       	ldd	r24, Y+1	; 0x01
    62d4:	01 e0       	ldi	r16, 0x01	; 1
    62d6:	10 e0       	ldi	r17, 0x00	; 0
    62d8:	0e 94 25 38 	call	0x704a	; 0x704a <disk_write>
    62dc:	1d 82       	std	Y+5, r1	; 0x05
    62de:	89 81       	ldd	r24, Y+1	; 0x01
    62e0:	60 e0       	ldi	r22, 0x00	; 0
    62e2:	40 e0       	ldi	r20, 0x00	; 0
    62e4:	50 e0       	ldi	r21, 0x00	; 0
    62e6:	0e 94 9b 38 	call	0x7136	; 0x7136 <disk_ioctl>
    62ea:	81 11       	cpse	r24, r1
    62ec:	81 e0       	ldi	r24, 0x01	; 1
    62ee:	df 91       	pop	r29
    62f0:	cf 91       	pop	r28
    62f2:	1f 91       	pop	r17
    62f4:	0f 91       	pop	r16
    62f6:	08 95       	ret

000062f8 <f_utime>:
    62f8:	ef 92       	push	r14
    62fa:	ff 92       	push	r15
    62fc:	0f 93       	push	r16
    62fe:	1f 93       	push	r17
    6300:	df 93       	push	r29
    6302:	cf 93       	push	r28
    6304:	cd b7       	in	r28, 0x3d	; 61
    6306:	de b7       	in	r29, 0x3e	; 62
    6308:	a6 97       	sbiw	r28, 0x26	; 38
    630a:	0f b6       	in	r0, 0x3f	; 63
    630c:	f8 94       	cli
    630e:	de bf       	out	0x3e, r29	; 62
    6310:	0f be       	out	0x3f, r0	; 63
    6312:	cd bf       	out	0x3d, r28	; 61
    6314:	9e a3       	std	Y+38, r25	; 0x26
    6316:	8d a3       	std	Y+37, r24	; 0x25
    6318:	8b 01       	movw	r16, r22
    631a:	9d e0       	ldi	r25, 0x0D	; 13
    631c:	e9 2e       	mov	r14, r25
    631e:	f1 2c       	mov	r15, r1
    6320:	ec 0e       	add	r14, r28
    6322:	fd 1e       	adc	r15, r29
    6324:	c7 01       	movw	r24, r14
    6326:	be 01       	movw	r22, r28
    6328:	6b 5d       	subi	r22, 0xDB	; 219
    632a:	7f 4f       	sbci	r23, 0xFF	; 255
    632c:	41 e0       	ldi	r20, 0x01	; 1
    632e:	0e 94 03 19 	call	0x3206	; 0x3206 <find_volume>
    6332:	88 23       	and	r24, r24
    6334:	29 f5       	brne	.+74     	; 0x6380 <f_utime+0x88>
    6336:	ce 01       	movw	r24, r28
    6338:	01 96       	adiw	r24, 0x01	; 1
    633a:	9a a3       	std	Y+34, r25	; 0x22
    633c:	89 a3       	std	Y+33, r24	; 0x21
    633e:	6d a1       	ldd	r22, Y+37	; 0x25
    6340:	7e a1       	ldd	r23, Y+38	; 0x26
    6342:	c7 01       	movw	r24, r14
    6344:	0e 94 bf 22 	call	0x457e	; 0x457e <follow_path>
    6348:	88 23       	and	r24, r24
    634a:	d1 f4       	brne	.+52     	; 0x6380 <f_utime+0x88>
    634c:	ef 8d       	ldd	r30, Y+31	; 0x1f
    634e:	f8 a1       	ldd	r31, Y+32	; 0x20
    6350:	30 97       	sbiw	r30, 0x00	; 0
    6352:	11 f4       	brne	.+4      	; 0x6358 <f_utime+0x60>
    6354:	86 e0       	ldi	r24, 0x06	; 6
    6356:	14 c0       	rjmp	.+40     	; 0x6380 <f_utime+0x88>
    6358:	d8 01       	movw	r26, r16
    635a:	16 96       	adiw	r26, 0x06	; 6
    635c:	8d 91       	ld	r24, X+
    635e:	9c 91       	ld	r25, X
    6360:	17 97       	sbiw	r26, 0x07	; 7
    6362:	97 8b       	std	Z+23, r25	; 0x17
    6364:	86 8b       	std	Z+22, r24	; 0x16
    6366:	14 96       	adiw	r26, 0x04	; 4
    6368:	8d 91       	ld	r24, X+
    636a:	9c 91       	ld	r25, X
    636c:	15 97       	sbiw	r26, 0x05	; 5
    636e:	91 8f       	std	Z+25, r25	; 0x19
    6370:	80 8f       	std	Z+24, r24	; 0x18
    6372:	ed 85       	ldd	r30, Y+13	; 0x0d
    6374:	fe 85       	ldd	r31, Y+14	; 0x0e
    6376:	81 e0       	ldi	r24, 0x01	; 1
    6378:	84 83       	std	Z+4, r24	; 0x04
    637a:	cf 01       	movw	r24, r30
    637c:	0e 94 0a 31 	call	0x6214	; 0x6214 <sync_fs>
    6380:	a6 96       	adiw	r28, 0x26	; 38
    6382:	0f b6       	in	r0, 0x3f	; 63
    6384:	f8 94       	cli
    6386:	de bf       	out	0x3e, r29	; 62
    6388:	0f be       	out	0x3f, r0	; 63
    638a:	cd bf       	out	0x3d, r28	; 61
    638c:	cf 91       	pop	r28
    638e:	df 91       	pop	r29
    6390:	1f 91       	pop	r17
    6392:	0f 91       	pop	r16
    6394:	ff 90       	pop	r15
    6396:	ef 90       	pop	r14
    6398:	08 95       	ret

0000639a <f_rename>:
    639a:	cf 92       	push	r12
    639c:	df 92       	push	r13
    639e:	ef 92       	push	r14
    63a0:	ff 92       	push	r15
    63a2:	0f 93       	push	r16
    63a4:	1f 93       	push	r17
    63a6:	df 93       	push	r29
    63a8:	cf 93       	push	r28
    63aa:	cd b7       	in	r28, 0x3d	; 61
    63ac:	de b7       	in	r29, 0x3e	; 62
    63ae:	c5 55       	subi	r28, 0x55	; 85
    63b0:	d0 40       	sbci	r29, 0x00	; 0
    63b2:	0f b6       	in	r0, 0x3f	; 63
    63b4:	f8 94       	cli
    63b6:	de bf       	out	0x3e, r29	; 62
    63b8:	0f be       	out	0x3f, r0	; 63
    63ba:	cd bf       	out	0x3d, r28	; 61
    63bc:	8e 01       	movw	r16, r28
    63be:	0e 5a       	subi	r16, 0xAE	; 174
    63c0:	1f 4f       	sbci	r17, 0xFF	; 255
    63c2:	f8 01       	movw	r30, r16
    63c4:	91 83       	std	Z+1, r25	; 0x01
    63c6:	80 83       	st	Z, r24
    63c8:	f4 e5       	ldi	r31, 0x54	; 84
    63ca:	cf 2e       	mov	r12, r31
    63cc:	d1 2c       	mov	r13, r1
    63ce:	cc 0e       	add	r12, r28
    63d0:	dd 1e       	adc	r13, r29
    63d2:	f6 01       	movw	r30, r12
    63d4:	71 83       	std	Z+1, r23	; 0x01
    63d6:	60 83       	st	Z, r22
    63d8:	e2 e2       	ldi	r30, 0x22	; 34
    63da:	ee 2e       	mov	r14, r30
    63dc:	f1 2c       	mov	r15, r1
    63de:	ec 0e       	add	r14, r28
    63e0:	fd 1e       	adc	r15, r29
    63e2:	c7 01       	movw	r24, r14
    63e4:	b8 01       	movw	r22, r16
    63e6:	41 e0       	ldi	r20, 0x01	; 1
    63e8:	0e 94 03 19 	call	0x3206	; 0x3206 <find_volume>
    63ec:	88 23       	and	r24, r24
    63ee:	09 f0       	breq	.+2      	; 0x63f2 <f_rename+0x58>
    63f0:	eb c0       	rjmp	.+470    	; 0x65c8 <f_rename+0x22e>
    63f2:	8a a1       	ldd	r24, Y+34	; 0x22
    63f4:	9b a1       	ldd	r25, Y+35	; 0x23
    63f6:	9b af       	std	Y+59, r25	; 0x3b
    63f8:	8a af       	std	Y+58, r24	; 0x3a
    63fa:	ce 01       	movw	r24, r28
    63fc:	01 96       	adiw	r24, 0x01	; 1
    63fe:	9f ab       	std	Y+55, r25	; 0x37
    6400:	8e ab       	std	Y+54, r24	; 0x36
    6402:	f8 01       	movw	r30, r16
    6404:	60 81       	ld	r22, Z
    6406:	71 81       	ldd	r23, Z+1	; 0x01
    6408:	c7 01       	movw	r24, r14
    640a:	0e 94 bf 22 	call	0x457e	; 0x457e <follow_path>
    640e:	88 23       	and	r24, r24
    6410:	09 f0       	breq	.+2      	; 0x6414 <f_rename+0x7a>
    6412:	da c0       	rjmp	.+436    	; 0x65c8 <f_rename+0x22e>
    6414:	c7 01       	movw	r24, r14
    6416:	62 e0       	ldi	r22, 0x02	; 2
    6418:	70 e0       	ldi	r23, 0x00	; 0
    641a:	0e 94 80 16 	call	0x2d00	; 0x2d00 <chk_lock>
    641e:	88 23       	and	r24, r24
    6420:	09 f0       	breq	.+2      	; 0x6424 <f_rename+0x8a>
    6422:	d2 c0       	rjmp	.+420    	; 0x65c8 <f_rename+0x22e>
    6424:	6c a9       	ldd	r22, Y+52	; 0x34
    6426:	7d a9       	ldd	r23, Y+53	; 0x35
    6428:	61 15       	cp	r22, r1
    642a:	71 05       	cpc	r23, r1
    642c:	11 f4       	brne	.+4      	; 0x6432 <f_rename+0x98>
    642e:	84 e0       	ldi	r24, 0x04	; 4
    6430:	cb c0       	rjmp	.+406    	; 0x65c8 <f_rename+0x22e>
    6432:	65 5f       	subi	r22, 0xF5	; 245
    6434:	7f 4f       	sbci	r23, 0xFF	; 255
    6436:	ce 01       	movw	r24, r28
    6438:	0d 96       	adiw	r24, 0x0d	; 13
    643a:	45 e1       	ldi	r20, 0x15	; 21
    643c:	50 e0       	ldi	r21, 0x00	; 0
    643e:	0e 94 54 16 	call	0x2ca8	; 0x2ca8 <mem_cpy>
    6442:	8e 01       	movw	r16, r28
    6444:	06 5c       	subi	r16, 0xC6	; 198
    6446:	1f 4f       	sbci	r17, 0xFF	; 255
    6448:	c8 01       	movw	r24, r16
    644a:	b7 01       	movw	r22, r14
    644c:	48 e1       	ldi	r20, 0x18	; 24
    644e:	50 e0       	ldi	r21, 0x00	; 0
    6450:	0e 94 54 16 	call	0x2ca8	; 0x2ca8 <mem_cpy>
    6454:	c6 01       	movw	r24, r12
    6456:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <get_ldnumber>
    645a:	97 ff       	sbrs	r25, 7
    645c:	02 c0       	rjmp	.+4      	; 0x6462 <f_rename+0xc8>
    645e:	8b e0       	ldi	r24, 0x0B	; 11
    6460:	b3 c0       	rjmp	.+358    	; 0x65c8 <f_rename+0x22e>
    6462:	f6 01       	movw	r30, r12
    6464:	60 81       	ld	r22, Z
    6466:	71 81       	ldd	r23, Z+1	; 0x01
    6468:	c8 01       	movw	r24, r16
    646a:	0e 94 bf 22 	call	0x457e	; 0x457e <follow_path>
    646e:	88 23       	and	r24, r24
    6470:	11 f4       	brne	.+4      	; 0x6476 <f_rename+0xdc>
    6472:	88 e0       	ldi	r24, 0x08	; 8
    6474:	a9 c0       	rjmp	.+338    	; 0x65c8 <f_rename+0x22e>
    6476:	84 30       	cpi	r24, 0x04	; 4
    6478:	09 f0       	breq	.+2      	; 0x647c <f_rename+0xe2>
    647a:	a6 c0       	rjmp	.+332    	; 0x65c8 <f_rename+0x22e>
    647c:	c8 01       	movw	r24, r16
    647e:	0e 94 fa 24 	call	0x49f4	; 0x49f4 <dir_register>
    6482:	88 23       	and	r24, r24
    6484:	09 f0       	breq	.+2      	; 0x6488 <f_rename+0xee>
    6486:	a0 c0       	rjmp	.+320    	; 0x65c8 <f_rename+0x22e>
    6488:	fe 01       	movw	r30, r28
    648a:	e4 5b       	subi	r30, 0xB4	; 180
    648c:	ff 4f       	sbci	r31, 0xFF	; 255
    648e:	00 81       	ld	r16, Z
    6490:	11 81       	ldd	r17, Z+1	; 0x01
    6492:	c8 01       	movw	r24, r16
    6494:	0d 96       	adiw	r24, 0x0d	; 13
    6496:	be 01       	movw	r22, r28
    6498:	61 5f       	subi	r22, 0xF1	; 241
    649a:	7f 4f       	sbci	r23, 0xFF	; 255
    649c:	43 e1       	ldi	r20, 0x13	; 19
    649e:	50 e0       	ldi	r21, 0x00	; 0
    64a0:	0e 94 54 16 	call	0x2ca8	; 0x2ca8 <mem_cpy>
    64a4:	8d 85       	ldd	r24, Y+13	; 0x0d
    64a6:	80 62       	ori	r24, 0x20	; 32
    64a8:	f8 01       	movw	r30, r16
    64aa:	83 87       	std	Z+11, r24	; 0x0b
    64ac:	ca a0       	ldd	r12, Y+34	; 0x22
    64ae:	db a0       	ldd	r13, Y+35	; 0x23
    64b0:	81 e0       	ldi	r24, 0x01	; 1
    64b2:	f6 01       	movw	r30, r12
    64b4:	84 83       	std	Z+4, r24	; 0x04
    64b6:	f8 01       	movw	r30, r16
    64b8:	83 85       	ldd	r24, Z+11	; 0x0b
    64ba:	84 ff       	sbrs	r24, 4
    64bc:	79 c0       	rjmp	.+242    	; 0x65b0 <f_rename+0x216>
    64be:	28 a5       	ldd	r18, Y+40	; 0x28
    64c0:	39 a5       	ldd	r19, Y+41	; 0x29
    64c2:	4a a5       	ldd	r20, Y+42	; 0x2a
    64c4:	5b a5       	ldd	r21, Y+43	; 0x2b
    64c6:	fe 01       	movw	r30, r28
    64c8:	e0 5c       	subi	r30, 0xC0	; 192
    64ca:	ff 4f       	sbci	r31, 0xFF	; 255
    64cc:	80 81       	ld	r24, Z
    64ce:	91 81       	ldd	r25, Z+1	; 0x01
    64d0:	a2 81       	ldd	r26, Z+2	; 0x02
    64d2:	b3 81       	ldd	r27, Z+3	; 0x03
    64d4:	28 17       	cp	r18, r24
    64d6:	39 07       	cpc	r19, r25
    64d8:	4a 07       	cpc	r20, r26
    64da:	5b 07       	cpc	r21, r27
    64dc:	09 f4       	brne	.+2      	; 0x64e0 <f_rename+0x146>
    64de:	68 c0       	rjmp	.+208    	; 0x65b0 <f_rename+0x216>
    64e0:	f8 01       	movw	r30, r16
    64e2:	82 8d       	ldd	r24, Z+26	; 0x1a
    64e4:	93 8d       	ldd	r25, Z+27	; 0x1b
    64e6:	9c 01       	movw	r18, r24
    64e8:	40 e0       	ldi	r20, 0x00	; 0
    64ea:	50 e0       	ldi	r21, 0x00	; 0
    64ec:	f6 01       	movw	r30, r12
    64ee:	80 81       	ld	r24, Z
    64f0:	83 30       	cpi	r24, 0x03	; 3
    64f2:	61 f4       	brne	.+24     	; 0x650c <f_rename+0x172>
    64f4:	f8 01       	movw	r30, r16
    64f6:	84 89       	ldd	r24, Z+20	; 0x14
    64f8:	95 89       	ldd	r25, Z+21	; 0x15
    64fa:	a0 e0       	ldi	r26, 0x00	; 0
    64fc:	b0 e0       	ldi	r27, 0x00	; 0
    64fe:	dc 01       	movw	r26, r24
    6500:	99 27       	eor	r25, r25
    6502:	88 27       	eor	r24, r24
    6504:	28 2b       	or	r18, r24
    6506:	39 2b       	or	r19, r25
    6508:	4a 2b       	or	r20, r26
    650a:	5b 2b       	or	r21, r27
    650c:	6e ef       	ldi	r22, 0xFE	; 254
    650e:	e6 2e       	mov	r14, r22
    6510:	6f ef       	ldi	r22, 0xFF	; 255
    6512:	f6 2e       	mov	r15, r22
    6514:	6f ef       	ldi	r22, 0xFF	; 255
    6516:	06 2f       	mov	r16, r22
    6518:	6f ef       	ldi	r22, 0xFF	; 255
    651a:	16 2f       	mov	r17, r22
    651c:	e2 0e       	add	r14, r18
    651e:	f3 1e       	adc	r15, r19
    6520:	04 1f       	adc	r16, r20
    6522:	15 1f       	adc	r17, r21
    6524:	f6 01       	movw	r30, r12
    6526:	82 89       	ldd	r24, Z+18	; 0x12
    6528:	93 89       	ldd	r25, Z+19	; 0x13
    652a:	a4 89       	ldd	r26, Z+20	; 0x14
    652c:	b5 89       	ldd	r27, Z+21	; 0x15
    652e:	02 97       	sbiw	r24, 0x02	; 2
    6530:	a1 09       	sbc	r26, r1
    6532:	b1 09       	sbc	r27, r1
    6534:	e8 16       	cp	r14, r24
    6536:	f9 06       	cpc	r15, r25
    6538:	0a 07       	cpc	r16, r26
    653a:	1b 07       	cpc	r17, r27
    653c:	08 f0       	brcs	.+2      	; 0x6540 <f_rename+0x1a6>
    653e:	43 c0       	rjmp	.+134    	; 0x65c6 <f_rename+0x22c>
    6540:	22 81       	ldd	r18, Z+2	; 0x02
    6542:	30 e0       	ldi	r19, 0x00	; 0
    6544:	40 e0       	ldi	r20, 0x00	; 0
    6546:	50 e0       	ldi	r21, 0x00	; 0
    6548:	c8 01       	movw	r24, r16
    654a:	b7 01       	movw	r22, r14
    654c:	0e 94 b2 40 	call	0x8164	; 0x8164 <__mulsi3>
    6550:	ab 01       	movw	r20, r22
    6552:	bc 01       	movw	r22, r24
    6554:	f6 01       	movw	r30, r12
    6556:	86 a1       	ldd	r24, Z+38	; 0x26
    6558:	97 a1       	ldd	r25, Z+39	; 0x27
    655a:	a0 a5       	ldd	r26, Z+40	; 0x28
    655c:	b1 a5       	ldd	r27, Z+41	; 0x29
    655e:	48 0f       	add	r20, r24
    6560:	59 1f       	adc	r21, r25
    6562:	6a 1f       	adc	r22, r26
    6564:	7b 1f       	adc	r23, r27
    6566:	41 15       	cp	r20, r1
    6568:	51 05       	cpc	r21, r1
    656a:	61 05       	cpc	r22, r1
    656c:	71 05       	cpc	r23, r1
    656e:	59 f1       	breq	.+86     	; 0x65c6 <f_rename+0x22c>
    6570:	c6 01       	movw	r24, r12
    6572:	0e 94 7b 18 	call	0x30f6	; 0x30f6 <move_window>
    6576:	4a a1       	ldd	r20, Y+34	; 0x22
    6578:	5b a1       	ldd	r21, Y+35	; 0x23
    657a:	88 23       	and	r24, r24
    657c:	29 f5       	brne	.+74     	; 0x65c8 <f_rename+0x22e>
    657e:	9a 01       	movw	r18, r20
    6580:	22 5b       	subi	r18, 0xB2	; 178
    6582:	3f 4f       	sbci	r19, 0xFF	; 255
    6584:	f9 01       	movw	r30, r18
    6586:	81 81       	ldd	r24, Z+1	; 0x01
    6588:	8e 32       	cpi	r24, 0x2E	; 46
    658a:	91 f4       	brne	.+36     	; 0x65b0 <f_rename+0x216>
    658c:	fe 01       	movw	r30, r28
    658e:	e0 5c       	subi	r30, 0xC0	; 192
    6590:	ff 4f       	sbci	r31, 0xFF	; 255
    6592:	80 81       	ld	r24, Z
    6594:	91 81       	ldd	r25, Z+1	; 0x01
    6596:	a2 81       	ldd	r26, Z+2	; 0x02
    6598:	b3 81       	ldd	r27, Z+3	; 0x03
    659a:	f9 01       	movw	r30, r18
    659c:	93 8f       	std	Z+27, r25	; 0x1b
    659e:	82 8f       	std	Z+26, r24	; 0x1a
    65a0:	cd 01       	movw	r24, r26
    65a2:	aa 27       	eor	r26, r26
    65a4:	bb 27       	eor	r27, r27
    65a6:	95 8b       	std	Z+21, r25	; 0x15
    65a8:	84 8b       	std	Z+20, r24	; 0x14
    65aa:	81 e0       	ldi	r24, 0x01	; 1
    65ac:	fa 01       	movw	r30, r20
    65ae:	84 83       	std	Z+4, r24	; 0x04
    65b0:	ce 01       	movw	r24, r28
    65b2:	82 96       	adiw	r24, 0x22	; 34
    65b4:	0e 94 1d 20 	call	0x403a	; 0x403a <dir_remove>
    65b8:	88 23       	and	r24, r24
    65ba:	31 f4       	brne	.+12     	; 0x65c8 <f_rename+0x22e>
    65bc:	8a a1       	ldd	r24, Y+34	; 0x22
    65be:	9b a1       	ldd	r25, Y+35	; 0x23
    65c0:	0e 94 0a 31 	call	0x6214	; 0x6214 <sync_fs>
    65c4:	01 c0       	rjmp	.+2      	; 0x65c8 <f_rename+0x22e>
    65c6:	82 e0       	ldi	r24, 0x02	; 2
    65c8:	cb 5a       	subi	r28, 0xAB	; 171
    65ca:	df 4f       	sbci	r29, 0xFF	; 255
    65cc:	0f b6       	in	r0, 0x3f	; 63
    65ce:	f8 94       	cli
    65d0:	de bf       	out	0x3e, r29	; 62
    65d2:	0f be       	out	0x3f, r0	; 63
    65d4:	cd bf       	out	0x3d, r28	; 61
    65d6:	cf 91       	pop	r28
    65d8:	df 91       	pop	r29
    65da:	1f 91       	pop	r17
    65dc:	0f 91       	pop	r16
    65de:	ff 90       	pop	r15
    65e0:	ef 90       	pop	r14
    65e2:	df 90       	pop	r13
    65e4:	cf 90       	pop	r12
    65e6:	08 95       	ret

000065e8 <f_chmod>:
    65e8:	ef 92       	push	r14
    65ea:	ff 92       	push	r15
    65ec:	0f 93       	push	r16
    65ee:	1f 93       	push	r17
    65f0:	df 93       	push	r29
    65f2:	cf 93       	push	r28
    65f4:	cd b7       	in	r28, 0x3d	; 61
    65f6:	de b7       	in	r29, 0x3e	; 62
    65f8:	a6 97       	sbiw	r28, 0x26	; 38
    65fa:	0f b6       	in	r0, 0x3f	; 63
    65fc:	f8 94       	cli
    65fe:	de bf       	out	0x3e, r29	; 62
    6600:	0f be       	out	0x3f, r0	; 63
    6602:	cd bf       	out	0x3d, r28	; 61
    6604:	9e a3       	std	Y+38, r25	; 0x26
    6606:	8d a3       	std	Y+37, r24	; 0x25
    6608:	e6 2e       	mov	r14, r22
    660a:	f4 2e       	mov	r15, r20
    660c:	8e 01       	movw	r16, r28
    660e:	03 5f       	subi	r16, 0xF3	; 243
    6610:	1f 4f       	sbci	r17, 0xFF	; 255
    6612:	c8 01       	movw	r24, r16
    6614:	be 01       	movw	r22, r28
    6616:	6b 5d       	subi	r22, 0xDB	; 219
    6618:	7f 4f       	sbci	r23, 0xFF	; 255
    661a:	41 e0       	ldi	r20, 0x01	; 1
    661c:	0e 94 03 19 	call	0x3206	; 0x3206 <find_volume>
    6620:	88 23       	and	r24, r24
    6622:	09 f5       	brne	.+66     	; 0x6666 <f_chmod+0x7e>
    6624:	ce 01       	movw	r24, r28
    6626:	01 96       	adiw	r24, 0x01	; 1
    6628:	9a a3       	std	Y+34, r25	; 0x22
    662a:	89 a3       	std	Y+33, r24	; 0x21
    662c:	6d a1       	ldd	r22, Y+37	; 0x25
    662e:	7e a1       	ldd	r23, Y+38	; 0x26
    6630:	c8 01       	movw	r24, r16
    6632:	0e 94 bf 22 	call	0x457e	; 0x457e <follow_path>
    6636:	88 23       	and	r24, r24
    6638:	b1 f4       	brne	.+44     	; 0x6666 <f_chmod+0x7e>
    663a:	ef 8d       	ldd	r30, Y+31	; 0x1f
    663c:	f8 a1       	ldd	r31, Y+32	; 0x20
    663e:	30 97       	sbiw	r30, 0x00	; 0
    6640:	11 f4       	brne	.+4      	; 0x6646 <f_chmod+0x5e>
    6642:	86 e0       	ldi	r24, 0x06	; 6
    6644:	10 c0       	rjmp	.+32     	; 0x6666 <f_chmod+0x7e>
    6646:	9f 2d       	mov	r25, r15
    6648:	97 72       	andi	r25, 0x27	; 39
    664a:	89 2f       	mov	r24, r25
    664c:	80 95       	com	r24
    664e:	23 85       	ldd	r18, Z+11	; 0x0b
    6650:	82 23       	and	r24, r18
    6652:	9e 21       	and	r25, r14
    6654:	89 2b       	or	r24, r25
    6656:	83 87       	std	Z+11, r24	; 0x0b
    6658:	ed 85       	ldd	r30, Y+13	; 0x0d
    665a:	fe 85       	ldd	r31, Y+14	; 0x0e
    665c:	81 e0       	ldi	r24, 0x01	; 1
    665e:	84 83       	std	Z+4, r24	; 0x04
    6660:	cf 01       	movw	r24, r30
    6662:	0e 94 0a 31 	call	0x6214	; 0x6214 <sync_fs>
    6666:	a6 96       	adiw	r28, 0x26	; 38
    6668:	0f b6       	in	r0, 0x3f	; 63
    666a:	f8 94       	cli
    666c:	de bf       	out	0x3e, r29	; 62
    666e:	0f be       	out	0x3f, r0	; 63
    6670:	cd bf       	out	0x3d, r28	; 61
    6672:	cf 91       	pop	r28
    6674:	df 91       	pop	r29
    6676:	1f 91       	pop	r17
    6678:	0f 91       	pop	r16
    667a:	ff 90       	pop	r15
    667c:	ef 90       	pop	r14
    667e:	08 95       	ret

00006680 <f_mkdir>:
    6680:	2f 92       	push	r2
    6682:	3f 92       	push	r3
    6684:	4f 92       	push	r4
    6686:	5f 92       	push	r5
    6688:	6f 92       	push	r6
    668a:	7f 92       	push	r7
    668c:	8f 92       	push	r8
    668e:	9f 92       	push	r9
    6690:	af 92       	push	r10
    6692:	bf 92       	push	r11
    6694:	cf 92       	push	r12
    6696:	df 92       	push	r13
    6698:	ef 92       	push	r14
    669a:	ff 92       	push	r15
    669c:	0f 93       	push	r16
    669e:	1f 93       	push	r17
    66a0:	df 93       	push	r29
    66a2:	cf 93       	push	r28
    66a4:	cd b7       	in	r28, 0x3d	; 61
    66a6:	de b7       	in	r29, 0x3e	; 62
    66a8:	a8 97       	sbiw	r28, 0x28	; 40
    66aa:	0f b6       	in	r0, 0x3f	; 63
    66ac:	f8 94       	cli
    66ae:	de bf       	out	0x3e, r29	; 62
    66b0:	0f be       	out	0x3f, r0	; 63
    66b2:	cd bf       	out	0x3d, r28	; 61
    66b4:	9e a3       	std	Y+38, r25	; 0x26
    66b6:	8d a3       	std	Y+37, r24	; 0x25
    66b8:	9d e0       	ldi	r25, 0x0D	; 13
    66ba:	e9 2e       	mov	r14, r25
    66bc:	f1 2c       	mov	r15, r1
    66be:	ec 0e       	add	r14, r28
    66c0:	fd 1e       	adc	r15, r29
    66c2:	c7 01       	movw	r24, r14
    66c4:	be 01       	movw	r22, r28
    66c6:	6b 5d       	subi	r22, 0xDB	; 219
    66c8:	7f 4f       	sbci	r23, 0xFF	; 255
    66ca:	41 e0       	ldi	r20, 0x01	; 1
    66cc:	0e 94 03 19 	call	0x3206	; 0x3206 <find_volume>
    66d0:	18 2f       	mov	r17, r24
    66d2:	88 23       	and	r24, r24
    66d4:	09 f0       	breq	.+2      	; 0x66d8 <f_mkdir+0x58>
    66d6:	17 c1       	rjmp	.+558    	; 0x6906 <f_mkdir+0x286>
    66d8:	ce 01       	movw	r24, r28
    66da:	01 96       	adiw	r24, 0x01	; 1
    66dc:	9a a3       	std	Y+34, r25	; 0x22
    66de:	89 a3       	std	Y+33, r24	; 0x21
    66e0:	6d a1       	ldd	r22, Y+37	; 0x25
    66e2:	7e a1       	ldd	r23, Y+38	; 0x26
    66e4:	c7 01       	movw	r24, r14
    66e6:	0e 94 bf 22 	call	0x457e	; 0x457e <follow_path>
    66ea:	18 2f       	mov	r17, r24
    66ec:	88 23       	and	r24, r24
    66ee:	11 f4       	brne	.+4      	; 0x66f4 <f_mkdir+0x74>
    66f0:	18 e0       	ldi	r17, 0x08	; 8
    66f2:	09 c1       	rjmp	.+530    	; 0x6906 <f_mkdir+0x286>
    66f4:	84 30       	cpi	r24, 0x04	; 4
    66f6:	09 f0       	breq	.+2      	; 0x66fa <f_mkdir+0x7a>
    66f8:	06 c1       	rjmp	.+524    	; 0x6906 <f_mkdir+0x286>
    66fa:	8d 85       	ldd	r24, Y+13	; 0x0d
    66fc:	9e 85       	ldd	r25, Y+14	; 0x0e
    66fe:	40 e0       	ldi	r20, 0x00	; 0
    6700:	50 e0       	ldi	r21, 0x00	; 0
    6702:	60 e0       	ldi	r22, 0x00	; 0
    6704:	70 e0       	ldi	r23, 0x00	; 0
    6706:	0e 94 bb 1e 	call	0x3d76	; 0x3d76 <create_chain>
    670a:	4b 01       	movw	r8, r22
    670c:	5c 01       	movw	r10, r24
    670e:	61 15       	cp	r22, r1
    6710:	71 05       	cpc	r23, r1
    6712:	81 05       	cpc	r24, r1
    6714:	91 05       	cpc	r25, r1
    6716:	11 f4       	brne	.+4      	; 0x671c <f_mkdir+0x9c>
    6718:	17 e0       	ldi	r17, 0x07	; 7
    671a:	d4 c0       	rjmp	.+424    	; 0x68c4 <f_mkdir+0x244>
    671c:	61 30       	cpi	r22, 0x01	; 1
    671e:	71 05       	cpc	r23, r1
    6720:	81 05       	cpc	r24, r1
    6722:	91 05       	cpc	r25, r1
    6724:	11 f4       	brne	.+4      	; 0x672a <f_mkdir+0xaa>
    6726:	12 e0       	ldi	r17, 0x02	; 2
    6728:	cd c0       	rjmp	.+410    	; 0x68c4 <f_mkdir+0x244>
    672a:	6f 3f       	cpi	r22, 0xFF	; 255
    672c:	3f ef       	ldi	r19, 0xFF	; 255
    672e:	73 07       	cpc	r23, r19
    6730:	3f ef       	ldi	r19, 0xFF	; 255
    6732:	83 07       	cpc	r24, r19
    6734:	3f ef       	ldi	r19, 0xFF	; 255
    6736:	93 07       	cpc	r25, r19
    6738:	09 f4       	brne	.+2      	; 0x673c <f_mkdir+0xbc>
    673a:	ff c0       	rjmp	.+510    	; 0x693a <f_mkdir+0x2ba>
    673c:	8d 85       	ldd	r24, Y+13	; 0x0d
    673e:	9e 85       	ldd	r25, Y+14	; 0x0e
    6740:	0e 94 18 18 	call	0x3030	; 0x3030 <sync_window>
    6744:	18 2f       	mov	r17, r24
    6746:	88 23       	and	r24, r24
    6748:	09 f0       	breq	.+2      	; 0x674c <f_mkdir+0xcc>
    674a:	bc c0       	rjmp	.+376    	; 0x68c4 <f_mkdir+0x244>
    674c:	cd 84       	ldd	r12, Y+13	; 0x0d
    674e:	de 84       	ldd	r13, Y+14	; 0x0e
    6750:	8e ef       	ldi	r24, 0xFE	; 254
    6752:	e8 2e       	mov	r14, r24
    6754:	8f ef       	ldi	r24, 0xFF	; 255
    6756:	f8 2e       	mov	r15, r24
    6758:	8f ef       	ldi	r24, 0xFF	; 255
    675a:	08 2f       	mov	r16, r24
    675c:	8f ef       	ldi	r24, 0xFF	; 255
    675e:	18 2f       	mov	r17, r24
    6760:	e8 0c       	add	r14, r8
    6762:	f9 1c       	adc	r15, r9
    6764:	0a 1d       	adc	r16, r10
    6766:	1b 1d       	adc	r17, r11
    6768:	f6 01       	movw	r30, r12
    676a:	82 89       	ldd	r24, Z+18	; 0x12
    676c:	93 89       	ldd	r25, Z+19	; 0x13
    676e:	a4 89       	ldd	r26, Z+20	; 0x14
    6770:	b5 89       	ldd	r27, Z+21	; 0x15
    6772:	02 97       	sbiw	r24, 0x02	; 2
    6774:	a1 09       	sbc	r26, r1
    6776:	b1 09       	sbc	r27, r1
    6778:	e8 16       	cp	r14, r24
    677a:	f9 06       	cpc	r15, r25
    677c:	0a 07       	cpc	r16, r26
    677e:	1b 07       	cpc	r17, r27
    6780:	20 f0       	brcs	.+8      	; 0x678a <f_mkdir+0x10a>
    6782:	44 24       	eor	r4, r4
    6784:	55 24       	eor	r5, r5
    6786:	32 01       	movw	r6, r4
    6788:	14 c0       	rjmp	.+40     	; 0x67b2 <f_mkdir+0x132>
    678a:	f6 01       	movw	r30, r12
    678c:	22 81       	ldd	r18, Z+2	; 0x02
    678e:	30 e0       	ldi	r19, 0x00	; 0
    6790:	40 e0       	ldi	r20, 0x00	; 0
    6792:	50 e0       	ldi	r21, 0x00	; 0
    6794:	c8 01       	movw	r24, r16
    6796:	b7 01       	movw	r22, r14
    6798:	0e 94 b2 40 	call	0x8164	; 0x8164 <__mulsi3>
    679c:	2b 01       	movw	r4, r22
    679e:	3c 01       	movw	r6, r24
    67a0:	f6 01       	movw	r30, r12
    67a2:	86 a1       	ldd	r24, Z+38	; 0x26
    67a4:	97 a1       	ldd	r25, Z+39	; 0x27
    67a6:	a0 a5       	ldd	r26, Z+40	; 0x28
    67a8:	b1 a5       	ldd	r27, Z+41	; 0x29
    67aa:	48 0e       	add	r4, r24
    67ac:	59 1e       	adc	r5, r25
    67ae:	6a 1e       	adc	r6, r26
    67b0:	7b 1e       	adc	r7, r27
    67b2:	1e e2       	ldi	r17, 0x2E	; 46
    67b4:	e1 2e       	mov	r14, r17
    67b6:	f1 2c       	mov	r15, r1
    67b8:	ec 0c       	add	r14, r12
    67ba:	fd 1c       	adc	r15, r13
    67bc:	f7 01       	movw	r30, r14
    67be:	80 e0       	ldi	r24, 0x00	; 0
    67c0:	92 e0       	ldi	r25, 0x02	; 2
    67c2:	01 c0       	rjmp	.+2      	; 0x67c6 <f_mkdir+0x146>
    67c4:	11 92       	st	Z+, r1
    67c6:	01 97       	sbiw	r24, 0x01	; 1
    67c8:	2f ef       	ldi	r18, 0xFF	; 255
    67ca:	8f 3f       	cpi	r24, 0xFF	; 255
    67cc:	92 07       	cpc	r25, r18
    67ce:	d1 f7       	brne	.-12     	; 0x67c4 <f_mkdir+0x144>
    67d0:	f7 01       	movw	r30, r14
    67d2:	8b e0       	ldi	r24, 0x0B	; 11
    67d4:	90 e0       	ldi	r25, 0x00	; 0
    67d6:	20 e2       	ldi	r18, 0x20	; 32
    67d8:	01 c0       	rjmp	.+2      	; 0x67dc <f_mkdir+0x15c>
    67da:	21 93       	st	Z+, r18
    67dc:	01 97       	sbiw	r24, 0x01	; 1
    67de:	3f ef       	ldi	r19, 0xFF	; 255
    67e0:	8f 3f       	cpi	r24, 0xFF	; 255
    67e2:	93 07       	cpc	r25, r19
    67e4:	d1 f7       	brne	.-12     	; 0x67da <f_mkdir+0x15a>
    67e6:	1e e2       	ldi	r17, 0x2E	; 46
    67e8:	f6 01       	movw	r30, r12
    67ea:	16 a7       	std	Z+46, r17	; 0x2e
    67ec:	80 e1       	ldi	r24, 0x10	; 16
    67ee:	81 af       	std	Z+57, r24	; 0x39
    67f0:	80 e0       	ldi	r24, 0x00	; 0
    67f2:	90 e0       	ldi	r25, 0x00	; 0
    67f4:	a9 e6       	ldi	r26, 0x69	; 105
    67f6:	bd eb       	ldi	r27, 0xBD	; 189
    67f8:	f7 01       	movw	r30, r14
    67fa:	86 8b       	std	Z+22, r24	; 0x16
    67fc:	97 8b       	std	Z+23, r25	; 0x17
    67fe:	a0 8f       	std	Z+24, r26	; 0x18
    6800:	b1 8f       	std	Z+25, r27	; 0x19
    6802:	98 a6       	std	Y+40, r9	; 0x28
    6804:	8f a2       	std	Y+39, r8	; 0x27
    6806:	93 8e       	std	Z+27, r9	; 0x1b
    6808:	82 8e       	std	Z+26, r8	; 0x1a
    680a:	c5 01       	movw	r24, r10
    680c:	aa 27       	eor	r26, r26
    680e:	bb 27       	eor	r27, r27
    6810:	1c 01       	movw	r2, r24
    6812:	95 8b       	std	Z+21, r25	; 0x15
    6814:	84 8b       	std	Z+20, r24	; 0x14
    6816:	c7 01       	movw	r24, r14
    6818:	80 96       	adiw	r24, 0x20	; 32
    681a:	b7 01       	movw	r22, r14
    681c:	40 e2       	ldi	r20, 0x20	; 32
    681e:	50 e0       	ldi	r21, 0x00	; 0
    6820:	0e 94 54 16 	call	0x2ca8	; 0x2ca8 <mem_cpy>
    6824:	2f e4       	ldi	r18, 0x4F	; 79
    6826:	30 e0       	ldi	r19, 0x00	; 0
    6828:	c2 0e       	add	r12, r18
    682a:	d3 1e       	adc	r13, r19
    682c:	f6 01       	movw	r30, r12
    682e:	10 83       	st	Z, r17
    6830:	21 eb       	ldi	r18, 0xB1	; 177
    6832:	3f ef       	ldi	r19, 0xFF	; 255
    6834:	c2 0e       	add	r12, r18
    6836:	d3 1e       	adc	r13, r19
    6838:	2b 89       	ldd	r18, Y+19	; 0x13
    683a:	3c 89       	ldd	r19, Y+20	; 0x14
    683c:	4d 89       	ldd	r20, Y+21	; 0x15
    683e:	5e 89       	ldd	r21, Y+22	; 0x16
    6840:	6d 85       	ldd	r22, Y+13	; 0x0d
    6842:	7e 85       	ldd	r23, Y+14	; 0x0e
    6844:	fb 01       	movw	r30, r22
    6846:	80 81       	ld	r24, Z
    6848:	83 30       	cpi	r24, 0x03	; 3
    684a:	69 f4       	brne	.+26     	; 0x6866 <f_mkdir+0x1e6>
    684c:	82 a1       	ldd	r24, Z+34	; 0x22
    684e:	93 a1       	ldd	r25, Z+35	; 0x23
    6850:	a4 a1       	ldd	r26, Z+36	; 0x24
    6852:	b5 a1       	ldd	r27, Z+37	; 0x25
    6854:	28 17       	cp	r18, r24
    6856:	39 07       	cpc	r19, r25
    6858:	4a 07       	cpc	r20, r26
    685a:	5b 07       	cpc	r21, r27
    685c:	21 f4       	brne	.+8      	; 0x6866 <f_mkdir+0x1e6>
    685e:	20 e0       	ldi	r18, 0x00	; 0
    6860:	30 e0       	ldi	r19, 0x00	; 0
    6862:	40 e0       	ldi	r20, 0x00	; 0
    6864:	50 e0       	ldi	r21, 0x00	; 0
    6866:	f6 01       	movw	r30, r12
    6868:	e2 5b       	subi	r30, 0xB2	; 178
    686a:	ff 4f       	sbci	r31, 0xFF	; 255
    686c:	33 8f       	std	Z+27, r19	; 0x1b
    686e:	22 8f       	std	Z+26, r18	; 0x1a
    6870:	ca 01       	movw	r24, r20
    6872:	aa 27       	eor	r26, r26
    6874:	bb 27       	eor	r27, r27
    6876:	95 8b       	std	Z+21, r25	; 0x15
    6878:	84 8b       	std	Z+20, r24	; 0x14
    687a:	fb 01       	movw	r30, r22
    687c:	02 81       	ldd	r16, Z+2	; 0x02
    687e:	dd 24       	eor	r13, r13
    6880:	d3 94       	inc	r13
    6882:	1d c0       	rjmp	.+58     	; 0x68be <f_mkdir+0x23e>
    6884:	ed 85       	ldd	r30, Y+13	; 0x0d
    6886:	fe 85       	ldd	r31, Y+14	; 0x0e
    6888:	42 a6       	std	Z+42, r4	; 0x2a
    688a:	53 a6       	std	Z+43, r5	; 0x2b
    688c:	64 a6       	std	Z+44, r6	; 0x2c
    688e:	75 a6       	std	Z+45, r7	; 0x2d
    6890:	d4 82       	std	Z+4, r13	; 0x04
    6892:	cf 01       	movw	r24, r30
    6894:	0e 94 18 18 	call	0x3030	; 0x3030 <sync_window>
    6898:	18 2f       	mov	r17, r24
    689a:	88 23       	and	r24, r24
    689c:	99 f4       	brne	.+38     	; 0x68c4 <f_mkdir+0x244>
    689e:	f7 01       	movw	r30, r14
    68a0:	80 e0       	ldi	r24, 0x00	; 0
    68a2:	92 e0       	ldi	r25, 0x02	; 2
    68a4:	01 c0       	rjmp	.+2      	; 0x68a8 <f_mkdir+0x228>
    68a6:	11 92       	st	Z+, r1
    68a8:	01 97       	sbiw	r24, 0x01	; 1
    68aa:	2f ef       	ldi	r18, 0xFF	; 255
    68ac:	8f 3f       	cpi	r24, 0xFF	; 255
    68ae:	92 07       	cpc	r25, r18
    68b0:	d1 f7       	brne	.-12     	; 0x68a6 <f_mkdir+0x226>
    68b2:	08 94       	sec
    68b4:	41 1c       	adc	r4, r1
    68b6:	51 1c       	adc	r5, r1
    68b8:	61 1c       	adc	r6, r1
    68ba:	71 1c       	adc	r7, r1
    68bc:	01 50       	subi	r16, 0x01	; 1
    68be:	00 23       	and	r16, r16
    68c0:	09 f7       	brne	.-62     	; 0x6884 <f_mkdir+0x204>
    68c2:	3d c0       	rjmp	.+122    	; 0x693e <f_mkdir+0x2be>
    68c4:	8d 85       	ldd	r24, Y+13	; 0x0d
    68c6:	9e 85       	ldd	r25, Y+14	; 0x0e
    68c8:	b5 01       	movw	r22, r10
    68ca:	a4 01       	movw	r20, r8
    68cc:	0e 94 a5 1f 	call	0x3f4a	; 0x3f4a <remove_chain>
    68d0:	1a c0       	rjmp	.+52     	; 0x6906 <f_mkdir+0x286>
    68d2:	ef 8d       	ldd	r30, Y+31	; 0x1f
    68d4:	f8 a1       	ldd	r31, Y+32	; 0x20
    68d6:	80 e1       	ldi	r24, 0x10	; 16
    68d8:	83 87       	std	Z+11, r24	; 0x0b
    68da:	80 e0       	ldi	r24, 0x00	; 0
    68dc:	90 e0       	ldi	r25, 0x00	; 0
    68de:	a9 e6       	ldi	r26, 0x69	; 105
    68e0:	bd eb       	ldi	r27, 0xBD	; 189
    68e2:	86 8b       	std	Z+22, r24	; 0x16
    68e4:	97 8b       	std	Z+23, r25	; 0x17
    68e6:	a0 8f       	std	Z+24, r26	; 0x18
    68e8:	b1 8f       	std	Z+25, r27	; 0x19
    68ea:	8f a1       	ldd	r24, Y+39	; 0x27
    68ec:	98 a5       	ldd	r25, Y+40	; 0x28
    68ee:	93 8f       	std	Z+27, r25	; 0x1b
    68f0:	82 8f       	std	Z+26, r24	; 0x1a
    68f2:	35 8a       	std	Z+21, r3	; 0x15
    68f4:	24 8a       	std	Z+20, r2	; 0x14
    68f6:	ed 85       	ldd	r30, Y+13	; 0x0d
    68f8:	fe 85       	ldd	r31, Y+14	; 0x0e
    68fa:	81 e0       	ldi	r24, 0x01	; 1
    68fc:	84 83       	std	Z+4, r24	; 0x04
    68fe:	cf 01       	movw	r24, r30
    6900:	0e 94 0a 31 	call	0x6214	; 0x6214 <sync_fs>
    6904:	18 2f       	mov	r17, r24
    6906:	81 2f       	mov	r24, r17
    6908:	a8 96       	adiw	r28, 0x28	; 40
    690a:	0f b6       	in	r0, 0x3f	; 63
    690c:	f8 94       	cli
    690e:	de bf       	out	0x3e, r29	; 62
    6910:	0f be       	out	0x3f, r0	; 63
    6912:	cd bf       	out	0x3d, r28	; 61
    6914:	cf 91       	pop	r28
    6916:	df 91       	pop	r29
    6918:	1f 91       	pop	r17
    691a:	0f 91       	pop	r16
    691c:	ff 90       	pop	r15
    691e:	ef 90       	pop	r14
    6920:	df 90       	pop	r13
    6922:	cf 90       	pop	r12
    6924:	bf 90       	pop	r11
    6926:	af 90       	pop	r10
    6928:	9f 90       	pop	r9
    692a:	8f 90       	pop	r8
    692c:	7f 90       	pop	r7
    692e:	6f 90       	pop	r6
    6930:	5f 90       	pop	r5
    6932:	4f 90       	pop	r4
    6934:	3f 90       	pop	r3
    6936:	2f 90       	pop	r2
    6938:	08 95       	ret
    693a:	11 e0       	ldi	r17, 0x01	; 1
    693c:	c3 cf       	rjmp	.-122    	; 0x68c4 <f_mkdir+0x244>
    693e:	ce 01       	movw	r24, r28
    6940:	0d 96       	adiw	r24, 0x0d	; 13
    6942:	0e 94 fa 24 	call	0x49f4	; 0x49f4 <dir_register>
    6946:	18 2f       	mov	r17, r24
    6948:	88 23       	and	r24, r24
    694a:	19 f2       	breq	.-122    	; 0x68d2 <f_mkdir+0x252>
    694c:	bb cf       	rjmp	.-138    	; 0x68c4 <f_mkdir+0x244>

0000694e <f_unlink>:
    694e:	cf 92       	push	r12
    6950:	df 92       	push	r13
    6952:	ef 92       	push	r14
    6954:	ff 92       	push	r15
    6956:	0f 93       	push	r16
    6958:	1f 93       	push	r17
    695a:	df 93       	push	r29
    695c:	cf 93       	push	r28
    695e:	cd b7       	in	r28, 0x3d	; 61
    6960:	de b7       	in	r29, 0x3e	; 62
    6962:	ee 97       	sbiw	r28, 0x3e	; 62
    6964:	0f b6       	in	r0, 0x3f	; 63
    6966:	f8 94       	cli
    6968:	de bf       	out	0x3e, r29	; 62
    696a:	0f be       	out	0x3f, r0	; 63
    696c:	cd bf       	out	0x3d, r28	; 61
    696e:	9e af       	std	Y+62, r25	; 0x3e
    6970:	8d af       	std	Y+61, r24	; 0x3d
    6972:	8e 01       	movw	r16, r28
    6974:	03 5f       	subi	r16, 0xF3	; 243
    6976:	1f 4f       	sbci	r17, 0xFF	; 255
    6978:	c8 01       	movw	r24, r16
    697a:	be 01       	movw	r22, r28
    697c:	63 5c       	subi	r22, 0xC3	; 195
    697e:	7f 4f       	sbci	r23, 0xFF	; 255
    6980:	41 e0       	ldi	r20, 0x01	; 1
    6982:	0e 94 03 19 	call	0x3206	; 0x3206 <find_volume>
    6986:	88 23       	and	r24, r24
    6988:	09 f0       	breq	.+2      	; 0x698c <f_unlink+0x3e>
    698a:	73 c0       	rjmp	.+230    	; 0x6a72 <f_unlink+0x124>
    698c:	ce 01       	movw	r24, r28
    698e:	01 96       	adiw	r24, 0x01	; 1
    6990:	9a a3       	std	Y+34, r25	; 0x22
    6992:	89 a3       	std	Y+33, r24	; 0x21
    6994:	6d ad       	ldd	r22, Y+61	; 0x3d
    6996:	7e ad       	ldd	r23, Y+62	; 0x3e
    6998:	c8 01       	movw	r24, r16
    699a:	0e 94 bf 22 	call	0x457e	; 0x457e <follow_path>
    699e:	88 23       	and	r24, r24
    69a0:	09 f0       	breq	.+2      	; 0x69a4 <f_unlink+0x56>
    69a2:	67 c0       	rjmp	.+206    	; 0x6a72 <f_unlink+0x124>
    69a4:	c8 01       	movw	r24, r16
    69a6:	62 e0       	ldi	r22, 0x02	; 2
    69a8:	70 e0       	ldi	r23, 0x00	; 0
    69aa:	0e 94 80 16 	call	0x2d00	; 0x2d00 <chk_lock>
    69ae:	88 23       	and	r24, r24
    69b0:	09 f0       	breq	.+2      	; 0x69b4 <f_unlink+0x66>
    69b2:	5f c0       	rjmp	.+190    	; 0x6a72 <f_unlink+0x124>
    69b4:	af 8d       	ldd	r26, Y+31	; 0x1f
    69b6:	b8 a1       	ldd	r27, Y+32	; 0x20
    69b8:	10 97       	sbiw	r26, 0x00	; 0
    69ba:	11 f4       	brne	.+4      	; 0x69c0 <f_unlink+0x72>
    69bc:	86 e0       	ldi	r24, 0x06	; 6
    69be:	59 c0       	rjmp	.+178    	; 0x6a72 <f_unlink+0x124>
    69c0:	1b 96       	adiw	r26, 0x0b	; 11
    69c2:	8c 91       	ld	r24, X
    69c4:	1b 97       	sbiw	r26, 0x0b	; 11
    69c6:	80 ff       	sbrs	r24, 0
    69c8:	63 c0       	rjmp	.+198    	; 0x6a90 <f_unlink+0x142>
    69ca:	65 c0       	rjmp	.+202    	; 0x6a96 <f_unlink+0x148>
    69cc:	5a 96       	adiw	r26, 0x1a	; 26
    69ce:	8d 91       	ld	r24, X+
    69d0:	9c 91       	ld	r25, X
    69d2:	5b 97       	sbiw	r26, 0x1b	; 27
    69d4:	7c 01       	movw	r14, r24
    69d6:	00 e0       	ldi	r16, 0x00	; 0
    69d8:	10 e0       	ldi	r17, 0x00	; 0
    69da:	ed 85       	ldd	r30, Y+13	; 0x0d
    69dc:	fe 85       	ldd	r31, Y+14	; 0x0e
    69de:	80 81       	ld	r24, Z
    69e0:	83 30       	cpi	r24, 0x03	; 3
    69e2:	69 f4       	brne	.+26     	; 0x69fe <f_unlink+0xb0>
    69e4:	54 96       	adiw	r26, 0x14	; 20
    69e6:	8d 91       	ld	r24, X+
    69e8:	9c 91       	ld	r25, X
    69ea:	55 97       	sbiw	r26, 0x15	; 21
    69ec:	a0 e0       	ldi	r26, 0x00	; 0
    69ee:	b0 e0       	ldi	r27, 0x00	; 0
    69f0:	dc 01       	movw	r26, r24
    69f2:	99 27       	eor	r25, r25
    69f4:	88 27       	eor	r24, r24
    69f6:	e8 2a       	or	r14, r24
    69f8:	f9 2a       	or	r15, r25
    69fa:	0a 2b       	or	r16, r26
    69fc:	1b 2b       	or	r17, r27
    69fe:	e1 14       	cp	r14, r1
    6a00:	f1 04       	cpc	r15, r1
    6a02:	01 05       	cpc	r16, r1
    6a04:	11 05       	cpc	r17, r1
    6a06:	11 f4       	brne	.+4      	; 0x6a0c <f_unlink+0xbe>
    6a08:	82 e0       	ldi	r24, 0x02	; 2
    6a0a:	33 c0       	rjmp	.+102    	; 0x6a72 <f_unlink+0x124>
    6a0c:	25 e2       	ldi	r18, 0x25	; 37
    6a0e:	c2 2e       	mov	r12, r18
    6a10:	d1 2c       	mov	r13, r1
    6a12:	cc 0e       	add	r12, r28
    6a14:	dd 1e       	adc	r13, r29
    6a16:	c6 01       	movw	r24, r12
    6a18:	be 01       	movw	r22, r28
    6a1a:	63 5f       	subi	r22, 0xF3	; 243
    6a1c:	7f 4f       	sbci	r23, 0xFF	; 255
    6a1e:	48 e1       	ldi	r20, 0x18	; 24
    6a20:	50 e0       	ldi	r21, 0x00	; 0
    6a22:	0e 94 54 16 	call	0x2ca8	; 0x2ca8 <mem_cpy>
    6a26:	eb a6       	std	Y+43, r14	; 0x2b
    6a28:	fc a6       	std	Y+44, r15	; 0x2c
    6a2a:	0d a7       	std	Y+45, r16	; 0x2d
    6a2c:	1e a7       	std	Y+46, r17	; 0x2e
    6a2e:	c6 01       	movw	r24, r12
    6a30:	62 e0       	ldi	r22, 0x02	; 2
    6a32:	70 e0       	ldi	r23, 0x00	; 0
    6a34:	0e 94 c6 1d 	call	0x3b8c	; 0x3b8c <dir_sdi>
    6a38:	88 23       	and	r24, r24
    6a3a:	d9 f4       	brne	.+54     	; 0x6a72 <f_unlink+0x124>
    6a3c:	c6 01       	movw	r24, r12
    6a3e:	60 e0       	ldi	r22, 0x00	; 0
    6a40:	70 e0       	ldi	r23, 0x00	; 0
    6a42:	0e 94 bc 26 	call	0x4d78	; 0x4d78 <dir_read>
    6a46:	88 23       	and	r24, r24
    6a48:	31 f1       	breq	.+76     	; 0x6a96 <f_unlink+0x148>
    6a4a:	84 30       	cpi	r24, 0x04	; 4
    6a4c:	49 f1       	breq	.+82     	; 0x6aa0 <f_unlink+0x152>
    6a4e:	11 c0       	rjmp	.+34     	; 0x6a72 <f_unlink+0x124>
    6a50:	e1 14       	cp	r14, r1
    6a52:	f1 04       	cpc	r15, r1
    6a54:	01 05       	cpc	r16, r1
    6a56:	11 05       	cpc	r17, r1
    6a58:	41 f0       	breq	.+16     	; 0x6a6a <f_unlink+0x11c>
    6a5a:	8d 85       	ldd	r24, Y+13	; 0x0d
    6a5c:	9e 85       	ldd	r25, Y+14	; 0x0e
    6a5e:	b8 01       	movw	r22, r16
    6a60:	a7 01       	movw	r20, r14
    6a62:	0e 94 a5 1f 	call	0x3f4a	; 0x3f4a <remove_chain>
    6a66:	88 23       	and	r24, r24
    6a68:	21 f4       	brne	.+8      	; 0x6a72 <f_unlink+0x124>
    6a6a:	8d 85       	ldd	r24, Y+13	; 0x0d
    6a6c:	9e 85       	ldd	r25, Y+14	; 0x0e
    6a6e:	0e 94 0a 31 	call	0x6214	; 0x6214 <sync_fs>
    6a72:	ee 96       	adiw	r28, 0x3e	; 62
    6a74:	0f b6       	in	r0, 0x3f	; 63
    6a76:	f8 94       	cli
    6a78:	de bf       	out	0x3e, r29	; 62
    6a7a:	0f be       	out	0x3f, r0	; 63
    6a7c:	cd bf       	out	0x3d, r28	; 61
    6a7e:	cf 91       	pop	r28
    6a80:	df 91       	pop	r29
    6a82:	1f 91       	pop	r17
    6a84:	0f 91       	pop	r16
    6a86:	ff 90       	pop	r15
    6a88:	ef 90       	pop	r14
    6a8a:	df 90       	pop	r13
    6a8c:	cf 90       	pop	r12
    6a8e:	08 95       	ret
    6a90:	84 fd       	sbrc	r24, 4
    6a92:	9c cf       	rjmp	.-200    	; 0x69cc <f_unlink+0x7e>
    6a94:	02 c0       	rjmp	.+4      	; 0x6a9a <f_unlink+0x14c>
    6a96:	87 e0       	ldi	r24, 0x07	; 7
    6a98:	ec cf       	rjmp	.-40     	; 0x6a72 <f_unlink+0x124>
    6a9a:	ee 24       	eor	r14, r14
    6a9c:	ff 24       	eor	r15, r15
    6a9e:	87 01       	movw	r16, r14
    6aa0:	ce 01       	movw	r24, r28
    6aa2:	0d 96       	adiw	r24, 0x0d	; 13
    6aa4:	0e 94 1d 20 	call	0x403a	; 0x403a <dir_remove>
    6aa8:	88 23       	and	r24, r24
    6aaa:	91 f2       	breq	.-92     	; 0x6a50 <f_unlink+0x102>
    6aac:	e2 cf       	rjmp	.-60     	; 0x6a72 <f_unlink+0x124>

00006aae <f_sync>:
    6aae:	0f 93       	push	r16
    6ab0:	1f 93       	push	r17
    6ab2:	cf 93       	push	r28
    6ab4:	df 93       	push	r29
    6ab6:	ec 01       	movw	r28, r24
    6ab8:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <validate>
    6abc:	98 2f       	mov	r25, r24
    6abe:	88 23       	and	r24, r24
    6ac0:	09 f0       	breq	.+2      	; 0x6ac4 <f_sync+0x16>
    6ac2:	53 c0       	rjmp	.+166    	; 0x6b6a <f_sync+0xbc>
    6ac4:	8c 81       	ldd	r24, Y+4	; 0x04
    6ac6:	85 ff       	sbrs	r24, 5
    6ac8:	50 c0       	rjmp	.+160    	; 0x6b6a <f_sync+0xbc>
    6aca:	86 ff       	sbrs	r24, 6
    6acc:	15 c0       	rjmp	.+42     	; 0x6af8 <f_sync+0x4a>
    6ace:	e8 81       	ld	r30, Y
    6ad0:	f9 81       	ldd	r31, Y+1	; 0x01
    6ad2:	be 01       	movw	r22, r28
    6ad4:	6e 5d       	subi	r22, 0xDE	; 222
    6ad6:	7f 4f       	sbci	r23, 0xFF	; 255
    6ad8:	2e 89       	ldd	r18, Y+22	; 0x16
    6ada:	3f 89       	ldd	r19, Y+23	; 0x17
    6adc:	48 8d       	ldd	r20, Y+24	; 0x18
    6ade:	59 8d       	ldd	r21, Y+25	; 0x19
    6ae0:	81 81       	ldd	r24, Z+1	; 0x01
    6ae2:	01 e0       	ldi	r16, 0x01	; 1
    6ae4:	10 e0       	ldi	r17, 0x00	; 0
    6ae6:	0e 94 25 38 	call	0x704a	; 0x704a <disk_write>
    6aea:	88 23       	and	r24, r24
    6aec:	11 f0       	breq	.+4      	; 0x6af2 <f_sync+0x44>
    6aee:	91 e0       	ldi	r25, 0x01	; 1
    6af0:	3c c0       	rjmp	.+120    	; 0x6b6a <f_sync+0xbc>
    6af2:	8c 81       	ldd	r24, Y+4	; 0x04
    6af4:	8f 7b       	andi	r24, 0xBF	; 191
    6af6:	8c 83       	std	Y+4, r24	; 0x04
    6af8:	4a 8d       	ldd	r20, Y+26	; 0x1a
    6afa:	5b 8d       	ldd	r21, Y+27	; 0x1b
    6afc:	6c 8d       	ldd	r22, Y+28	; 0x1c
    6afe:	7d 8d       	ldd	r23, Y+29	; 0x1d
    6b00:	88 81       	ld	r24, Y
    6b02:	99 81       	ldd	r25, Y+1	; 0x01
    6b04:	0e 94 7b 18 	call	0x30f6	; 0x30f6 <move_window>
    6b08:	98 2f       	mov	r25, r24
    6b0a:	88 23       	and	r24, r24
    6b0c:	71 f5       	brne	.+92     	; 0x6b6a <f_sync+0xbc>
    6b0e:	ee 8d       	ldd	r30, Y+30	; 0x1e
    6b10:	ff 8d       	ldd	r31, Y+31	; 0x1f
    6b12:	83 85       	ldd	r24, Z+11	; 0x0b
    6b14:	80 62       	ori	r24, 0x20	; 32
    6b16:	83 87       	std	Z+11, r24	; 0x0b
    6b18:	8a 85       	ldd	r24, Y+10	; 0x0a
    6b1a:	9b 85       	ldd	r25, Y+11	; 0x0b
    6b1c:	ac 85       	ldd	r26, Y+12	; 0x0c
    6b1e:	bd 85       	ldd	r27, Y+13	; 0x0d
    6b20:	84 8f       	std	Z+28, r24	; 0x1c
    6b22:	95 8f       	std	Z+29, r25	; 0x1d
    6b24:	a6 8f       	std	Z+30, r26	; 0x1e
    6b26:	b7 8f       	std	Z+31, r27	; 0x1f
    6b28:	8e 85       	ldd	r24, Y+14	; 0x0e
    6b2a:	9f 85       	ldd	r25, Y+15	; 0x0f
    6b2c:	a8 89       	ldd	r26, Y+16	; 0x10
    6b2e:	b9 89       	ldd	r27, Y+17	; 0x11
    6b30:	93 8f       	std	Z+27, r25	; 0x1b
    6b32:	82 8f       	std	Z+26, r24	; 0x1a
    6b34:	cd 01       	movw	r24, r26
    6b36:	aa 27       	eor	r26, r26
    6b38:	bb 27       	eor	r27, r27
    6b3a:	95 8b       	std	Z+21, r25	; 0x15
    6b3c:	84 8b       	std	Z+20, r24	; 0x14
    6b3e:	80 e0       	ldi	r24, 0x00	; 0
    6b40:	90 e0       	ldi	r25, 0x00	; 0
    6b42:	a9 e6       	ldi	r26, 0x69	; 105
    6b44:	bd eb       	ldi	r27, 0xBD	; 189
    6b46:	86 8b       	std	Z+22, r24	; 0x16
    6b48:	97 8b       	std	Z+23, r25	; 0x17
    6b4a:	a0 8f       	std	Z+24, r26	; 0x18
    6b4c:	b1 8f       	std	Z+25, r27	; 0x19
    6b4e:	13 8a       	std	Z+19, r1	; 0x13
    6b50:	12 8a       	std	Z+18, r1	; 0x12
    6b52:	8c 81       	ldd	r24, Y+4	; 0x04
    6b54:	8f 7d       	andi	r24, 0xDF	; 223
    6b56:	8c 83       	std	Y+4, r24	; 0x04
    6b58:	e8 81       	ld	r30, Y
    6b5a:	f9 81       	ldd	r31, Y+1	; 0x01
    6b5c:	81 e0       	ldi	r24, 0x01	; 1
    6b5e:	84 83       	std	Z+4, r24	; 0x04
    6b60:	88 81       	ld	r24, Y
    6b62:	99 81       	ldd	r25, Y+1	; 0x01
    6b64:	0e 94 0a 31 	call	0x6214	; 0x6214 <sync_fs>
    6b68:	98 2f       	mov	r25, r24
    6b6a:	89 2f       	mov	r24, r25
    6b6c:	df 91       	pop	r29
    6b6e:	cf 91       	pop	r28
    6b70:	1f 91       	pop	r17
    6b72:	0f 91       	pop	r16
    6b74:	08 95       	ret

00006b76 <f_close>:
    6b76:	cf 93       	push	r28
    6b78:	df 93       	push	r29
    6b7a:	ec 01       	movw	r28, r24
    6b7c:	0e 94 57 35 	call	0x6aae	; 0x6aae <f_sync>
    6b80:	28 2f       	mov	r18, r24
    6b82:	88 23       	and	r24, r24
    6b84:	21 f5       	brne	.+72     	; 0x6bce <f_close+0x58>
    6b86:	ce 01       	movw	r24, r28
    6b88:	0e 94 c9 17 	call	0x2f92	; 0x2f92 <validate>
    6b8c:	28 2f       	mov	r18, r24
    6b8e:	88 23       	and	r24, r24
    6b90:	f1 f4       	brne	.+60     	; 0x6bce <f_close+0x58>
    6b92:	88 a1       	ldd	r24, Y+32	; 0x20
    6b94:	99 a1       	ldd	r25, Y+33	; 0x21
    6b96:	01 97       	sbiw	r24, 0x01	; 1
    6b98:	c9 f4       	brne	.+50     	; 0x6bcc <f_close+0x56>
    6b9a:	80 91 41 05 	lds	r24, 0x0541
    6b9e:	90 91 42 05 	lds	r25, 0x0542
    6ba2:	31 e0       	ldi	r19, 0x01	; 1
    6ba4:	80 30       	cpi	r24, 0x00	; 0
    6ba6:	93 07       	cpc	r25, r19
    6ba8:	19 f4       	brne	.+6      	; 0x6bb0 <f_close+0x3a>
    6baa:	80 e0       	ldi	r24, 0x00	; 0
    6bac:	90 e0       	ldi	r25, 0x00	; 0
    6bae:	03 c0       	rjmp	.+6      	; 0x6bb6 <f_close+0x40>
    6bb0:	00 97       	sbiw	r24, 0x00	; 0
    6bb2:	09 f0       	breq	.+2      	; 0x6bb6 <f_close+0x40>
    6bb4:	01 97       	sbiw	r24, 0x01	; 1
    6bb6:	90 93 42 05 	sts	0x0542, r25
    6bba:	80 93 41 05 	sts	0x0541, r24
    6bbe:	89 2b       	or	r24, r25
    6bc0:	51 f4       	brne	.+20     	; 0x6bd6 <f_close+0x60>
    6bc2:	10 92 3a 05 	sts	0x053A, r1
    6bc6:	10 92 39 05 	sts	0x0539, r1
    6bca:	05 c0       	rjmp	.+10     	; 0x6bd6 <f_close+0x60>
    6bcc:	22 e0       	ldi	r18, 0x02	; 2
    6bce:	82 2f       	mov	r24, r18
    6bd0:	df 91       	pop	r29
    6bd2:	cf 91       	pop	r28
    6bd4:	08 95       	ret
    6bd6:	19 82       	std	Y+1, r1	; 0x01
    6bd8:	18 82       	st	Y, r1
    6bda:	f9 cf       	rjmp	.-14     	; 0x6bce <f_close+0x58>

00006bdc <wait_ready>:
    6bdc:	6a e0       	ldi	r22, 0x0A	; 10
    6bde:	70 e0       	ldi	r23, 0x00	; 0
    6be0:	0e 94 dd 40 	call	0x81ba	; 0x81ba <__udivmodhi4>
    6be4:	60 93 44 05 	sts	0x0544, r22
    6be8:	2f ef       	ldi	r18, 0xFF	; 255
    6bea:	2f b9       	out	0x0f, r18	; 15
    6bec:	77 9b       	sbis	0x0e, 7	; 14
    6bee:	fe cf       	rjmp	.-4      	; 0x6bec <wait_ready+0x10>
    6bf0:	9f b1       	in	r25, 0x0f	; 15
    6bf2:	9f 3f       	cpi	r25, 0xFF	; 255
    6bf4:	21 f0       	breq	.+8      	; 0x6bfe <wait_ready+0x22>
    6bf6:	80 91 44 05 	lds	r24, 0x0544
    6bfa:	88 23       	and	r24, r24
    6bfc:	b1 f7       	brne	.-20     	; 0x6bea <wait_ready+0xe>
    6bfe:	20 e0       	ldi	r18, 0x00	; 0
    6c00:	30 e0       	ldi	r19, 0x00	; 0
    6c02:	9f 3f       	cpi	r25, 0xFF	; 255
    6c04:	11 f4       	brne	.+4      	; 0x6c0a <wait_ready+0x2e>
    6c06:	21 e0       	ldi	r18, 0x01	; 1
    6c08:	30 e0       	ldi	r19, 0x00	; 0
    6c0a:	c9 01       	movw	r24, r18
    6c0c:	08 95       	ret

00006c0e <select>:
    6c0e:	c0 98       	cbi	0x18, 0	; 24
    6c10:	8f ef       	ldi	r24, 0xFF	; 255
    6c12:	8f b9       	out	0x0f, r24	; 15
    6c14:	77 9b       	sbis	0x0e, 7	; 14
    6c16:	fe cf       	rjmp	.-4      	; 0x6c14 <select+0x6>
    6c18:	8f b1       	in	r24, 0x0f	; 15
    6c1a:	84 ef       	ldi	r24, 0xF4	; 244
    6c1c:	91 e0       	ldi	r25, 0x01	; 1
    6c1e:	0e 94 ee 35 	call	0x6bdc	; 0x6bdc <wait_ready>
    6c22:	89 2b       	or	r24, r25
    6c24:	19 f0       	breq	.+6      	; 0x6c2c <select+0x1e>
    6c26:	21 e0       	ldi	r18, 0x01	; 1
    6c28:	30 e0       	ldi	r19, 0x00	; 0
    6c2a:	08 c0       	rjmp	.+16     	; 0x6c3c <select+0x2e>
    6c2c:	c0 9a       	sbi	0x18, 0	; 24
    6c2e:	8f ef       	ldi	r24, 0xFF	; 255
    6c30:	8f b9       	out	0x0f, r24	; 15
    6c32:	77 9b       	sbis	0x0e, 7	; 14
    6c34:	fe cf       	rjmp	.-4      	; 0x6c32 <select+0x24>
    6c36:	8f b1       	in	r24, 0x0f	; 15
    6c38:	20 e0       	ldi	r18, 0x00	; 0
    6c3a:	30 e0       	ldi	r19, 0x00	; 0
    6c3c:	c9 01       	movw	r24, r18
    6c3e:	08 95       	ret

00006c40 <rcvr_datablock>:
    6c40:	fc 01       	movw	r30, r24
    6c42:	84 e1       	ldi	r24, 0x14	; 20
    6c44:	80 93 43 05 	sts	0x0543, r24
    6c48:	9f ef       	ldi	r25, 0xFF	; 255
    6c4a:	9f b9       	out	0x0f, r25	; 15
    6c4c:	77 9b       	sbis	0x0e, 7	; 14
    6c4e:	fe cf       	rjmp	.-4      	; 0x6c4c <rcvr_datablock+0xc>
    6c50:	8f b1       	in	r24, 0x0f	; 15
    6c52:	8f 3f       	cpi	r24, 0xFF	; 255
    6c54:	29 f4       	brne	.+10     	; 0x6c60 <rcvr_datablock+0x20>
    6c56:	80 91 43 05 	lds	r24, 0x0543
    6c5a:	88 23       	and	r24, r24
    6c5c:	b1 f7       	brne	.-20     	; 0x6c4a <rcvr_datablock+0xa>
    6c5e:	1f c0       	rjmp	.+62     	; 0x6c9e <rcvr_datablock+0x5e>
    6c60:	8e 3f       	cpi	r24, 0xFE	; 254
    6c62:	e9 f4       	brne	.+58     	; 0x6c9e <rcvr_datablock+0x5e>
    6c64:	9f ef       	ldi	r25, 0xFF	; 255
    6c66:	9f b9       	out	0x0f, r25	; 15
    6c68:	77 9b       	sbis	0x0e, 7	; 14
    6c6a:	fe cf       	rjmp	.-4      	; 0x6c68 <rcvr_datablock+0x28>
    6c6c:	8f b1       	in	r24, 0x0f	; 15
    6c6e:	80 83       	st	Z, r24
    6c70:	9f b9       	out	0x0f, r25	; 15
    6c72:	77 9b       	sbis	0x0e, 7	; 14
    6c74:	fe cf       	rjmp	.-4      	; 0x6c72 <rcvr_datablock+0x32>
    6c76:	8f b1       	in	r24, 0x0f	; 15
    6c78:	81 83       	std	Z+1, r24	; 0x01
    6c7a:	62 50       	subi	r22, 0x02	; 2
    6c7c:	70 40       	sbci	r23, 0x00	; 0
    6c7e:	11 f0       	breq	.+4      	; 0x6c84 <rcvr_datablock+0x44>
    6c80:	32 96       	adiw	r30, 0x02	; 2
    6c82:	f1 cf       	rjmp	.-30     	; 0x6c66 <rcvr_datablock+0x26>
    6c84:	8f ef       	ldi	r24, 0xFF	; 255
    6c86:	8f b9       	out	0x0f, r24	; 15
    6c88:	77 9b       	sbis	0x0e, 7	; 14
    6c8a:	fe cf       	rjmp	.-4      	; 0x6c88 <rcvr_datablock+0x48>
    6c8c:	8f b1       	in	r24, 0x0f	; 15
    6c8e:	8f ef       	ldi	r24, 0xFF	; 255
    6c90:	8f b9       	out	0x0f, r24	; 15
    6c92:	77 9b       	sbis	0x0e, 7	; 14
    6c94:	fe cf       	rjmp	.-4      	; 0x6c92 <rcvr_datablock+0x52>
    6c96:	8f b1       	in	r24, 0x0f	; 15
    6c98:	21 e0       	ldi	r18, 0x01	; 1
    6c9a:	30 e0       	ldi	r19, 0x00	; 0
    6c9c:	02 c0       	rjmp	.+4      	; 0x6ca2 <rcvr_datablock+0x62>
    6c9e:	20 e0       	ldi	r18, 0x00	; 0
    6ca0:	30 e0       	ldi	r19, 0x00	; 0
    6ca2:	c9 01       	movw	r24, r18
    6ca4:	08 95       	ret

00006ca6 <xmit_datablock>:
    6ca6:	1f 93       	push	r17
    6ca8:	cf 93       	push	r28
    6caa:	df 93       	push	r29
    6cac:	ec 01       	movw	r28, r24
    6cae:	16 2f       	mov	r17, r22
    6cb0:	84 ef       	ldi	r24, 0xF4	; 244
    6cb2:	91 e0       	ldi	r25, 0x01	; 1
    6cb4:	0e 94 ee 35 	call	0x6bdc	; 0x6bdc <wait_ready>
    6cb8:	89 2b       	or	r24, r25
    6cba:	19 f4       	brne	.+6      	; 0x6cc2 <xmit_datablock+0x1c>
    6cbc:	20 e0       	ldi	r18, 0x00	; 0
    6cbe:	30 e0       	ldi	r19, 0x00	; 0
    6cc0:	30 c0       	rjmp	.+96     	; 0x6d22 <xmit_datablock+0x7c>
    6cc2:	1f b9       	out	0x0f, r17	; 15
    6cc4:	77 9b       	sbis	0x0e, 7	; 14
    6cc6:	fe cf       	rjmp	.-4      	; 0x6cc4 <xmit_datablock+0x1e>
    6cc8:	8f b1       	in	r24, 0x0f	; 15
    6cca:	1d 3f       	cpi	r17, 0xFD	; 253
    6ccc:	19 f4       	brne	.+6      	; 0x6cd4 <xmit_datablock+0x2e>
    6cce:	21 e0       	ldi	r18, 0x01	; 1
    6cd0:	30 e0       	ldi	r19, 0x00	; 0
    6cd2:	27 c0       	rjmp	.+78     	; 0x6d22 <xmit_datablock+0x7c>
    6cd4:	20 e0       	ldi	r18, 0x00	; 0
    6cd6:	32 e0       	ldi	r19, 0x02	; 2
    6cd8:	88 81       	ld	r24, Y
    6cda:	8f b9       	out	0x0f, r24	; 15
    6cdc:	77 9b       	sbis	0x0e, 7	; 14
    6cde:	fe cf       	rjmp	.-4      	; 0x6cdc <xmit_datablock+0x36>
    6ce0:	89 81       	ldd	r24, Y+1	; 0x01
    6ce2:	8f b9       	out	0x0f, r24	; 15
    6ce4:	77 9b       	sbis	0x0e, 7	; 14
    6ce6:	fe cf       	rjmp	.-4      	; 0x6ce4 <xmit_datablock+0x3e>
    6ce8:	22 50       	subi	r18, 0x02	; 2
    6cea:	30 40       	sbci	r19, 0x00	; 0
    6cec:	11 f0       	breq	.+4      	; 0x6cf2 <xmit_datablock+0x4c>
    6cee:	22 96       	adiw	r28, 0x02	; 2
    6cf0:	f3 cf       	rjmp	.-26     	; 0x6cd8 <xmit_datablock+0x32>
    6cf2:	8f ef       	ldi	r24, 0xFF	; 255
    6cf4:	8f b9       	out	0x0f, r24	; 15
    6cf6:	77 9b       	sbis	0x0e, 7	; 14
    6cf8:	fe cf       	rjmp	.-4      	; 0x6cf6 <xmit_datablock+0x50>
    6cfa:	8f b1       	in	r24, 0x0f	; 15
    6cfc:	8f ef       	ldi	r24, 0xFF	; 255
    6cfe:	8f b9       	out	0x0f, r24	; 15
    6d00:	77 9b       	sbis	0x0e, 7	; 14
    6d02:	fe cf       	rjmp	.-4      	; 0x6d00 <xmit_datablock+0x5a>
    6d04:	8f b1       	in	r24, 0x0f	; 15
    6d06:	8f ef       	ldi	r24, 0xFF	; 255
    6d08:	8f b9       	out	0x0f, r24	; 15
    6d0a:	77 9b       	sbis	0x0e, 7	; 14
    6d0c:	fe cf       	rjmp	.-4      	; 0x6d0a <xmit_datablock+0x64>
    6d0e:	8f b1       	in	r24, 0x0f	; 15
    6d10:	90 e0       	ldi	r25, 0x00	; 0
    6d12:	8f 71       	andi	r24, 0x1F	; 31
    6d14:	85 30       	cpi	r24, 0x05	; 5
    6d16:	09 f0       	breq	.+2      	; 0x6d1a <xmit_datablock+0x74>
    6d18:	91 e0       	ldi	r25, 0x01	; 1
    6d1a:	81 e0       	ldi	r24, 0x01	; 1
    6d1c:	98 27       	eor	r25, r24
    6d1e:	29 2f       	mov	r18, r25
    6d20:	30 e0       	ldi	r19, 0x00	; 0
    6d22:	c9 01       	movw	r24, r18
    6d24:	df 91       	pop	r29
    6d26:	cf 91       	pop	r28
    6d28:	1f 91       	pop	r17
    6d2a:	08 95       	ret

00006d2c <send_cmd>:
    6d2c:	df 92       	push	r13
    6d2e:	ef 92       	push	r14
    6d30:	ff 92       	push	r15
    6d32:	0f 93       	push	r16
    6d34:	1f 93       	push	r17
    6d36:	d8 2e       	mov	r13, r24
    6d38:	7a 01       	movw	r14, r20
    6d3a:	8b 01       	movw	r16, r22
    6d3c:	87 ff       	sbrs	r24, 7
    6d3e:	0c c0       	rjmp	.+24     	; 0x6d58 <send_cmd+0x2c>
    6d40:	87 e3       	ldi	r24, 0x37	; 55
    6d42:	40 e0       	ldi	r20, 0x00	; 0
    6d44:	50 e0       	ldi	r21, 0x00	; 0
    6d46:	60 e0       	ldi	r22, 0x00	; 0
    6d48:	70 e0       	ldi	r23, 0x00	; 0
    6d4a:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <send_cmd>
    6d4e:	82 30       	cpi	r24, 0x02	; 2
    6d50:	08 f0       	brcs	.+2      	; 0x6d54 <send_cmd+0x28>
    6d52:	52 c0       	rjmp	.+164    	; 0x6df8 <send_cmd+0xcc>
    6d54:	8f e7       	ldi	r24, 0x7F	; 127
    6d56:	d8 22       	and	r13, r24
    6d58:	8c e0       	ldi	r24, 0x0C	; 12
    6d5a:	d8 16       	cp	r13, r24
    6d5c:	61 f0       	breq	.+24     	; 0x6d76 <send_cmd+0x4a>
    6d5e:	c0 9a       	sbi	0x18, 0	; 24
    6d60:	8f ef       	ldi	r24, 0xFF	; 255
    6d62:	8f b9       	out	0x0f, r24	; 15
    6d64:	77 9b       	sbis	0x0e, 7	; 14
    6d66:	fe cf       	rjmp	.-4      	; 0x6d64 <send_cmd+0x38>
    6d68:	8f b1       	in	r24, 0x0f	; 15
    6d6a:	0e 94 07 36 	call	0x6c0e	; 0x6c0e <select>
    6d6e:	89 2b       	or	r24, r25
    6d70:	11 f4       	brne	.+4      	; 0x6d76 <send_cmd+0x4a>
    6d72:	8f ef       	ldi	r24, 0xFF	; 255
    6d74:	41 c0       	rjmp	.+130    	; 0x6df8 <send_cmd+0xcc>
    6d76:	8d 2d       	mov	r24, r13
    6d78:	80 64       	ori	r24, 0x40	; 64
    6d7a:	8f b9       	out	0x0f, r24	; 15
    6d7c:	77 9b       	sbis	0x0e, 7	; 14
    6d7e:	fe cf       	rjmp	.-4      	; 0x6d7c <send_cmd+0x50>
    6d80:	8f b1       	in	r24, 0x0f	; 15
    6d82:	81 2f       	mov	r24, r17
    6d84:	99 27       	eor	r25, r25
    6d86:	aa 27       	eor	r26, r26
    6d88:	bb 27       	eor	r27, r27
    6d8a:	8f b9       	out	0x0f, r24	; 15
    6d8c:	77 9b       	sbis	0x0e, 7	; 14
    6d8e:	fe cf       	rjmp	.-4      	; 0x6d8c <send_cmd+0x60>
    6d90:	8f b1       	in	r24, 0x0f	; 15
    6d92:	c8 01       	movw	r24, r16
    6d94:	aa 27       	eor	r26, r26
    6d96:	bb 27       	eor	r27, r27
    6d98:	8f b9       	out	0x0f, r24	; 15
    6d9a:	77 9b       	sbis	0x0e, 7	; 14
    6d9c:	fe cf       	rjmp	.-4      	; 0x6d9a <send_cmd+0x6e>
    6d9e:	8f b1       	in	r24, 0x0f	; 15
    6da0:	bb 27       	eor	r27, r27
    6da2:	a1 2f       	mov	r26, r17
    6da4:	90 2f       	mov	r25, r16
    6da6:	8f 2d       	mov	r24, r15
    6da8:	8f b9       	out	0x0f, r24	; 15
    6daa:	77 9b       	sbis	0x0e, 7	; 14
    6dac:	fe cf       	rjmp	.-4      	; 0x6daa <send_cmd+0x7e>
    6dae:	8f b1       	in	r24, 0x0f	; 15
    6db0:	ef b8       	out	0x0f, r14	; 15
    6db2:	77 9b       	sbis	0x0e, 7	; 14
    6db4:	fe cf       	rjmp	.-4      	; 0x6db2 <send_cmd+0x86>
    6db6:	8f b1       	in	r24, 0x0f	; 15
    6db8:	dd 20       	and	r13, r13
    6dba:	11 f4       	brne	.+4      	; 0x6dc0 <send_cmd+0x94>
    6dbc:	85 e9       	ldi	r24, 0x95	; 149
    6dbe:	06 c0       	rjmp	.+12     	; 0x6dcc <send_cmd+0xa0>
    6dc0:	88 e0       	ldi	r24, 0x08	; 8
    6dc2:	d8 16       	cp	r13, r24
    6dc4:	11 f4       	brne	.+4      	; 0x6dca <send_cmd+0x9e>
    6dc6:	87 e8       	ldi	r24, 0x87	; 135
    6dc8:	01 c0       	rjmp	.+2      	; 0x6dcc <send_cmd+0xa0>
    6dca:	81 e0       	ldi	r24, 0x01	; 1
    6dcc:	8f b9       	out	0x0f, r24	; 15
    6dce:	77 9b       	sbis	0x0e, 7	; 14
    6dd0:	fe cf       	rjmp	.-4      	; 0x6dce <send_cmd+0xa2>
    6dd2:	8f b1       	in	r24, 0x0f	; 15
    6dd4:	8c e0       	ldi	r24, 0x0C	; 12
    6dd6:	d8 16       	cp	r13, r24
    6dd8:	29 f4       	brne	.+10     	; 0x6de4 <send_cmd+0xb8>
    6dda:	8f ef       	ldi	r24, 0xFF	; 255
    6ddc:	8f b9       	out	0x0f, r24	; 15
    6dde:	77 9b       	sbis	0x0e, 7	; 14
    6de0:	fe cf       	rjmp	.-4      	; 0x6dde <send_cmd+0xb2>
    6de2:	8f b1       	in	r24, 0x0f	; 15
    6de4:	9a e0       	ldi	r25, 0x0A	; 10
    6de6:	2f ef       	ldi	r18, 0xFF	; 255
    6de8:	2f b9       	out	0x0f, r18	; 15
    6dea:	77 9b       	sbis	0x0e, 7	; 14
    6dec:	fe cf       	rjmp	.-4      	; 0x6dea <send_cmd+0xbe>
    6dee:	8f b1       	in	r24, 0x0f	; 15
    6df0:	87 ff       	sbrs	r24, 7
    6df2:	02 c0       	rjmp	.+4      	; 0x6df8 <send_cmd+0xcc>
    6df4:	91 50       	subi	r25, 0x01	; 1
    6df6:	c1 f7       	brne	.-16     	; 0x6de8 <send_cmd+0xbc>
    6df8:	1f 91       	pop	r17
    6dfa:	0f 91       	pop	r16
    6dfc:	ff 90       	pop	r15
    6dfe:	ef 90       	pop	r14
    6e00:	df 90       	pop	r13
    6e02:	08 95       	ret

00006e04 <disk_initialize>:
    6e04:	ef 92       	push	r14
    6e06:	ff 92       	push	r15
    6e08:	0f 93       	push	r16
    6e0a:	1f 93       	push	r17
    6e0c:	df 93       	push	r29
    6e0e:	cf 93       	push	r28
    6e10:	00 d0       	rcall	.+0      	; 0x6e12 <disk_initialize+0xe>
    6e12:	00 d0       	rcall	.+0      	; 0x6e14 <disk_initialize+0x10>
    6e14:	cd b7       	in	r28, 0x3d	; 61
    6e16:	de b7       	in	r29, 0x3e	; 62
    6e18:	88 23       	and	r24, r24
    6e1a:	11 f0       	breq	.+4      	; 0x6e20 <disk_initialize+0x1c>
    6e1c:	81 e0       	ldi	r24, 0x01	; 1
    6e1e:	ad c0       	rjmp	.+346    	; 0x6f7a <disk_initialize+0x176>
    6e20:	81 e0       	ldi	r24, 0x01	; 1
    6e22:	8d b9       	out	0x0d, r24	; 13
    6e24:	80 91 f6 03 	lds	r24, 0x03F6
    6e28:	81 fd       	sbrc	r24, 1
    6e2a:	a5 c0       	rjmp	.+330    	; 0x6f76 <disk_initialize+0x172>
    6e2c:	82 e5       	ldi	r24, 0x52	; 82
    6e2e:	8d b9       	out	0x0d, r24	; 13
    6e30:	1e b8       	out	0x0e, r1	; 14
    6e32:	8d b9       	out	0x0d, r24	; 13
    6e34:	8a e0       	ldi	r24, 0x0A	; 10
    6e36:	9f ef       	ldi	r25, 0xFF	; 255
    6e38:	9f b9       	out	0x0f, r25	; 15
    6e3a:	77 9b       	sbis	0x0e, 7	; 14
    6e3c:	fe cf       	rjmp	.-4      	; 0x6e3a <disk_initialize+0x36>
    6e3e:	2f b1       	in	r18, 0x0f	; 15
    6e40:	81 50       	subi	r24, 0x01	; 1
    6e42:	d1 f7       	brne	.-12     	; 0x6e38 <disk_initialize+0x34>
    6e44:	40 e0       	ldi	r20, 0x00	; 0
    6e46:	50 e0       	ldi	r21, 0x00	; 0
    6e48:	60 e0       	ldi	r22, 0x00	; 0
    6e4a:	70 e0       	ldi	r23, 0x00	; 0
    6e4c:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <send_cmd>
    6e50:	81 30       	cpi	r24, 0x01	; 1
    6e52:	09 f0       	breq	.+2      	; 0x6e56 <disk_initialize+0x52>
    6e54:	7c c0       	rjmp	.+248    	; 0x6f4e <disk_initialize+0x14a>
    6e56:	84 e6       	ldi	r24, 0x64	; 100
    6e58:	80 93 43 05 	sts	0x0543, r24
    6e5c:	88 e0       	ldi	r24, 0x08	; 8
    6e5e:	4a ea       	ldi	r20, 0xAA	; 170
    6e60:	51 e0       	ldi	r21, 0x01	; 1
    6e62:	60 e0       	ldi	r22, 0x00	; 0
    6e64:	70 e0       	ldi	r23, 0x00	; 0
    6e66:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <send_cmd>
    6e6a:	81 30       	cpi	r24, 0x01	; 1
    6e6c:	09 f0       	breq	.+2      	; 0x6e70 <disk_initialize+0x6c>
    6e6e:	48 c0       	rjmp	.+144    	; 0x6f00 <disk_initialize+0xfc>
    6e70:	7e 01       	movw	r14, r28
    6e72:	08 94       	sec
    6e74:	e1 1c       	adc	r14, r1
    6e76:	f1 1c       	adc	r15, r1
    6e78:	87 01       	movw	r16, r14
    6e7a:	9f ef       	ldi	r25, 0xFF	; 255
    6e7c:	9e 01       	movw	r18, r28
    6e7e:	2b 5f       	subi	r18, 0xFB	; 251
    6e80:	3f 4f       	sbci	r19, 0xFF	; 255
    6e82:	9f b9       	out	0x0f, r25	; 15
    6e84:	77 9b       	sbis	0x0e, 7	; 14
    6e86:	fe cf       	rjmp	.-4      	; 0x6e84 <disk_initialize+0x80>
    6e88:	8f b1       	in	r24, 0x0f	; 15
    6e8a:	f8 01       	movw	r30, r16
    6e8c:	81 93       	st	Z+, r24
    6e8e:	8f 01       	movw	r16, r30
    6e90:	e2 17       	cp	r30, r18
    6e92:	f3 07       	cpc	r31, r19
    6e94:	b1 f7       	brne	.-20     	; 0x6e82 <disk_initialize+0x7e>
    6e96:	8b 81       	ldd	r24, Y+3	; 0x03
    6e98:	81 30       	cpi	r24, 0x01	; 1
    6e9a:	09 f0       	breq	.+2      	; 0x6e9e <disk_initialize+0x9a>
    6e9c:	58 c0       	rjmp	.+176    	; 0x6f4e <disk_initialize+0x14a>
    6e9e:	8c 81       	ldd	r24, Y+4	; 0x04
    6ea0:	8a 3a       	cpi	r24, 0xAA	; 170
    6ea2:	09 f0       	breq	.+2      	; 0x6ea6 <disk_initialize+0xa2>
    6ea4:	54 c0       	rjmp	.+168    	; 0x6f4e <disk_initialize+0x14a>
    6ea6:	80 91 43 05 	lds	r24, 0x0543
    6eaa:	88 23       	and	r24, r24
    6eac:	49 f0       	breq	.+18     	; 0x6ec0 <disk_initialize+0xbc>
    6eae:	89 ea       	ldi	r24, 0xA9	; 169
    6eb0:	40 e0       	ldi	r20, 0x00	; 0
    6eb2:	50 e0       	ldi	r21, 0x00	; 0
    6eb4:	60 e0       	ldi	r22, 0x00	; 0
    6eb6:	70 e4       	ldi	r23, 0x40	; 64
    6eb8:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <send_cmd>
    6ebc:	88 23       	and	r24, r24
    6ebe:	99 f7       	brne	.-26     	; 0x6ea6 <disk_initialize+0xa2>
    6ec0:	80 91 43 05 	lds	r24, 0x0543
    6ec4:	88 23       	and	r24, r24
    6ec6:	09 f4       	brne	.+2      	; 0x6eca <disk_initialize+0xc6>
    6ec8:	42 c0       	rjmp	.+132    	; 0x6f4e <disk_initialize+0x14a>
    6eca:	8a e3       	ldi	r24, 0x3A	; 58
    6ecc:	40 e0       	ldi	r20, 0x00	; 0
    6ece:	50 e0       	ldi	r21, 0x00	; 0
    6ed0:	60 e0       	ldi	r22, 0x00	; 0
    6ed2:	70 e0       	ldi	r23, 0x00	; 0
    6ed4:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <send_cmd>
    6ed8:	88 23       	and	r24, r24
    6eda:	c9 f5       	brne	.+114    	; 0x6f4e <disk_initialize+0x14a>
    6edc:	9f ef       	ldi	r25, 0xFF	; 255
    6ede:	9f b9       	out	0x0f, r25	; 15
    6ee0:	77 9b       	sbis	0x0e, 7	; 14
    6ee2:	fe cf       	rjmp	.-4      	; 0x6ee0 <disk_initialize+0xdc>
    6ee4:	8f b1       	in	r24, 0x0f	; 15
    6ee6:	f7 01       	movw	r30, r14
    6ee8:	81 93       	st	Z+, r24
    6eea:	7f 01       	movw	r14, r30
    6eec:	e0 17       	cp	r30, r16
    6eee:	f1 07       	cpc	r31, r17
    6ef0:	b1 f7       	brne	.-20     	; 0x6ede <disk_initialize+0xda>
    6ef2:	89 81       	ldd	r24, Y+1	; 0x01
    6ef4:	86 fd       	sbrc	r24, 6
    6ef6:	02 c0       	rjmp	.+4      	; 0x6efc <disk_initialize+0xf8>
    6ef8:	14 e0       	ldi	r17, 0x04	; 4
    6efa:	2a c0       	rjmp	.+84     	; 0x6f50 <disk_initialize+0x14c>
    6efc:	1c e0       	ldi	r17, 0x0C	; 12
    6efe:	28 c0       	rjmp	.+80     	; 0x6f50 <disk_initialize+0x14c>
    6f00:	89 ea       	ldi	r24, 0xA9	; 169
    6f02:	40 e0       	ldi	r20, 0x00	; 0
    6f04:	50 e0       	ldi	r21, 0x00	; 0
    6f06:	60 e0       	ldi	r22, 0x00	; 0
    6f08:	70 e0       	ldi	r23, 0x00	; 0
    6f0a:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <send_cmd>
    6f0e:	82 30       	cpi	r24, 0x02	; 2
    6f10:	18 f0       	brcs	.+6      	; 0x6f18 <disk_initialize+0x114>
    6f12:	01 e0       	ldi	r16, 0x01	; 1
    6f14:	11 e0       	ldi	r17, 0x01	; 1
    6f16:	02 c0       	rjmp	.+4      	; 0x6f1c <disk_initialize+0x118>
    6f18:	09 ea       	ldi	r16, 0xA9	; 169
    6f1a:	12 e0       	ldi	r17, 0x02	; 2
    6f1c:	80 91 43 05 	lds	r24, 0x0543
    6f20:	88 23       	and	r24, r24
    6f22:	49 f0       	breq	.+18     	; 0x6f36 <disk_initialize+0x132>
    6f24:	80 2f       	mov	r24, r16
    6f26:	40 e0       	ldi	r20, 0x00	; 0
    6f28:	50 e0       	ldi	r21, 0x00	; 0
    6f2a:	60 e0       	ldi	r22, 0x00	; 0
    6f2c:	70 e0       	ldi	r23, 0x00	; 0
    6f2e:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <send_cmd>
    6f32:	88 23       	and	r24, r24
    6f34:	99 f7       	brne	.-26     	; 0x6f1c <disk_initialize+0x118>
    6f36:	80 91 43 05 	lds	r24, 0x0543
    6f3a:	88 23       	and	r24, r24
    6f3c:	41 f0       	breq	.+16     	; 0x6f4e <disk_initialize+0x14a>
    6f3e:	80 e1       	ldi	r24, 0x10	; 16
    6f40:	40 e0       	ldi	r20, 0x00	; 0
    6f42:	52 e0       	ldi	r21, 0x02	; 2
    6f44:	60 e0       	ldi	r22, 0x00	; 0
    6f46:	70 e0       	ldi	r23, 0x00	; 0
    6f48:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <send_cmd>
    6f4c:	81 11       	cpse	r24, r1
    6f4e:	10 e0       	ldi	r17, 0x00	; 0
    6f50:	10 93 45 05 	sts	0x0545, r17
    6f54:	c0 9a       	sbi	0x18, 0	; 24
    6f56:	8f ef       	ldi	r24, 0xFF	; 255
    6f58:	8f b9       	out	0x0f, r24	; 15
    6f5a:	77 9b       	sbis	0x0e, 7	; 14
    6f5c:	fe cf       	rjmp	.-4      	; 0x6f5a <disk_initialize+0x156>
    6f5e:	8f b1       	in	r24, 0x0f	; 15
    6f60:	11 23       	and	r17, r17
    6f62:	39 f0       	breq	.+14     	; 0x6f72 <disk_initialize+0x16e>
    6f64:	80 91 f6 03 	lds	r24, 0x03F6
    6f68:	8e 7f       	andi	r24, 0xFE	; 254
    6f6a:	80 93 f6 03 	sts	0x03F6, r24
    6f6e:	80 e5       	ldi	r24, 0x50	; 80
    6f70:	01 c0       	rjmp	.+2      	; 0x6f74 <disk_initialize+0x170>
    6f72:	81 e0       	ldi	r24, 0x01	; 1
    6f74:	8d b9       	out	0x0d, r24	; 13
    6f76:	80 91 f6 03 	lds	r24, 0x03F6
    6f7a:	0f 90       	pop	r0
    6f7c:	0f 90       	pop	r0
    6f7e:	0f 90       	pop	r0
    6f80:	0f 90       	pop	r0
    6f82:	cf 91       	pop	r28
    6f84:	df 91       	pop	r29
    6f86:	1f 91       	pop	r17
    6f88:	0f 91       	pop	r16
    6f8a:	ff 90       	pop	r15
    6f8c:	ef 90       	pop	r14
    6f8e:	08 95       	ret

00006f90 <disk_status>:
    6f90:	88 23       	and	r24, r24
    6f92:	11 f0       	breq	.+4      	; 0x6f98 <disk_status+0x8>
    6f94:	81 e0       	ldi	r24, 0x01	; 1
    6f96:	08 95       	ret
    6f98:	80 91 f6 03 	lds	r24, 0x03F6
    6f9c:	08 95       	ret

00006f9e <disk_read>:
    6f9e:	ff 92       	push	r15
    6fa0:	0f 93       	push	r16
    6fa2:	1f 93       	push	r17
    6fa4:	cf 93       	push	r28
    6fa6:	df 93       	push	r29
    6fa8:	eb 01       	movw	r28, r22
    6faa:	88 23       	and	r24, r24
    6fac:	09 f0       	breq	.+2      	; 0x6fb0 <disk_read+0x12>
    6fae:	46 c0       	rjmp	.+140    	; 0x703c <disk_read+0x9e>
    6fb0:	01 15       	cp	r16, r1
    6fb2:	11 05       	cpc	r17, r1
    6fb4:	09 f4       	brne	.+2      	; 0x6fb8 <disk_read+0x1a>
    6fb6:	42 c0       	rjmp	.+132    	; 0x703c <disk_read+0x9e>
    6fb8:	80 91 f6 03 	lds	r24, 0x03F6
    6fbc:	80 ff       	sbrs	r24, 0
    6fbe:	02 c0       	rjmp	.+4      	; 0x6fc4 <disk_read+0x26>
    6fc0:	83 e0       	ldi	r24, 0x03	; 3
    6fc2:	3d c0       	rjmp	.+122    	; 0x703e <disk_read+0xa0>
    6fc4:	80 91 45 05 	lds	r24, 0x0545
    6fc8:	83 fd       	sbrc	r24, 3
    6fca:	07 c0       	rjmp	.+14     	; 0x6fda <disk_read+0x3c>
    6fcc:	e9 e0       	ldi	r30, 0x09	; 9
    6fce:	22 0f       	add	r18, r18
    6fd0:	33 1f       	adc	r19, r19
    6fd2:	44 1f       	adc	r20, r20
    6fd4:	55 1f       	adc	r21, r21
    6fd6:	ea 95       	dec	r30
    6fd8:	d1 f7       	brne	.-12     	; 0x6fce <disk_read+0x30>
    6fda:	02 30       	cpi	r16, 0x02	; 2
    6fdc:	11 05       	cpc	r17, r1
    6fde:	18 f4       	brcc	.+6      	; 0x6fe6 <disk_read+0x48>
    6fe0:	71 e1       	ldi	r23, 0x11	; 17
    6fe2:	f7 2e       	mov	r15, r23
    6fe4:	02 c0       	rjmp	.+4      	; 0x6fea <disk_read+0x4c>
    6fe6:	62 e1       	ldi	r22, 0x12	; 18
    6fe8:	f6 2e       	mov	r15, r22
    6fea:	8f 2d       	mov	r24, r15
    6fec:	ba 01       	movw	r22, r20
    6fee:	a9 01       	movw	r20, r18
    6ff0:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <send_cmd>
    6ff4:	88 23       	and	r24, r24
    6ff6:	b9 f4       	brne	.+46     	; 0x7026 <disk_read+0x88>
    6ff8:	ce 01       	movw	r24, r28
    6ffa:	60 e0       	ldi	r22, 0x00	; 0
    6ffc:	72 e0       	ldi	r23, 0x02	; 2
    6ffe:	0e 94 20 36 	call	0x6c40	; 0x6c40 <rcvr_datablock>
    7002:	89 2b       	or	r24, r25
    7004:	31 f0       	breq	.+12     	; 0x7012 <disk_read+0x74>
    7006:	01 50       	subi	r16, 0x01	; 1
    7008:	10 40       	sbci	r17, 0x00	; 0
    700a:	19 f0       	breq	.+6      	; 0x7012 <disk_read+0x74>
    700c:	c0 50       	subi	r28, 0x00	; 0
    700e:	de 4f       	sbci	r29, 0xFE	; 254
    7010:	f3 cf       	rjmp	.-26     	; 0x6ff8 <disk_read+0x5a>
    7012:	82 e1       	ldi	r24, 0x12	; 18
    7014:	f8 16       	cp	r15, r24
    7016:	39 f4       	brne	.+14     	; 0x7026 <disk_read+0x88>
    7018:	8c e0       	ldi	r24, 0x0C	; 12
    701a:	40 e0       	ldi	r20, 0x00	; 0
    701c:	50 e0       	ldi	r21, 0x00	; 0
    701e:	60 e0       	ldi	r22, 0x00	; 0
    7020:	70 e0       	ldi	r23, 0x00	; 0
    7022:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <send_cmd>
    7026:	c0 9a       	sbi	0x18, 0	; 24
    7028:	8f ef       	ldi	r24, 0xFF	; 255
    702a:	8f b9       	out	0x0f, r24	; 15
    702c:	77 9b       	sbis	0x0e, 7	; 14
    702e:	fe cf       	rjmp	.-4      	; 0x702c <disk_read+0x8e>
    7030:	8f b1       	in	r24, 0x0f	; 15
    7032:	80 e0       	ldi	r24, 0x00	; 0
    7034:	01 2b       	or	r16, r17
    7036:	19 f0       	breq	.+6      	; 0x703e <disk_read+0xa0>
    7038:	81 e0       	ldi	r24, 0x01	; 1
    703a:	01 c0       	rjmp	.+2      	; 0x703e <disk_read+0xa0>
    703c:	84 e0       	ldi	r24, 0x04	; 4
    703e:	df 91       	pop	r29
    7040:	cf 91       	pop	r28
    7042:	1f 91       	pop	r17
    7044:	0f 91       	pop	r16
    7046:	ff 90       	pop	r15
    7048:	08 95       	ret

0000704a <disk_write>:
    704a:	cf 92       	push	r12
    704c:	df 92       	push	r13
    704e:	ef 92       	push	r14
    7050:	ff 92       	push	r15
    7052:	0f 93       	push	r16
    7054:	1f 93       	push	r17
    7056:	cf 93       	push	r28
    7058:	df 93       	push	r29
    705a:	eb 01       	movw	r28, r22
    705c:	69 01       	movw	r12, r18
    705e:	7a 01       	movw	r14, r20
    7060:	88 23       	and	r24, r24
    7062:	09 f0       	breq	.+2      	; 0x7066 <disk_write+0x1c>
    7064:	5e c0       	rjmp	.+188    	; 0x7122 <disk_write+0xd8>
    7066:	01 15       	cp	r16, r1
    7068:	11 05       	cpc	r17, r1
    706a:	09 f4       	brne	.+2      	; 0x706e <disk_write+0x24>
    706c:	5a c0       	rjmp	.+180    	; 0x7122 <disk_write+0xd8>
    706e:	80 91 f6 03 	lds	r24, 0x03F6
    7072:	80 ff       	sbrs	r24, 0
    7074:	02 c0       	rjmp	.+4      	; 0x707a <disk_write+0x30>
    7076:	83 e0       	ldi	r24, 0x03	; 3
    7078:	55 c0       	rjmp	.+170    	; 0x7124 <disk_write+0xda>
    707a:	80 91 f6 03 	lds	r24, 0x03F6
    707e:	82 ff       	sbrs	r24, 2
    7080:	02 c0       	rjmp	.+4      	; 0x7086 <disk_write+0x3c>
    7082:	82 e0       	ldi	r24, 0x02	; 2
    7084:	4f c0       	rjmp	.+158    	; 0x7124 <disk_write+0xda>
    7086:	80 91 45 05 	lds	r24, 0x0545
    708a:	90 e0       	ldi	r25, 0x00	; 0
    708c:	83 fd       	sbrc	r24, 3
    708e:	07 c0       	rjmp	.+14     	; 0x709e <disk_write+0x54>
    7090:	f9 e0       	ldi	r31, 0x09	; 9
    7092:	cc 0c       	add	r12, r12
    7094:	dd 1c       	adc	r13, r13
    7096:	ee 1c       	adc	r14, r14
    7098:	ff 1c       	adc	r15, r15
    709a:	fa 95       	dec	r31
    709c:	d1 f7       	brne	.-12     	; 0x7092 <disk_write+0x48>
    709e:	01 30       	cpi	r16, 0x01	; 1
    70a0:	11 05       	cpc	r17, r1
    70a2:	71 f4       	brne	.+28     	; 0x70c0 <disk_write+0x76>
    70a4:	88 e1       	ldi	r24, 0x18	; 24
    70a6:	b7 01       	movw	r22, r14
    70a8:	a6 01       	movw	r20, r12
    70aa:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <send_cmd>
    70ae:	88 23       	and	r24, r24
    70b0:	69 f5       	brne	.+90     	; 0x710c <disk_write+0xc2>
    70b2:	ce 01       	movw	r24, r28
    70b4:	6e ef       	ldi	r22, 0xFE	; 254
    70b6:	0e 94 53 36 	call	0x6ca6	; 0x6ca6 <xmit_datablock>
    70ba:	00 e0       	ldi	r16, 0x00	; 0
    70bc:	10 e0       	ldi	r17, 0x00	; 0
    70be:	22 c0       	rjmp	.+68     	; 0x7104 <disk_write+0xba>
    70c0:	86 70       	andi	r24, 0x06	; 6
    70c2:	90 70       	andi	r25, 0x00	; 0
    70c4:	89 2b       	or	r24, r25
    70c6:	31 f0       	breq	.+12     	; 0x70d4 <disk_write+0x8a>
    70c8:	a8 01       	movw	r20, r16
    70ca:	60 e0       	ldi	r22, 0x00	; 0
    70cc:	70 e0       	ldi	r23, 0x00	; 0
    70ce:	87 e9       	ldi	r24, 0x97	; 151
    70d0:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <send_cmd>
    70d4:	89 e1       	ldi	r24, 0x19	; 25
    70d6:	b7 01       	movw	r22, r14
    70d8:	a6 01       	movw	r20, r12
    70da:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <send_cmd>
    70de:	88 23       	and	r24, r24
    70e0:	a9 f4       	brne	.+42     	; 0x710c <disk_write+0xc2>
    70e2:	ce 01       	movw	r24, r28
    70e4:	6c ef       	ldi	r22, 0xFC	; 252
    70e6:	0e 94 53 36 	call	0x6ca6	; 0x6ca6 <xmit_datablock>
    70ea:	89 2b       	or	r24, r25
    70ec:	31 f0       	breq	.+12     	; 0x70fa <disk_write+0xb0>
    70ee:	01 50       	subi	r16, 0x01	; 1
    70f0:	10 40       	sbci	r17, 0x00	; 0
    70f2:	19 f0       	breq	.+6      	; 0x70fa <disk_write+0xb0>
    70f4:	c0 50       	subi	r28, 0x00	; 0
    70f6:	de 4f       	sbci	r29, 0xFE	; 254
    70f8:	f4 cf       	rjmp	.-24     	; 0x70e2 <disk_write+0x98>
    70fa:	80 e0       	ldi	r24, 0x00	; 0
    70fc:	90 e0       	ldi	r25, 0x00	; 0
    70fe:	6d ef       	ldi	r22, 0xFD	; 253
    7100:	0e 94 53 36 	call	0x6ca6	; 0x6ca6 <xmit_datablock>
    7104:	89 2b       	or	r24, r25
    7106:	11 f4       	brne	.+4      	; 0x710c <disk_write+0xc2>
    7108:	01 e0       	ldi	r16, 0x01	; 1
    710a:	10 e0       	ldi	r17, 0x00	; 0
    710c:	c0 9a       	sbi	0x18, 0	; 24
    710e:	8f ef       	ldi	r24, 0xFF	; 255
    7110:	8f b9       	out	0x0f, r24	; 15
    7112:	77 9b       	sbis	0x0e, 7	; 14
    7114:	fe cf       	rjmp	.-4      	; 0x7112 <disk_write+0xc8>
    7116:	8f b1       	in	r24, 0x0f	; 15
    7118:	80 e0       	ldi	r24, 0x00	; 0
    711a:	01 2b       	or	r16, r17
    711c:	19 f0       	breq	.+6      	; 0x7124 <disk_write+0xda>
    711e:	81 e0       	ldi	r24, 0x01	; 1
    7120:	01 c0       	rjmp	.+2      	; 0x7124 <disk_write+0xda>
    7122:	84 e0       	ldi	r24, 0x04	; 4
    7124:	df 91       	pop	r29
    7126:	cf 91       	pop	r28
    7128:	1f 91       	pop	r17
    712a:	0f 91       	pop	r16
    712c:	ff 90       	pop	r15
    712e:	ef 90       	pop	r14
    7130:	df 90       	pop	r13
    7132:	cf 90       	pop	r12
    7134:	08 95       	ret

00007136 <disk_ioctl>:
    7136:	ff 92       	push	r15
    7138:	0f 93       	push	r16
    713a:	1f 93       	push	r17
    713c:	df 93       	push	r29
    713e:	cf 93       	push	r28
    7140:	cd b7       	in	r28, 0x3d	; 61
    7142:	de b7       	in	r29, 0x3e	; 62
    7144:	60 97       	sbiw	r28, 0x10	; 16
    7146:	0f b6       	in	r0, 0x3f	; 63
    7148:	f8 94       	cli
    714a:	de bf       	out	0x3e, r29	; 62
    714c:	0f be       	out	0x3f, r0	; 63
    714e:	cd bf       	out	0x3d, r28	; 61
    7150:	8a 01       	movw	r16, r20
    7152:	88 23       	and	r24, r24
    7154:	11 f0       	breq	.+4      	; 0x715a <disk_ioctl+0x24>
    7156:	24 e0       	ldi	r18, 0x04	; 4
    7158:	78 c1       	rjmp	.+752    	; 0x744a <disk_ioctl+0x314>
    715a:	80 91 f6 03 	lds	r24, 0x03F6
    715e:	80 ff       	sbrs	r24, 0
    7160:	02 c0       	rjmp	.+4      	; 0x7166 <disk_ioctl+0x30>
    7162:	23 e0       	ldi	r18, 0x03	; 3
    7164:	72 c1       	rjmp	.+740    	; 0x744a <disk_ioctl+0x314>
    7166:	62 33       	cpi	r22, 0x32	; 50
    7168:	09 f4       	brne	.+2      	; 0x716c <disk_ioctl+0x36>
    716a:	1c c1       	rjmp	.+568    	; 0x73a4 <disk_ioctl+0x26e>
    716c:	63 33       	cpi	r22, 0x33	; 51
    716e:	50 f4       	brcc	.+20     	; 0x7184 <disk_ioctl+0x4e>
    7170:	61 30       	cpi	r22, 0x01	; 1
    7172:	c9 f0       	breq	.+50     	; 0x71a6 <disk_ioctl+0x70>
    7174:	61 30       	cpi	r22, 0x01	; 1
    7176:	a0 f0       	brcs	.+40     	; 0x71a0 <disk_ioctl+0x6a>
    7178:	63 30       	cpi	r22, 0x03	; 3
    717a:	09 f4       	brne	.+2      	; 0x717e <disk_ioctl+0x48>
    717c:	84 c0       	rjmp	.+264    	; 0x7286 <disk_ioctl+0x150>
    717e:	67 30       	cpi	r22, 0x07	; 7
    7180:	69 f4       	brne	.+26     	; 0x719c <disk_ioctl+0x66>
    7182:	54 c1       	rjmp	.+680    	; 0x742c <disk_ioctl+0x2f6>
    7184:	64 33       	cpi	r22, 0x34	; 52
    7186:	09 f4       	brne	.+2      	; 0x718a <disk_ioctl+0x54>
    7188:	25 c1       	rjmp	.+586    	; 0x73d4 <disk_ioctl+0x29e>
    718a:	64 33       	cpi	r22, 0x34	; 52
    718c:	08 f4       	brcc	.+2      	; 0x7190 <disk_ioctl+0x5a>
    718e:	10 c1       	rjmp	.+544    	; 0x73b0 <disk_ioctl+0x27a>
    7190:	65 33       	cpi	r22, 0x35	; 53
    7192:	09 f4       	brne	.+2      	; 0x7196 <disk_ioctl+0x60>
    7194:	21 c1       	rjmp	.+578    	; 0x73d8 <disk_ioctl+0x2a2>
    7196:	66 33       	cpi	r22, 0x36	; 54
    7198:	09 f4       	brne	.+2      	; 0x719c <disk_ioctl+0x66>
    719a:	36 c1       	rjmp	.+620    	; 0x7408 <disk_ioctl+0x2d2>
    719c:	24 e0       	ldi	r18, 0x04	; 4
    719e:	4f c1       	rjmp	.+670    	; 0x743e <disk_ioctl+0x308>
    71a0:	0e 94 07 36 	call	0x6c0e	; 0x6c0e <select>
    71a4:	13 c1       	rjmp	.+550    	; 0x73cc <disk_ioctl+0x296>
    71a6:	89 e0       	ldi	r24, 0x09	; 9
    71a8:	40 e0       	ldi	r20, 0x00	; 0
    71aa:	50 e0       	ldi	r21, 0x00	; 0
    71ac:	60 e0       	ldi	r22, 0x00	; 0
    71ae:	70 e0       	ldi	r23, 0x00	; 0
    71b0:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <send_cmd>
    71b4:	88 23       	and	r24, r24
    71b6:	09 f0       	breq	.+2      	; 0x71ba <disk_ioctl+0x84>
    71b8:	41 c1       	rjmp	.+642    	; 0x743c <disk_ioctl+0x306>
    71ba:	ce 01       	movw	r24, r28
    71bc:	01 96       	adiw	r24, 0x01	; 1
    71be:	60 e1       	ldi	r22, 0x10	; 16
    71c0:	70 e0       	ldi	r23, 0x00	; 0
    71c2:	0e 94 20 36 	call	0x6c40	; 0x6c40 <rcvr_datablock>
    71c6:	89 2b       	or	r24, r25
    71c8:	09 f4       	brne	.+2      	; 0x71cc <disk_ioctl+0x96>
    71ca:	38 c1       	rjmp	.+624    	; 0x743c <disk_ioctl+0x306>
    71cc:	89 81       	ldd	r24, Y+1	; 0x01
    71ce:	82 95       	swap	r24
    71d0:	86 95       	lsr	r24
    71d2:	86 95       	lsr	r24
    71d4:	83 70       	andi	r24, 0x03	; 3
    71d6:	28 85       	ldd	r18, Y+8	; 0x08
    71d8:	69 85       	ldd	r22, Y+9	; 0x09
    71da:	7a 85       	ldd	r23, Y+10	; 0x0a
    71dc:	81 30       	cpi	r24, 0x01	; 1
    71de:	01 f5       	brne	.+64     	; 0x7220 <disk_ioctl+0xea>
    71e0:	30 e0       	ldi	r19, 0x00	; 0
    71e2:	40 e0       	ldi	r20, 0x00	; 0
    71e4:	50 e0       	ldi	r21, 0x00	; 0
    71e6:	2f 73       	andi	r18, 0x3F	; 63
    71e8:	30 70       	andi	r19, 0x00	; 0
    71ea:	40 70       	andi	r20, 0x00	; 0
    71ec:	50 70       	andi	r21, 0x00	; 0
    71ee:	a9 01       	movw	r20, r18
    71f0:	33 27       	eor	r19, r19
    71f2:	22 27       	eor	r18, r18
    71f4:	2f 5f       	subi	r18, 0xFF	; 255
    71f6:	3f 4f       	sbci	r19, 0xFF	; 255
    71f8:	4f 4f       	sbci	r20, 0xFF	; 255
    71fa:	5f 4f       	sbci	r21, 0xFF	; 255
    71fc:	96 2f       	mov	r25, r22
    71fe:	80 e0       	ldi	r24, 0x00	; 0
    7200:	87 0f       	add	r24, r23
    7202:	91 1d       	adc	r25, r1
    7204:	a0 e0       	ldi	r26, 0x00	; 0
    7206:	b0 e0       	ldi	r27, 0x00	; 0
    7208:	28 0f       	add	r18, r24
    720a:	39 1f       	adc	r19, r25
    720c:	4a 1f       	adc	r20, r26
    720e:	5b 1f       	adc	r21, r27
    7210:	fa e0       	ldi	r31, 0x0A	; 10
    7212:	22 0f       	add	r18, r18
    7214:	33 1f       	adc	r19, r19
    7216:	44 1f       	adc	r20, r20
    7218:	55 1f       	adc	r21, r21
    721a:	fa 95       	dec	r31
    721c:	d1 f7       	brne	.-12     	; 0x7212 <disk_ioctl+0xdc>
    721e:	2d c0       	rjmp	.+90     	; 0x727a <disk_ioctl+0x144>
    7220:	62 95       	swap	r22
    7222:	66 95       	lsr	r22
    7224:	66 95       	lsr	r22
    7226:	63 70       	andi	r22, 0x03	; 3
    7228:	30 e0       	ldi	r19, 0x00	; 0
    722a:	22 0f       	add	r18, r18
    722c:	33 1f       	adc	r19, r19
    722e:	22 0f       	add	r18, r18
    7230:	33 1f       	adc	r19, r19
    7232:	26 0f       	add	r18, r22
    7234:	31 1d       	adc	r19, r1
    7236:	2f 5f       	subi	r18, 0xFF	; 255
    7238:	3f 4f       	sbci	r19, 0xFF	; 255
    723a:	8f 81       	ldd	r24, Y+7	; 0x07
    723c:	90 e0       	ldi	r25, 0x00	; 0
    723e:	83 70       	andi	r24, 0x03	; 3
    7240:	90 70       	andi	r25, 0x00	; 0
    7242:	98 2f       	mov	r25, r24
    7244:	88 27       	eor	r24, r24
    7246:	99 0f       	add	r25, r25
    7248:	99 0f       	add	r25, r25
    724a:	28 0f       	add	r18, r24
    724c:	39 1f       	adc	r19, r25
    724e:	40 e0       	ldi	r20, 0x00	; 0
    7250:	50 e0       	ldi	r21, 0x00	; 0
    7252:	8e 81       	ldd	r24, Y+6	; 0x06
    7254:	8f 70       	andi	r24, 0x0F	; 15
    7256:	6b 85       	ldd	r22, Y+11	; 0x0b
    7258:	66 1f       	adc	r22, r22
    725a:	66 27       	eor	r22, r22
    725c:	66 1f       	adc	r22, r22
    725e:	86 0f       	add	r24, r22
    7260:	8e 5f       	subi	r24, 0xFE	; 254
    7262:	73 70       	andi	r23, 0x03	; 3
    7264:	77 0f       	add	r23, r23
    7266:	87 0f       	add	r24, r23
    7268:	90 e0       	ldi	r25, 0x00	; 0
    726a:	09 97       	sbiw	r24, 0x09	; 9
    726c:	04 c0       	rjmp	.+8      	; 0x7276 <disk_ioctl+0x140>
    726e:	22 0f       	add	r18, r18
    7270:	33 1f       	adc	r19, r19
    7272:	44 1f       	adc	r20, r20
    7274:	55 1f       	adc	r21, r21
    7276:	8a 95       	dec	r24
    7278:	d2 f7       	brpl	.-12     	; 0x726e <disk_ioctl+0x138>
    727a:	f8 01       	movw	r30, r16
    727c:	20 83       	st	Z, r18
    727e:	31 83       	std	Z+1, r19	; 0x01
    7280:	42 83       	std	Z+2, r20	; 0x02
    7282:	53 83       	std	Z+3, r21	; 0x03
    7284:	93 c0       	rjmp	.+294    	; 0x73ac <disk_ioctl+0x276>
    7286:	80 91 45 05 	lds	r24, 0x0545
    728a:	f8 2e       	mov	r15, r24
    728c:	82 ff       	sbrs	r24, 2
    728e:	2f c0       	rjmp	.+94     	; 0x72ee <disk_ioctl+0x1b8>
    7290:	8d e8       	ldi	r24, 0x8D	; 141
    7292:	40 e0       	ldi	r20, 0x00	; 0
    7294:	50 e0       	ldi	r21, 0x00	; 0
    7296:	60 e0       	ldi	r22, 0x00	; 0
    7298:	70 e0       	ldi	r23, 0x00	; 0
    729a:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <send_cmd>
    729e:	88 23       	and	r24, r24
    72a0:	09 f0       	breq	.+2      	; 0x72a4 <disk_ioctl+0x16e>
    72a2:	cc c0       	rjmp	.+408    	; 0x743c <disk_ioctl+0x306>
    72a4:	8f ef       	ldi	r24, 0xFF	; 255
    72a6:	8f b9       	out	0x0f, r24	; 15
    72a8:	77 9b       	sbis	0x0e, 7	; 14
    72aa:	fe cf       	rjmp	.-4      	; 0x72a8 <disk_ioctl+0x172>
    72ac:	8f b1       	in	r24, 0x0f	; 15
    72ae:	ce 01       	movw	r24, r28
    72b0:	01 96       	adiw	r24, 0x01	; 1
    72b2:	60 e1       	ldi	r22, 0x10	; 16
    72b4:	70 e0       	ldi	r23, 0x00	; 0
    72b6:	0e 94 20 36 	call	0x6c40	; 0x6c40 <rcvr_datablock>
    72ba:	89 2b       	or	r24, r25
    72bc:	09 f4       	brne	.+2      	; 0x72c0 <disk_ioctl+0x18a>
    72be:	be c0       	rjmp	.+380    	; 0x743c <disk_ioctl+0x306>
    72c0:	80 e3       	ldi	r24, 0x30	; 48
    72c2:	9f ef       	ldi	r25, 0xFF	; 255
    72c4:	9f b9       	out	0x0f, r25	; 15
    72c6:	77 9b       	sbis	0x0e, 7	; 14
    72c8:	fe cf       	rjmp	.-4      	; 0x72c6 <disk_ioctl+0x190>
    72ca:	2f b1       	in	r18, 0x0f	; 15
    72cc:	81 50       	subi	r24, 0x01	; 1
    72ce:	d1 f7       	brne	.-12     	; 0x72c4 <disk_ioctl+0x18e>
    72d0:	2b 85       	ldd	r18, Y+11	; 0x0b
    72d2:	22 95       	swap	r18
    72d4:	2f 70       	andi	r18, 0x0F	; 15
    72d6:	80 e1       	ldi	r24, 0x10	; 16
    72d8:	90 e0       	ldi	r25, 0x00	; 0
    72da:	a0 e0       	ldi	r26, 0x00	; 0
    72dc:	b0 e0       	ldi	r27, 0x00	; 0
    72de:	04 c0       	rjmp	.+8      	; 0x72e8 <disk_ioctl+0x1b2>
    72e0:	88 0f       	add	r24, r24
    72e2:	99 1f       	adc	r25, r25
    72e4:	aa 1f       	adc	r26, r26
    72e6:	bb 1f       	adc	r27, r27
    72e8:	2a 95       	dec	r18
    72ea:	d2 f7       	brpl	.-12     	; 0x72e0 <disk_ioctl+0x1aa>
    72ec:	55 c0       	rjmp	.+170    	; 0x7398 <disk_ioctl+0x262>
    72ee:	89 e0       	ldi	r24, 0x09	; 9
    72f0:	40 e0       	ldi	r20, 0x00	; 0
    72f2:	50 e0       	ldi	r21, 0x00	; 0
    72f4:	60 e0       	ldi	r22, 0x00	; 0
    72f6:	70 e0       	ldi	r23, 0x00	; 0
    72f8:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <send_cmd>
    72fc:	88 23       	and	r24, r24
    72fe:	09 f0       	breq	.+2      	; 0x7302 <disk_ioctl+0x1cc>
    7300:	9d c0       	rjmp	.+314    	; 0x743c <disk_ioctl+0x306>
    7302:	ce 01       	movw	r24, r28
    7304:	01 96       	adiw	r24, 0x01	; 1
    7306:	60 e1       	ldi	r22, 0x10	; 16
    7308:	70 e0       	ldi	r23, 0x00	; 0
    730a:	0e 94 20 36 	call	0x6c40	; 0x6c40 <rcvr_datablock>
    730e:	89 2b       	or	r24, r25
    7310:	09 f4       	brne	.+2      	; 0x7314 <disk_ioctl+0x1de>
    7312:	94 c0       	rjmp	.+296    	; 0x743c <disk_ioctl+0x306>
    7314:	4b 85       	ldd	r20, Y+11	; 0x0b
    7316:	8c 85       	ldd	r24, Y+12	; 0x0c
    7318:	f1 fe       	sbrs	r15, 1
    731a:	1b c0       	rjmp	.+54     	; 0x7352 <disk_ioctl+0x21c>
    731c:	88 1f       	adc	r24, r24
    731e:	88 27       	eor	r24, r24
    7320:	88 1f       	adc	r24, r24
    7322:	90 e0       	ldi	r25, 0x00	; 0
    7324:	01 96       	adiw	r24, 0x01	; 1
    7326:	24 2f       	mov	r18, r20
    7328:	30 e0       	ldi	r19, 0x00	; 0
    732a:	2f 73       	andi	r18, 0x3F	; 63
    732c:	30 70       	andi	r19, 0x00	; 0
    732e:	22 0f       	add	r18, r18
    7330:	33 1f       	adc	r19, r19
    7332:	82 0f       	add	r24, r18
    7334:	93 1f       	adc	r25, r19
    7336:	2e 85       	ldd	r18, Y+14	; 0x0e
    7338:	22 95       	swap	r18
    733a:	26 95       	lsr	r18
    733c:	26 95       	lsr	r18
    733e:	23 70       	andi	r18, 0x03	; 3
    7340:	30 e0       	ldi	r19, 0x00	; 0
    7342:	21 50       	subi	r18, 0x01	; 1
    7344:	30 40       	sbci	r19, 0x00	; 0
    7346:	02 c0       	rjmp	.+4      	; 0x734c <disk_ioctl+0x216>
    7348:	88 0f       	add	r24, r24
    734a:	99 1f       	adc	r25, r25
    734c:	2a 95       	dec	r18
    734e:	e2 f7       	brpl	.-8      	; 0x7348 <disk_ioctl+0x212>
    7350:	21 c0       	rjmp	.+66     	; 0x7394 <disk_ioctl+0x25e>
    7352:	28 2f       	mov	r18, r24
    7354:	30 e0       	ldi	r19, 0x00	; 0
    7356:	23 70       	andi	r18, 0x03	; 3
    7358:	30 70       	andi	r19, 0x00	; 0
    735a:	b3 e0       	ldi	r27, 0x03	; 3
    735c:	22 0f       	add	r18, r18
    735e:	33 1f       	adc	r19, r19
    7360:	ba 95       	dec	r27
    7362:	e1 f7       	brne	.-8      	; 0x735c <disk_ioctl+0x226>
    7364:	82 95       	swap	r24
    7366:	86 95       	lsr	r24
    7368:	87 70       	andi	r24, 0x07	; 7
    736a:	28 0f       	add	r18, r24
    736c:	31 1d       	adc	r19, r1
    736e:	2f 5f       	subi	r18, 0xFF	; 255
    7370:	3f 4f       	sbci	r19, 0xFF	; 255
    7372:	84 2f       	mov	r24, r20
    7374:	90 e0       	ldi	r25, 0x00	; 0
    7376:	8c 77       	andi	r24, 0x7C	; 124
    7378:	90 70       	andi	r25, 0x00	; 0
    737a:	95 95       	asr	r25
    737c:	87 95       	ror	r24
    737e:	95 95       	asr	r25
    7380:	87 95       	ror	r24
    7382:	01 96       	adiw	r24, 0x01	; 1
    7384:	ac 01       	movw	r20, r24
    7386:	24 9f       	mul	r18, r20
    7388:	c0 01       	movw	r24, r0
    738a:	25 9f       	mul	r18, r21
    738c:	90 0d       	add	r25, r0
    738e:	34 9f       	mul	r19, r20
    7390:	90 0d       	add	r25, r0
    7392:	11 24       	eor	r1, r1
    7394:	a0 e0       	ldi	r26, 0x00	; 0
    7396:	b0 e0       	ldi	r27, 0x00	; 0
    7398:	f8 01       	movw	r30, r16
    739a:	80 83       	st	Z, r24
    739c:	91 83       	std	Z+1, r25	; 0x01
    739e:	a2 83       	std	Z+2, r26	; 0x02
    73a0:	b3 83       	std	Z+3, r27	; 0x03
    73a2:	04 c0       	rjmp	.+8      	; 0x73ac <disk_ioctl+0x276>
    73a4:	80 91 45 05 	lds	r24, 0x0545
    73a8:	fa 01       	movw	r30, r20
    73aa:	80 83       	st	Z, r24
    73ac:	20 e0       	ldi	r18, 0x00	; 0
    73ae:	47 c0       	rjmp	.+142    	; 0x743e <disk_ioctl+0x308>
    73b0:	89 e0       	ldi	r24, 0x09	; 9
    73b2:	40 e0       	ldi	r20, 0x00	; 0
    73b4:	50 e0       	ldi	r21, 0x00	; 0
    73b6:	60 e0       	ldi	r22, 0x00	; 0
    73b8:	70 e0       	ldi	r23, 0x00	; 0
    73ba:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <send_cmd>
    73be:	88 23       	and	r24, r24
    73c0:	e9 f5       	brne	.+122    	; 0x743c <disk_ioctl+0x306>
    73c2:	c8 01       	movw	r24, r16
    73c4:	60 e1       	ldi	r22, 0x10	; 16
    73c6:	70 e0       	ldi	r23, 0x00	; 0
    73c8:	0e 94 20 36 	call	0x6c40	; 0x6c40 <rcvr_datablock>
    73cc:	20 e0       	ldi	r18, 0x00	; 0
    73ce:	89 2b       	or	r24, r25
    73d0:	b1 f5       	brne	.+108    	; 0x743e <disk_ioctl+0x308>
    73d2:	34 c0       	rjmp	.+104    	; 0x743c <disk_ioctl+0x306>
    73d4:	8a e0       	ldi	r24, 0x0A	; 10
    73d6:	ed cf       	rjmp	.-38     	; 0x73b2 <disk_ioctl+0x27c>
    73d8:	8a e3       	ldi	r24, 0x3A	; 58
    73da:	40 e0       	ldi	r20, 0x00	; 0
    73dc:	50 e0       	ldi	r21, 0x00	; 0
    73de:	60 e0       	ldi	r22, 0x00	; 0
    73e0:	70 e0       	ldi	r23, 0x00	; 0
    73e2:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <send_cmd>
    73e6:	88 23       	and	r24, r24
    73e8:	49 f5       	brne	.+82     	; 0x743c <disk_ioctl+0x306>
    73ea:	f8 01       	movw	r30, r16
    73ec:	9f ef       	ldi	r25, 0xFF	; 255
    73ee:	98 01       	movw	r18, r16
    73f0:	2d 5f       	subi	r18, 0xFD	; 253
    73f2:	3f 4f       	sbci	r19, 0xFF	; 255
    73f4:	9f b9       	out	0x0f, r25	; 15
    73f6:	77 9b       	sbis	0x0e, 7	; 14
    73f8:	fe cf       	rjmp	.-4      	; 0x73f6 <disk_ioctl+0x2c0>
    73fa:	8f b1       	in	r24, 0x0f	; 15
    73fc:	80 83       	st	Z, r24
    73fe:	e2 17       	cp	r30, r18
    7400:	f3 07       	cpc	r31, r19
    7402:	a1 f2       	breq	.-88     	; 0x73ac <disk_ioctl+0x276>
    7404:	31 96       	adiw	r30, 0x01	; 1
    7406:	f6 cf       	rjmp	.-20     	; 0x73f4 <disk_ioctl+0x2be>
    7408:	8d e8       	ldi	r24, 0x8D	; 141
    740a:	40 e0       	ldi	r20, 0x00	; 0
    740c:	50 e0       	ldi	r21, 0x00	; 0
    740e:	60 e0       	ldi	r22, 0x00	; 0
    7410:	70 e0       	ldi	r23, 0x00	; 0
    7412:	0e 94 96 36 	call	0x6d2c	; 0x6d2c <send_cmd>
    7416:	88 23       	and	r24, r24
    7418:	89 f4       	brne	.+34     	; 0x743c <disk_ioctl+0x306>
    741a:	8f ef       	ldi	r24, 0xFF	; 255
    741c:	8f b9       	out	0x0f, r24	; 15
    741e:	77 9b       	sbis	0x0e, 7	; 14
    7420:	fe cf       	rjmp	.-4      	; 0x741e <disk_ioctl+0x2e8>
    7422:	8f b1       	in	r24, 0x0f	; 15
    7424:	c8 01       	movw	r24, r16
    7426:	60 e4       	ldi	r22, 0x40	; 64
    7428:	70 e0       	ldi	r23, 0x00	; 0
    742a:	ce cf       	rjmp	.-100    	; 0x73c8 <disk_ioctl+0x292>
    742c:	81 e0       	ldi	r24, 0x01	; 1
    742e:	8d b9       	out	0x0d, r24	; 13
    7430:	80 91 f6 03 	lds	r24, 0x03F6
    7434:	81 60       	ori	r24, 0x01	; 1
    7436:	80 93 f6 03 	sts	0x03F6, r24
    743a:	b8 cf       	rjmp	.-144    	; 0x73ac <disk_ioctl+0x276>
    743c:	21 e0       	ldi	r18, 0x01	; 1
    743e:	c0 9a       	sbi	0x18, 0	; 24
    7440:	8f ef       	ldi	r24, 0xFF	; 255
    7442:	8f b9       	out	0x0f, r24	; 15
    7444:	77 9b       	sbis	0x0e, 7	; 14
    7446:	fe cf       	rjmp	.-4      	; 0x7444 <disk_ioctl+0x30e>
    7448:	8f b1       	in	r24, 0x0f	; 15
    744a:	82 2f       	mov	r24, r18
    744c:	60 96       	adiw	r28, 0x10	; 16
    744e:	0f b6       	in	r0, 0x3f	; 63
    7450:	f8 94       	cli
    7452:	de bf       	out	0x3e, r29	; 62
    7454:	0f be       	out	0x3f, r0	; 63
    7456:	cd bf       	out	0x3d, r28	; 61
    7458:	cf 91       	pop	r28
    745a:	df 91       	pop	r29
    745c:	1f 91       	pop	r17
    745e:	0f 91       	pop	r16
    7460:	ff 90       	pop	r15
    7462:	08 95       	ret

00007464 <__fixunssfsi>:
    7464:	ef 92       	push	r14
    7466:	ff 92       	push	r15
    7468:	0f 93       	push	r16
    746a:	1f 93       	push	r17
    746c:	7b 01       	movw	r14, r22
    746e:	8c 01       	movw	r16, r24
    7470:	20 e0       	ldi	r18, 0x00	; 0
    7472:	30 e0       	ldi	r19, 0x00	; 0
    7474:	40 e0       	ldi	r20, 0x00	; 0
    7476:	5f e4       	ldi	r21, 0x4F	; 79
    7478:	0e 94 32 3d 	call	0x7a64	; 0x7a64 <__gesf2>
    747c:	88 23       	and	r24, r24
    747e:	8c f0       	brlt	.+34     	; 0x74a2 <__fixunssfsi+0x3e>
    7480:	c8 01       	movw	r24, r16
    7482:	b7 01       	movw	r22, r14
    7484:	20 e0       	ldi	r18, 0x00	; 0
    7486:	30 e0       	ldi	r19, 0x00	; 0
    7488:	40 e0       	ldi	r20, 0x00	; 0
    748a:	5f e4       	ldi	r21, 0x4F	; 79
    748c:	0e 94 aa 3b 	call	0x7754	; 0x7754 <__subsf3>
    7490:	0e 94 f0 3d 	call	0x7be0	; 0x7be0 <__fixsfsi>
    7494:	9b 01       	movw	r18, r22
    7496:	ac 01       	movw	r20, r24
    7498:	20 50       	subi	r18, 0x00	; 0
    749a:	30 40       	sbci	r19, 0x00	; 0
    749c:	40 40       	sbci	r20, 0x00	; 0
    749e:	50 48       	sbci	r21, 0x80	; 128
    74a0:	06 c0       	rjmp	.+12     	; 0x74ae <__fixunssfsi+0x4a>
    74a2:	c8 01       	movw	r24, r16
    74a4:	b7 01       	movw	r22, r14
    74a6:	0e 94 f0 3d 	call	0x7be0	; 0x7be0 <__fixsfsi>
    74aa:	9b 01       	movw	r18, r22
    74ac:	ac 01       	movw	r20, r24
    74ae:	b9 01       	movw	r22, r18
    74b0:	ca 01       	movw	r24, r20
    74b2:	1f 91       	pop	r17
    74b4:	0f 91       	pop	r16
    74b6:	ff 90       	pop	r15
    74b8:	ef 90       	pop	r14
    74ba:	08 95       	ret

000074bc <_fpadd_parts>:
    74bc:	a0 e0       	ldi	r26, 0x00	; 0
    74be:	b0 e0       	ldi	r27, 0x00	; 0
    74c0:	e4 e6       	ldi	r30, 0x64	; 100
    74c2:	fa e3       	ldi	r31, 0x3A	; 58
    74c4:	0c 94 41 41 	jmp	0x8282	; 0x8282 <__prologue_saves__>
    74c8:	dc 01       	movw	r26, r24
    74ca:	2b 01       	movw	r4, r22
    74cc:	fa 01       	movw	r30, r20
    74ce:	9c 91       	ld	r25, X
    74d0:	92 30       	cpi	r25, 0x02	; 2
    74d2:	08 f4       	brcc	.+2      	; 0x74d6 <_fpadd_parts+0x1a>
    74d4:	39 c1       	rjmp	.+626    	; 0x7748 <_fpadd_parts+0x28c>
    74d6:	eb 01       	movw	r28, r22
    74d8:	88 81       	ld	r24, Y
    74da:	82 30       	cpi	r24, 0x02	; 2
    74dc:	08 f4       	brcc	.+2      	; 0x74e0 <_fpadd_parts+0x24>
    74de:	33 c1       	rjmp	.+614    	; 0x7746 <_fpadd_parts+0x28a>
    74e0:	94 30       	cpi	r25, 0x04	; 4
    74e2:	69 f4       	brne	.+26     	; 0x74fe <_fpadd_parts+0x42>
    74e4:	84 30       	cpi	r24, 0x04	; 4
    74e6:	09 f0       	breq	.+2      	; 0x74ea <_fpadd_parts+0x2e>
    74e8:	2f c1       	rjmp	.+606    	; 0x7748 <_fpadd_parts+0x28c>
    74ea:	11 96       	adiw	r26, 0x01	; 1
    74ec:	9c 91       	ld	r25, X
    74ee:	11 97       	sbiw	r26, 0x01	; 1
    74f0:	89 81       	ldd	r24, Y+1	; 0x01
    74f2:	98 17       	cp	r25, r24
    74f4:	09 f4       	brne	.+2      	; 0x74f8 <_fpadd_parts+0x3c>
    74f6:	28 c1       	rjmp	.+592    	; 0x7748 <_fpadd_parts+0x28c>
    74f8:	a7 ef       	ldi	r26, 0xF7	; 247
    74fa:	b3 e0       	ldi	r27, 0x03	; 3
    74fc:	25 c1       	rjmp	.+586    	; 0x7748 <_fpadd_parts+0x28c>
    74fe:	84 30       	cpi	r24, 0x04	; 4
    7500:	09 f4       	brne	.+2      	; 0x7504 <_fpadd_parts+0x48>
    7502:	21 c1       	rjmp	.+578    	; 0x7746 <_fpadd_parts+0x28a>
    7504:	82 30       	cpi	r24, 0x02	; 2
    7506:	a9 f4       	brne	.+42     	; 0x7532 <_fpadd_parts+0x76>
    7508:	92 30       	cpi	r25, 0x02	; 2
    750a:	09 f0       	breq	.+2      	; 0x750e <_fpadd_parts+0x52>
    750c:	1d c1       	rjmp	.+570    	; 0x7748 <_fpadd_parts+0x28c>
    750e:	9a 01       	movw	r18, r20
    7510:	ad 01       	movw	r20, r26
    7512:	88 e0       	ldi	r24, 0x08	; 8
    7514:	ea 01       	movw	r28, r20
    7516:	09 90       	ld	r0, Y+
    7518:	ae 01       	movw	r20, r28
    751a:	e9 01       	movw	r28, r18
    751c:	09 92       	st	Y+, r0
    751e:	9e 01       	movw	r18, r28
    7520:	81 50       	subi	r24, 0x01	; 1
    7522:	c1 f7       	brne	.-16     	; 0x7514 <_fpadd_parts+0x58>
    7524:	e2 01       	movw	r28, r4
    7526:	89 81       	ldd	r24, Y+1	; 0x01
    7528:	11 96       	adiw	r26, 0x01	; 1
    752a:	9c 91       	ld	r25, X
    752c:	89 23       	and	r24, r25
    752e:	81 83       	std	Z+1, r24	; 0x01
    7530:	08 c1       	rjmp	.+528    	; 0x7742 <_fpadd_parts+0x286>
    7532:	92 30       	cpi	r25, 0x02	; 2
    7534:	09 f4       	brne	.+2      	; 0x7538 <_fpadd_parts+0x7c>
    7536:	07 c1       	rjmp	.+526    	; 0x7746 <_fpadd_parts+0x28a>
    7538:	12 96       	adiw	r26, 0x02	; 2
    753a:	2d 90       	ld	r2, X+
    753c:	3c 90       	ld	r3, X
    753e:	13 97       	sbiw	r26, 0x03	; 3
    7540:	eb 01       	movw	r28, r22
    7542:	8a 81       	ldd	r24, Y+2	; 0x02
    7544:	9b 81       	ldd	r25, Y+3	; 0x03
    7546:	14 96       	adiw	r26, 0x04	; 4
    7548:	ad 90       	ld	r10, X+
    754a:	bd 90       	ld	r11, X+
    754c:	cd 90       	ld	r12, X+
    754e:	dc 90       	ld	r13, X
    7550:	17 97       	sbiw	r26, 0x07	; 7
    7552:	ec 80       	ldd	r14, Y+4	; 0x04
    7554:	fd 80       	ldd	r15, Y+5	; 0x05
    7556:	0e 81       	ldd	r16, Y+6	; 0x06
    7558:	1f 81       	ldd	r17, Y+7	; 0x07
    755a:	91 01       	movw	r18, r2
    755c:	28 1b       	sub	r18, r24
    755e:	39 0b       	sbc	r19, r25
    7560:	b9 01       	movw	r22, r18
    7562:	37 ff       	sbrs	r19, 7
    7564:	04 c0       	rjmp	.+8      	; 0x756e <_fpadd_parts+0xb2>
    7566:	66 27       	eor	r22, r22
    7568:	77 27       	eor	r23, r23
    756a:	62 1b       	sub	r22, r18
    756c:	73 0b       	sbc	r23, r19
    756e:	60 32       	cpi	r22, 0x20	; 32
    7570:	71 05       	cpc	r23, r1
    7572:	0c f0       	brlt	.+2      	; 0x7576 <_fpadd_parts+0xba>
    7574:	61 c0       	rjmp	.+194    	; 0x7638 <_fpadd_parts+0x17c>
    7576:	12 16       	cp	r1, r18
    7578:	13 06       	cpc	r1, r19
    757a:	6c f5       	brge	.+90     	; 0x75d6 <_fpadd_parts+0x11a>
    757c:	37 01       	movw	r6, r14
    757e:	48 01       	movw	r8, r16
    7580:	06 2e       	mov	r0, r22
    7582:	04 c0       	rjmp	.+8      	; 0x758c <_fpadd_parts+0xd0>
    7584:	96 94       	lsr	r9
    7586:	87 94       	ror	r8
    7588:	77 94       	ror	r7
    758a:	67 94       	ror	r6
    758c:	0a 94       	dec	r0
    758e:	d2 f7       	brpl	.-12     	; 0x7584 <_fpadd_parts+0xc8>
    7590:	21 e0       	ldi	r18, 0x01	; 1
    7592:	30 e0       	ldi	r19, 0x00	; 0
    7594:	40 e0       	ldi	r20, 0x00	; 0
    7596:	50 e0       	ldi	r21, 0x00	; 0
    7598:	04 c0       	rjmp	.+8      	; 0x75a2 <_fpadd_parts+0xe6>
    759a:	22 0f       	add	r18, r18
    759c:	33 1f       	adc	r19, r19
    759e:	44 1f       	adc	r20, r20
    75a0:	55 1f       	adc	r21, r21
    75a2:	6a 95       	dec	r22
    75a4:	d2 f7       	brpl	.-12     	; 0x759a <_fpadd_parts+0xde>
    75a6:	21 50       	subi	r18, 0x01	; 1
    75a8:	30 40       	sbci	r19, 0x00	; 0
    75aa:	40 40       	sbci	r20, 0x00	; 0
    75ac:	50 40       	sbci	r21, 0x00	; 0
    75ae:	2e 21       	and	r18, r14
    75b0:	3f 21       	and	r19, r15
    75b2:	40 23       	and	r20, r16
    75b4:	51 23       	and	r21, r17
    75b6:	21 15       	cp	r18, r1
    75b8:	31 05       	cpc	r19, r1
    75ba:	41 05       	cpc	r20, r1
    75bc:	51 05       	cpc	r21, r1
    75be:	21 f0       	breq	.+8      	; 0x75c8 <_fpadd_parts+0x10c>
    75c0:	21 e0       	ldi	r18, 0x01	; 1
    75c2:	30 e0       	ldi	r19, 0x00	; 0
    75c4:	40 e0       	ldi	r20, 0x00	; 0
    75c6:	50 e0       	ldi	r21, 0x00	; 0
    75c8:	79 01       	movw	r14, r18
    75ca:	8a 01       	movw	r16, r20
    75cc:	e6 28       	or	r14, r6
    75ce:	f7 28       	or	r15, r7
    75d0:	08 29       	or	r16, r8
    75d2:	19 29       	or	r17, r9
    75d4:	3c c0       	rjmp	.+120    	; 0x764e <_fpadd_parts+0x192>
    75d6:	23 2b       	or	r18, r19
    75d8:	d1 f1       	breq	.+116    	; 0x764e <_fpadd_parts+0x192>
    75da:	26 0e       	add	r2, r22
    75dc:	37 1e       	adc	r3, r23
    75de:	35 01       	movw	r6, r10
    75e0:	46 01       	movw	r8, r12
    75e2:	06 2e       	mov	r0, r22
    75e4:	04 c0       	rjmp	.+8      	; 0x75ee <_fpadd_parts+0x132>
    75e6:	96 94       	lsr	r9
    75e8:	87 94       	ror	r8
    75ea:	77 94       	ror	r7
    75ec:	67 94       	ror	r6
    75ee:	0a 94       	dec	r0
    75f0:	d2 f7       	brpl	.-12     	; 0x75e6 <_fpadd_parts+0x12a>
    75f2:	21 e0       	ldi	r18, 0x01	; 1
    75f4:	30 e0       	ldi	r19, 0x00	; 0
    75f6:	40 e0       	ldi	r20, 0x00	; 0
    75f8:	50 e0       	ldi	r21, 0x00	; 0
    75fa:	04 c0       	rjmp	.+8      	; 0x7604 <_fpadd_parts+0x148>
    75fc:	22 0f       	add	r18, r18
    75fe:	33 1f       	adc	r19, r19
    7600:	44 1f       	adc	r20, r20
    7602:	55 1f       	adc	r21, r21
    7604:	6a 95       	dec	r22
    7606:	d2 f7       	brpl	.-12     	; 0x75fc <_fpadd_parts+0x140>
    7608:	21 50       	subi	r18, 0x01	; 1
    760a:	30 40       	sbci	r19, 0x00	; 0
    760c:	40 40       	sbci	r20, 0x00	; 0
    760e:	50 40       	sbci	r21, 0x00	; 0
    7610:	2a 21       	and	r18, r10
    7612:	3b 21       	and	r19, r11
    7614:	4c 21       	and	r20, r12
    7616:	5d 21       	and	r21, r13
    7618:	21 15       	cp	r18, r1
    761a:	31 05       	cpc	r19, r1
    761c:	41 05       	cpc	r20, r1
    761e:	51 05       	cpc	r21, r1
    7620:	21 f0       	breq	.+8      	; 0x762a <_fpadd_parts+0x16e>
    7622:	21 e0       	ldi	r18, 0x01	; 1
    7624:	30 e0       	ldi	r19, 0x00	; 0
    7626:	40 e0       	ldi	r20, 0x00	; 0
    7628:	50 e0       	ldi	r21, 0x00	; 0
    762a:	59 01       	movw	r10, r18
    762c:	6a 01       	movw	r12, r20
    762e:	a6 28       	or	r10, r6
    7630:	b7 28       	or	r11, r7
    7632:	c8 28       	or	r12, r8
    7634:	d9 28       	or	r13, r9
    7636:	0b c0       	rjmp	.+22     	; 0x764e <_fpadd_parts+0x192>
    7638:	82 15       	cp	r24, r2
    763a:	93 05       	cpc	r25, r3
    763c:	2c f0       	brlt	.+10     	; 0x7648 <_fpadd_parts+0x18c>
    763e:	1c 01       	movw	r2, r24
    7640:	aa 24       	eor	r10, r10
    7642:	bb 24       	eor	r11, r11
    7644:	65 01       	movw	r12, r10
    7646:	03 c0       	rjmp	.+6      	; 0x764e <_fpadd_parts+0x192>
    7648:	ee 24       	eor	r14, r14
    764a:	ff 24       	eor	r15, r15
    764c:	87 01       	movw	r16, r14
    764e:	11 96       	adiw	r26, 0x01	; 1
    7650:	9c 91       	ld	r25, X
    7652:	d2 01       	movw	r26, r4
    7654:	11 96       	adiw	r26, 0x01	; 1
    7656:	8c 91       	ld	r24, X
    7658:	98 17       	cp	r25, r24
    765a:	09 f4       	brne	.+2      	; 0x765e <_fpadd_parts+0x1a2>
    765c:	45 c0       	rjmp	.+138    	; 0x76e8 <_fpadd_parts+0x22c>
    765e:	99 23       	and	r25, r25
    7660:	39 f0       	breq	.+14     	; 0x7670 <_fpadd_parts+0x1b4>
    7662:	a8 01       	movw	r20, r16
    7664:	97 01       	movw	r18, r14
    7666:	2a 19       	sub	r18, r10
    7668:	3b 09       	sbc	r19, r11
    766a:	4c 09       	sbc	r20, r12
    766c:	5d 09       	sbc	r21, r13
    766e:	06 c0       	rjmp	.+12     	; 0x767c <_fpadd_parts+0x1c0>
    7670:	a6 01       	movw	r20, r12
    7672:	95 01       	movw	r18, r10
    7674:	2e 19       	sub	r18, r14
    7676:	3f 09       	sbc	r19, r15
    7678:	40 0b       	sbc	r20, r16
    767a:	51 0b       	sbc	r21, r17
    767c:	57 fd       	sbrc	r21, 7
    767e:	08 c0       	rjmp	.+16     	; 0x7690 <_fpadd_parts+0x1d4>
    7680:	11 82       	std	Z+1, r1	; 0x01
    7682:	33 82       	std	Z+3, r3	; 0x03
    7684:	22 82       	std	Z+2, r2	; 0x02
    7686:	24 83       	std	Z+4, r18	; 0x04
    7688:	35 83       	std	Z+5, r19	; 0x05
    768a:	46 83       	std	Z+6, r20	; 0x06
    768c:	57 83       	std	Z+7, r21	; 0x07
    768e:	1d c0       	rjmp	.+58     	; 0x76ca <_fpadd_parts+0x20e>
    7690:	81 e0       	ldi	r24, 0x01	; 1
    7692:	81 83       	std	Z+1, r24	; 0x01
    7694:	33 82       	std	Z+3, r3	; 0x03
    7696:	22 82       	std	Z+2, r2	; 0x02
    7698:	88 27       	eor	r24, r24
    769a:	99 27       	eor	r25, r25
    769c:	dc 01       	movw	r26, r24
    769e:	82 1b       	sub	r24, r18
    76a0:	93 0b       	sbc	r25, r19
    76a2:	a4 0b       	sbc	r26, r20
    76a4:	b5 0b       	sbc	r27, r21
    76a6:	84 83       	std	Z+4, r24	; 0x04
    76a8:	95 83       	std	Z+5, r25	; 0x05
    76aa:	a6 83       	std	Z+6, r26	; 0x06
    76ac:	b7 83       	std	Z+7, r27	; 0x07
    76ae:	0d c0       	rjmp	.+26     	; 0x76ca <_fpadd_parts+0x20e>
    76b0:	22 0f       	add	r18, r18
    76b2:	33 1f       	adc	r19, r19
    76b4:	44 1f       	adc	r20, r20
    76b6:	55 1f       	adc	r21, r21
    76b8:	24 83       	std	Z+4, r18	; 0x04
    76ba:	35 83       	std	Z+5, r19	; 0x05
    76bc:	46 83       	std	Z+6, r20	; 0x06
    76be:	57 83       	std	Z+7, r21	; 0x07
    76c0:	82 81       	ldd	r24, Z+2	; 0x02
    76c2:	93 81       	ldd	r25, Z+3	; 0x03
    76c4:	01 97       	sbiw	r24, 0x01	; 1
    76c6:	93 83       	std	Z+3, r25	; 0x03
    76c8:	82 83       	std	Z+2, r24	; 0x02
    76ca:	24 81       	ldd	r18, Z+4	; 0x04
    76cc:	35 81       	ldd	r19, Z+5	; 0x05
    76ce:	46 81       	ldd	r20, Z+6	; 0x06
    76d0:	57 81       	ldd	r21, Z+7	; 0x07
    76d2:	da 01       	movw	r26, r20
    76d4:	c9 01       	movw	r24, r18
    76d6:	01 97       	sbiw	r24, 0x01	; 1
    76d8:	a1 09       	sbc	r26, r1
    76da:	b1 09       	sbc	r27, r1
    76dc:	8f 5f       	subi	r24, 0xFF	; 255
    76de:	9f 4f       	sbci	r25, 0xFF	; 255
    76e0:	af 4f       	sbci	r26, 0xFF	; 255
    76e2:	bf 43       	sbci	r27, 0x3F	; 63
    76e4:	28 f3       	brcs	.-54     	; 0x76b0 <_fpadd_parts+0x1f4>
    76e6:	0b c0       	rjmp	.+22     	; 0x76fe <_fpadd_parts+0x242>
    76e8:	91 83       	std	Z+1, r25	; 0x01
    76ea:	33 82       	std	Z+3, r3	; 0x03
    76ec:	22 82       	std	Z+2, r2	; 0x02
    76ee:	ea 0c       	add	r14, r10
    76f0:	fb 1c       	adc	r15, r11
    76f2:	0c 1d       	adc	r16, r12
    76f4:	1d 1d       	adc	r17, r13
    76f6:	e4 82       	std	Z+4, r14	; 0x04
    76f8:	f5 82       	std	Z+5, r15	; 0x05
    76fa:	06 83       	std	Z+6, r16	; 0x06
    76fc:	17 83       	std	Z+7, r17	; 0x07
    76fe:	83 e0       	ldi	r24, 0x03	; 3
    7700:	80 83       	st	Z, r24
    7702:	24 81       	ldd	r18, Z+4	; 0x04
    7704:	35 81       	ldd	r19, Z+5	; 0x05
    7706:	46 81       	ldd	r20, Z+6	; 0x06
    7708:	57 81       	ldd	r21, Z+7	; 0x07
    770a:	57 ff       	sbrs	r21, 7
    770c:	1a c0       	rjmp	.+52     	; 0x7742 <_fpadd_parts+0x286>
    770e:	c9 01       	movw	r24, r18
    7710:	aa 27       	eor	r26, r26
    7712:	97 fd       	sbrc	r25, 7
    7714:	a0 95       	com	r26
    7716:	ba 2f       	mov	r27, r26
    7718:	81 70       	andi	r24, 0x01	; 1
    771a:	90 70       	andi	r25, 0x00	; 0
    771c:	a0 70       	andi	r26, 0x00	; 0
    771e:	b0 70       	andi	r27, 0x00	; 0
    7720:	56 95       	lsr	r21
    7722:	47 95       	ror	r20
    7724:	37 95       	ror	r19
    7726:	27 95       	ror	r18
    7728:	82 2b       	or	r24, r18
    772a:	93 2b       	or	r25, r19
    772c:	a4 2b       	or	r26, r20
    772e:	b5 2b       	or	r27, r21
    7730:	84 83       	std	Z+4, r24	; 0x04
    7732:	95 83       	std	Z+5, r25	; 0x05
    7734:	a6 83       	std	Z+6, r26	; 0x06
    7736:	b7 83       	std	Z+7, r27	; 0x07
    7738:	82 81       	ldd	r24, Z+2	; 0x02
    773a:	93 81       	ldd	r25, Z+3	; 0x03
    773c:	01 96       	adiw	r24, 0x01	; 1
    773e:	93 83       	std	Z+3, r25	; 0x03
    7740:	82 83       	std	Z+2, r24	; 0x02
    7742:	df 01       	movw	r26, r30
    7744:	01 c0       	rjmp	.+2      	; 0x7748 <_fpadd_parts+0x28c>
    7746:	d2 01       	movw	r26, r4
    7748:	cd 01       	movw	r24, r26
    774a:	cd b7       	in	r28, 0x3d	; 61
    774c:	de b7       	in	r29, 0x3e	; 62
    774e:	e2 e1       	ldi	r30, 0x12	; 18
    7750:	0c 94 5d 41 	jmp	0x82ba	; 0x82ba <__epilogue_restores__>

00007754 <__subsf3>:
    7754:	a0 e2       	ldi	r26, 0x20	; 32
    7756:	b0 e0       	ldi	r27, 0x00	; 0
    7758:	e0 eb       	ldi	r30, 0xB0	; 176
    775a:	fb e3       	ldi	r31, 0x3B	; 59
    775c:	0c 94 4d 41 	jmp	0x829a	; 0x829a <__prologue_saves__+0x18>
    7760:	69 83       	std	Y+1, r22	; 0x01
    7762:	7a 83       	std	Y+2, r23	; 0x02
    7764:	8b 83       	std	Y+3, r24	; 0x03
    7766:	9c 83       	std	Y+4, r25	; 0x04
    7768:	2d 83       	std	Y+5, r18	; 0x05
    776a:	3e 83       	std	Y+6, r19	; 0x06
    776c:	4f 83       	std	Y+7, r20	; 0x07
    776e:	58 87       	std	Y+8, r21	; 0x08
    7770:	e9 e0       	ldi	r30, 0x09	; 9
    7772:	ee 2e       	mov	r14, r30
    7774:	f1 2c       	mov	r15, r1
    7776:	ec 0e       	add	r14, r28
    7778:	fd 1e       	adc	r15, r29
    777a:	ce 01       	movw	r24, r28
    777c:	01 96       	adiw	r24, 0x01	; 1
    777e:	b7 01       	movw	r22, r14
    7780:	0e 94 e1 3f 	call	0x7fc2	; 0x7fc2 <__unpack_f>
    7784:	8e 01       	movw	r16, r28
    7786:	0f 5e       	subi	r16, 0xEF	; 239
    7788:	1f 4f       	sbci	r17, 0xFF	; 255
    778a:	ce 01       	movw	r24, r28
    778c:	05 96       	adiw	r24, 0x05	; 5
    778e:	b8 01       	movw	r22, r16
    7790:	0e 94 e1 3f 	call	0x7fc2	; 0x7fc2 <__unpack_f>
    7794:	8a 89       	ldd	r24, Y+18	; 0x12
    7796:	91 e0       	ldi	r25, 0x01	; 1
    7798:	89 27       	eor	r24, r25
    779a:	8a 8b       	std	Y+18, r24	; 0x12
    779c:	c7 01       	movw	r24, r14
    779e:	b8 01       	movw	r22, r16
    77a0:	ae 01       	movw	r20, r28
    77a2:	47 5e       	subi	r20, 0xE7	; 231
    77a4:	5f 4f       	sbci	r21, 0xFF	; 255
    77a6:	0e 94 5e 3a 	call	0x74bc	; 0x74bc <_fpadd_parts>
    77aa:	0e 94 0c 3f 	call	0x7e18	; 0x7e18 <__pack_f>
    77ae:	a0 96       	adiw	r28, 0x20	; 32
    77b0:	e6 e0       	ldi	r30, 0x06	; 6
    77b2:	0c 94 69 41 	jmp	0x82d2	; 0x82d2 <__epilogue_restores__+0x18>

000077b6 <__addsf3>:
    77b6:	a0 e2       	ldi	r26, 0x20	; 32
    77b8:	b0 e0       	ldi	r27, 0x00	; 0
    77ba:	e1 ee       	ldi	r30, 0xE1	; 225
    77bc:	fb e3       	ldi	r31, 0x3B	; 59
    77be:	0c 94 4d 41 	jmp	0x829a	; 0x829a <__prologue_saves__+0x18>
    77c2:	69 83       	std	Y+1, r22	; 0x01
    77c4:	7a 83       	std	Y+2, r23	; 0x02
    77c6:	8b 83       	std	Y+3, r24	; 0x03
    77c8:	9c 83       	std	Y+4, r25	; 0x04
    77ca:	2d 83       	std	Y+5, r18	; 0x05
    77cc:	3e 83       	std	Y+6, r19	; 0x06
    77ce:	4f 83       	std	Y+7, r20	; 0x07
    77d0:	58 87       	std	Y+8, r21	; 0x08
    77d2:	f9 e0       	ldi	r31, 0x09	; 9
    77d4:	ef 2e       	mov	r14, r31
    77d6:	f1 2c       	mov	r15, r1
    77d8:	ec 0e       	add	r14, r28
    77da:	fd 1e       	adc	r15, r29
    77dc:	ce 01       	movw	r24, r28
    77de:	01 96       	adiw	r24, 0x01	; 1
    77e0:	b7 01       	movw	r22, r14
    77e2:	0e 94 e1 3f 	call	0x7fc2	; 0x7fc2 <__unpack_f>
    77e6:	8e 01       	movw	r16, r28
    77e8:	0f 5e       	subi	r16, 0xEF	; 239
    77ea:	1f 4f       	sbci	r17, 0xFF	; 255
    77ec:	ce 01       	movw	r24, r28
    77ee:	05 96       	adiw	r24, 0x05	; 5
    77f0:	b8 01       	movw	r22, r16
    77f2:	0e 94 e1 3f 	call	0x7fc2	; 0x7fc2 <__unpack_f>
    77f6:	c7 01       	movw	r24, r14
    77f8:	b8 01       	movw	r22, r16
    77fa:	ae 01       	movw	r20, r28
    77fc:	47 5e       	subi	r20, 0xE7	; 231
    77fe:	5f 4f       	sbci	r21, 0xFF	; 255
    7800:	0e 94 5e 3a 	call	0x74bc	; 0x74bc <_fpadd_parts>
    7804:	0e 94 0c 3f 	call	0x7e18	; 0x7e18 <__pack_f>
    7808:	a0 96       	adiw	r28, 0x20	; 32
    780a:	e6 e0       	ldi	r30, 0x06	; 6
    780c:	0c 94 69 41 	jmp	0x82d2	; 0x82d2 <__epilogue_restores__+0x18>

00007810 <__mulsf3>:
    7810:	a0 e2       	ldi	r26, 0x20	; 32
    7812:	b0 e0       	ldi	r27, 0x00	; 0
    7814:	ee e0       	ldi	r30, 0x0E	; 14
    7816:	fc e3       	ldi	r31, 0x3C	; 60
    7818:	0c 94 41 41 	jmp	0x8282	; 0x8282 <__prologue_saves__>
    781c:	69 83       	std	Y+1, r22	; 0x01
    781e:	7a 83       	std	Y+2, r23	; 0x02
    7820:	8b 83       	std	Y+3, r24	; 0x03
    7822:	9c 83       	std	Y+4, r25	; 0x04
    7824:	2d 83       	std	Y+5, r18	; 0x05
    7826:	3e 83       	std	Y+6, r19	; 0x06
    7828:	4f 83       	std	Y+7, r20	; 0x07
    782a:	58 87       	std	Y+8, r21	; 0x08
    782c:	ce 01       	movw	r24, r28
    782e:	01 96       	adiw	r24, 0x01	; 1
    7830:	be 01       	movw	r22, r28
    7832:	67 5f       	subi	r22, 0xF7	; 247
    7834:	7f 4f       	sbci	r23, 0xFF	; 255
    7836:	0e 94 e1 3f 	call	0x7fc2	; 0x7fc2 <__unpack_f>
    783a:	ce 01       	movw	r24, r28
    783c:	05 96       	adiw	r24, 0x05	; 5
    783e:	be 01       	movw	r22, r28
    7840:	6f 5e       	subi	r22, 0xEF	; 239
    7842:	7f 4f       	sbci	r23, 0xFF	; 255
    7844:	0e 94 e1 3f 	call	0x7fc2	; 0x7fc2 <__unpack_f>
    7848:	99 85       	ldd	r25, Y+9	; 0x09
    784a:	92 30       	cpi	r25, 0x02	; 2
    784c:	88 f0       	brcs	.+34     	; 0x7870 <__mulsf3+0x60>
    784e:	89 89       	ldd	r24, Y+17	; 0x11
    7850:	82 30       	cpi	r24, 0x02	; 2
    7852:	c8 f0       	brcs	.+50     	; 0x7886 <__mulsf3+0x76>
    7854:	94 30       	cpi	r25, 0x04	; 4
    7856:	19 f4       	brne	.+6      	; 0x785e <__mulsf3+0x4e>
    7858:	82 30       	cpi	r24, 0x02	; 2
    785a:	51 f4       	brne	.+20     	; 0x7870 <__mulsf3+0x60>
    785c:	04 c0       	rjmp	.+8      	; 0x7866 <__mulsf3+0x56>
    785e:	84 30       	cpi	r24, 0x04	; 4
    7860:	29 f4       	brne	.+10     	; 0x786c <__mulsf3+0x5c>
    7862:	92 30       	cpi	r25, 0x02	; 2
    7864:	81 f4       	brne	.+32     	; 0x7886 <__mulsf3+0x76>
    7866:	87 ef       	ldi	r24, 0xF7	; 247
    7868:	93 e0       	ldi	r25, 0x03	; 3
    786a:	c6 c0       	rjmp	.+396    	; 0x79f8 <__mulsf3+0x1e8>
    786c:	92 30       	cpi	r25, 0x02	; 2
    786e:	49 f4       	brne	.+18     	; 0x7882 <__mulsf3+0x72>
    7870:	20 e0       	ldi	r18, 0x00	; 0
    7872:	9a 85       	ldd	r25, Y+10	; 0x0a
    7874:	8a 89       	ldd	r24, Y+18	; 0x12
    7876:	98 13       	cpse	r25, r24
    7878:	21 e0       	ldi	r18, 0x01	; 1
    787a:	2a 87       	std	Y+10, r18	; 0x0a
    787c:	ce 01       	movw	r24, r28
    787e:	09 96       	adiw	r24, 0x09	; 9
    7880:	bb c0       	rjmp	.+374    	; 0x79f8 <__mulsf3+0x1e8>
    7882:	82 30       	cpi	r24, 0x02	; 2
    7884:	49 f4       	brne	.+18     	; 0x7898 <__mulsf3+0x88>
    7886:	20 e0       	ldi	r18, 0x00	; 0
    7888:	9a 85       	ldd	r25, Y+10	; 0x0a
    788a:	8a 89       	ldd	r24, Y+18	; 0x12
    788c:	98 13       	cpse	r25, r24
    788e:	21 e0       	ldi	r18, 0x01	; 1
    7890:	2a 8b       	std	Y+18, r18	; 0x12
    7892:	ce 01       	movw	r24, r28
    7894:	41 96       	adiw	r24, 0x11	; 17
    7896:	b0 c0       	rjmp	.+352    	; 0x79f8 <__mulsf3+0x1e8>
    7898:	2d 84       	ldd	r2, Y+13	; 0x0d
    789a:	3e 84       	ldd	r3, Y+14	; 0x0e
    789c:	4f 84       	ldd	r4, Y+15	; 0x0f
    789e:	58 88       	ldd	r5, Y+16	; 0x10
    78a0:	6d 88       	ldd	r6, Y+21	; 0x15
    78a2:	7e 88       	ldd	r7, Y+22	; 0x16
    78a4:	8f 88       	ldd	r8, Y+23	; 0x17
    78a6:	98 8c       	ldd	r9, Y+24	; 0x18
    78a8:	ee 24       	eor	r14, r14
    78aa:	ff 24       	eor	r15, r15
    78ac:	87 01       	movw	r16, r14
    78ae:	aa 24       	eor	r10, r10
    78b0:	bb 24       	eor	r11, r11
    78b2:	65 01       	movw	r12, r10
    78b4:	40 e0       	ldi	r20, 0x00	; 0
    78b6:	50 e0       	ldi	r21, 0x00	; 0
    78b8:	60 e0       	ldi	r22, 0x00	; 0
    78ba:	70 e0       	ldi	r23, 0x00	; 0
    78bc:	e0 e0       	ldi	r30, 0x00	; 0
    78be:	f0 e0       	ldi	r31, 0x00	; 0
    78c0:	c1 01       	movw	r24, r2
    78c2:	81 70       	andi	r24, 0x01	; 1
    78c4:	90 70       	andi	r25, 0x00	; 0
    78c6:	89 2b       	or	r24, r25
    78c8:	e9 f0       	breq	.+58     	; 0x7904 <__mulsf3+0xf4>
    78ca:	e6 0c       	add	r14, r6
    78cc:	f7 1c       	adc	r15, r7
    78ce:	08 1d       	adc	r16, r8
    78d0:	19 1d       	adc	r17, r9
    78d2:	9a 01       	movw	r18, r20
    78d4:	ab 01       	movw	r20, r22
    78d6:	2a 0d       	add	r18, r10
    78d8:	3b 1d       	adc	r19, r11
    78da:	4c 1d       	adc	r20, r12
    78dc:	5d 1d       	adc	r21, r13
    78de:	80 e0       	ldi	r24, 0x00	; 0
    78e0:	90 e0       	ldi	r25, 0x00	; 0
    78e2:	a0 e0       	ldi	r26, 0x00	; 0
    78e4:	b0 e0       	ldi	r27, 0x00	; 0
    78e6:	e6 14       	cp	r14, r6
    78e8:	f7 04       	cpc	r15, r7
    78ea:	08 05       	cpc	r16, r8
    78ec:	19 05       	cpc	r17, r9
    78ee:	20 f4       	brcc	.+8      	; 0x78f8 <__mulsf3+0xe8>
    78f0:	81 e0       	ldi	r24, 0x01	; 1
    78f2:	90 e0       	ldi	r25, 0x00	; 0
    78f4:	a0 e0       	ldi	r26, 0x00	; 0
    78f6:	b0 e0       	ldi	r27, 0x00	; 0
    78f8:	ba 01       	movw	r22, r20
    78fa:	a9 01       	movw	r20, r18
    78fc:	48 0f       	add	r20, r24
    78fe:	59 1f       	adc	r21, r25
    7900:	6a 1f       	adc	r22, r26
    7902:	7b 1f       	adc	r23, r27
    7904:	aa 0c       	add	r10, r10
    7906:	bb 1c       	adc	r11, r11
    7908:	cc 1c       	adc	r12, r12
    790a:	dd 1c       	adc	r13, r13
    790c:	97 fe       	sbrs	r9, 7
    790e:	08 c0       	rjmp	.+16     	; 0x7920 <__mulsf3+0x110>
    7910:	81 e0       	ldi	r24, 0x01	; 1
    7912:	90 e0       	ldi	r25, 0x00	; 0
    7914:	a0 e0       	ldi	r26, 0x00	; 0
    7916:	b0 e0       	ldi	r27, 0x00	; 0
    7918:	a8 2a       	or	r10, r24
    791a:	b9 2a       	or	r11, r25
    791c:	ca 2a       	or	r12, r26
    791e:	db 2a       	or	r13, r27
    7920:	31 96       	adiw	r30, 0x01	; 1
    7922:	e0 32       	cpi	r30, 0x20	; 32
    7924:	f1 05       	cpc	r31, r1
    7926:	49 f0       	breq	.+18     	; 0x793a <__mulsf3+0x12a>
    7928:	66 0c       	add	r6, r6
    792a:	77 1c       	adc	r7, r7
    792c:	88 1c       	adc	r8, r8
    792e:	99 1c       	adc	r9, r9
    7930:	56 94       	lsr	r5
    7932:	47 94       	ror	r4
    7934:	37 94       	ror	r3
    7936:	27 94       	ror	r2
    7938:	c3 cf       	rjmp	.-122    	; 0x78c0 <__mulsf3+0xb0>
    793a:	fa 85       	ldd	r31, Y+10	; 0x0a
    793c:	ea 89       	ldd	r30, Y+18	; 0x12
    793e:	2b 89       	ldd	r18, Y+19	; 0x13
    7940:	3c 89       	ldd	r19, Y+20	; 0x14
    7942:	8b 85       	ldd	r24, Y+11	; 0x0b
    7944:	9c 85       	ldd	r25, Y+12	; 0x0c
    7946:	28 0f       	add	r18, r24
    7948:	39 1f       	adc	r19, r25
    794a:	2e 5f       	subi	r18, 0xFE	; 254
    794c:	3f 4f       	sbci	r19, 0xFF	; 255
    794e:	17 c0       	rjmp	.+46     	; 0x797e <__mulsf3+0x16e>
    7950:	ca 01       	movw	r24, r20
    7952:	81 70       	andi	r24, 0x01	; 1
    7954:	90 70       	andi	r25, 0x00	; 0
    7956:	89 2b       	or	r24, r25
    7958:	61 f0       	breq	.+24     	; 0x7972 <__mulsf3+0x162>
    795a:	16 95       	lsr	r17
    795c:	07 95       	ror	r16
    795e:	f7 94       	ror	r15
    7960:	e7 94       	ror	r14
    7962:	80 e0       	ldi	r24, 0x00	; 0
    7964:	90 e0       	ldi	r25, 0x00	; 0
    7966:	a0 e0       	ldi	r26, 0x00	; 0
    7968:	b0 e8       	ldi	r27, 0x80	; 128
    796a:	e8 2a       	or	r14, r24
    796c:	f9 2a       	or	r15, r25
    796e:	0a 2b       	or	r16, r26
    7970:	1b 2b       	or	r17, r27
    7972:	76 95       	lsr	r23
    7974:	67 95       	ror	r22
    7976:	57 95       	ror	r21
    7978:	47 95       	ror	r20
    797a:	2f 5f       	subi	r18, 0xFF	; 255
    797c:	3f 4f       	sbci	r19, 0xFF	; 255
    797e:	77 fd       	sbrc	r23, 7
    7980:	e7 cf       	rjmp	.-50     	; 0x7950 <__mulsf3+0x140>
    7982:	0c c0       	rjmp	.+24     	; 0x799c <__mulsf3+0x18c>
    7984:	44 0f       	add	r20, r20
    7986:	55 1f       	adc	r21, r21
    7988:	66 1f       	adc	r22, r22
    798a:	77 1f       	adc	r23, r23
    798c:	17 fd       	sbrc	r17, 7
    798e:	41 60       	ori	r20, 0x01	; 1
    7990:	ee 0c       	add	r14, r14
    7992:	ff 1c       	adc	r15, r15
    7994:	00 1f       	adc	r16, r16
    7996:	11 1f       	adc	r17, r17
    7998:	21 50       	subi	r18, 0x01	; 1
    799a:	30 40       	sbci	r19, 0x00	; 0
    799c:	40 30       	cpi	r20, 0x00	; 0
    799e:	90 e0       	ldi	r25, 0x00	; 0
    79a0:	59 07       	cpc	r21, r25
    79a2:	90 e0       	ldi	r25, 0x00	; 0
    79a4:	69 07       	cpc	r22, r25
    79a6:	90 e4       	ldi	r25, 0x40	; 64
    79a8:	79 07       	cpc	r23, r25
    79aa:	60 f3       	brcs	.-40     	; 0x7984 <__mulsf3+0x174>
    79ac:	2b 8f       	std	Y+27, r18	; 0x1b
    79ae:	3c 8f       	std	Y+28, r19	; 0x1c
    79b0:	db 01       	movw	r26, r22
    79b2:	ca 01       	movw	r24, r20
    79b4:	8f 77       	andi	r24, 0x7F	; 127
    79b6:	90 70       	andi	r25, 0x00	; 0
    79b8:	a0 70       	andi	r26, 0x00	; 0
    79ba:	b0 70       	andi	r27, 0x00	; 0
    79bc:	80 34       	cpi	r24, 0x40	; 64
    79be:	91 05       	cpc	r25, r1
    79c0:	a1 05       	cpc	r26, r1
    79c2:	b1 05       	cpc	r27, r1
    79c4:	61 f4       	brne	.+24     	; 0x79de <__mulsf3+0x1ce>
    79c6:	47 fd       	sbrc	r20, 7
    79c8:	0a c0       	rjmp	.+20     	; 0x79de <__mulsf3+0x1ce>
    79ca:	e1 14       	cp	r14, r1
    79cc:	f1 04       	cpc	r15, r1
    79ce:	01 05       	cpc	r16, r1
    79d0:	11 05       	cpc	r17, r1
    79d2:	29 f0       	breq	.+10     	; 0x79de <__mulsf3+0x1ce>
    79d4:	40 5c       	subi	r20, 0xC0	; 192
    79d6:	5f 4f       	sbci	r21, 0xFF	; 255
    79d8:	6f 4f       	sbci	r22, 0xFF	; 255
    79da:	7f 4f       	sbci	r23, 0xFF	; 255
    79dc:	40 78       	andi	r20, 0x80	; 128
    79de:	1a 8e       	std	Y+26, r1	; 0x1a
    79e0:	fe 17       	cp	r31, r30
    79e2:	11 f0       	breq	.+4      	; 0x79e8 <__mulsf3+0x1d8>
    79e4:	81 e0       	ldi	r24, 0x01	; 1
    79e6:	8a 8f       	std	Y+26, r24	; 0x1a
    79e8:	4d 8f       	std	Y+29, r20	; 0x1d
    79ea:	5e 8f       	std	Y+30, r21	; 0x1e
    79ec:	6f 8f       	std	Y+31, r22	; 0x1f
    79ee:	78 a3       	std	Y+32, r23	; 0x20
    79f0:	83 e0       	ldi	r24, 0x03	; 3
    79f2:	89 8f       	std	Y+25, r24	; 0x19
    79f4:	ce 01       	movw	r24, r28
    79f6:	49 96       	adiw	r24, 0x19	; 25
    79f8:	0e 94 0c 3f 	call	0x7e18	; 0x7e18 <__pack_f>
    79fc:	a0 96       	adiw	r28, 0x20	; 32
    79fe:	e2 e1       	ldi	r30, 0x12	; 18
    7a00:	0c 94 5d 41 	jmp	0x82ba	; 0x82ba <__epilogue_restores__>

00007a04 <__gtsf2>:
    7a04:	a8 e1       	ldi	r26, 0x18	; 24
    7a06:	b0 e0       	ldi	r27, 0x00	; 0
    7a08:	e8 e0       	ldi	r30, 0x08	; 8
    7a0a:	fd e3       	ldi	r31, 0x3D	; 61
    7a0c:	0c 94 4d 41 	jmp	0x829a	; 0x829a <__prologue_saves__+0x18>
    7a10:	69 83       	std	Y+1, r22	; 0x01
    7a12:	7a 83       	std	Y+2, r23	; 0x02
    7a14:	8b 83       	std	Y+3, r24	; 0x03
    7a16:	9c 83       	std	Y+4, r25	; 0x04
    7a18:	2d 83       	std	Y+5, r18	; 0x05
    7a1a:	3e 83       	std	Y+6, r19	; 0x06
    7a1c:	4f 83       	std	Y+7, r20	; 0x07
    7a1e:	58 87       	std	Y+8, r21	; 0x08
    7a20:	89 e0       	ldi	r24, 0x09	; 9
    7a22:	e8 2e       	mov	r14, r24
    7a24:	f1 2c       	mov	r15, r1
    7a26:	ec 0e       	add	r14, r28
    7a28:	fd 1e       	adc	r15, r29
    7a2a:	ce 01       	movw	r24, r28
    7a2c:	01 96       	adiw	r24, 0x01	; 1
    7a2e:	b7 01       	movw	r22, r14
    7a30:	0e 94 e1 3f 	call	0x7fc2	; 0x7fc2 <__unpack_f>
    7a34:	8e 01       	movw	r16, r28
    7a36:	0f 5e       	subi	r16, 0xEF	; 239
    7a38:	1f 4f       	sbci	r17, 0xFF	; 255
    7a3a:	ce 01       	movw	r24, r28
    7a3c:	05 96       	adiw	r24, 0x05	; 5
    7a3e:	b8 01       	movw	r22, r16
    7a40:	0e 94 e1 3f 	call	0x7fc2	; 0x7fc2 <__unpack_f>
    7a44:	89 85       	ldd	r24, Y+9	; 0x09
    7a46:	82 30       	cpi	r24, 0x02	; 2
    7a48:	40 f0       	brcs	.+16     	; 0x7a5a <__gtsf2+0x56>
    7a4a:	89 89       	ldd	r24, Y+17	; 0x11
    7a4c:	82 30       	cpi	r24, 0x02	; 2
    7a4e:	28 f0       	brcs	.+10     	; 0x7a5a <__gtsf2+0x56>
    7a50:	c7 01       	movw	r24, r14
    7a52:	b8 01       	movw	r22, r16
    7a54:	0e 94 59 40 	call	0x80b2	; 0x80b2 <__fpcmp_parts_f>
    7a58:	01 c0       	rjmp	.+2      	; 0x7a5c <__gtsf2+0x58>
    7a5a:	8f ef       	ldi	r24, 0xFF	; 255
    7a5c:	68 96       	adiw	r28, 0x18	; 24
    7a5e:	e6 e0       	ldi	r30, 0x06	; 6
    7a60:	0c 94 69 41 	jmp	0x82d2	; 0x82d2 <__epilogue_restores__+0x18>

00007a64 <__gesf2>:
    7a64:	a8 e1       	ldi	r26, 0x18	; 24
    7a66:	b0 e0       	ldi	r27, 0x00	; 0
    7a68:	e8 e3       	ldi	r30, 0x38	; 56
    7a6a:	fd e3       	ldi	r31, 0x3D	; 61
    7a6c:	0c 94 4d 41 	jmp	0x829a	; 0x829a <__prologue_saves__+0x18>
    7a70:	69 83       	std	Y+1, r22	; 0x01
    7a72:	7a 83       	std	Y+2, r23	; 0x02
    7a74:	8b 83       	std	Y+3, r24	; 0x03
    7a76:	9c 83       	std	Y+4, r25	; 0x04
    7a78:	2d 83       	std	Y+5, r18	; 0x05
    7a7a:	3e 83       	std	Y+6, r19	; 0x06
    7a7c:	4f 83       	std	Y+7, r20	; 0x07
    7a7e:	58 87       	std	Y+8, r21	; 0x08
    7a80:	89 e0       	ldi	r24, 0x09	; 9
    7a82:	e8 2e       	mov	r14, r24
    7a84:	f1 2c       	mov	r15, r1
    7a86:	ec 0e       	add	r14, r28
    7a88:	fd 1e       	adc	r15, r29
    7a8a:	ce 01       	movw	r24, r28
    7a8c:	01 96       	adiw	r24, 0x01	; 1
    7a8e:	b7 01       	movw	r22, r14
    7a90:	0e 94 e1 3f 	call	0x7fc2	; 0x7fc2 <__unpack_f>
    7a94:	8e 01       	movw	r16, r28
    7a96:	0f 5e       	subi	r16, 0xEF	; 239
    7a98:	1f 4f       	sbci	r17, 0xFF	; 255
    7a9a:	ce 01       	movw	r24, r28
    7a9c:	05 96       	adiw	r24, 0x05	; 5
    7a9e:	b8 01       	movw	r22, r16
    7aa0:	0e 94 e1 3f 	call	0x7fc2	; 0x7fc2 <__unpack_f>
    7aa4:	89 85       	ldd	r24, Y+9	; 0x09
    7aa6:	82 30       	cpi	r24, 0x02	; 2
    7aa8:	40 f0       	brcs	.+16     	; 0x7aba <__gesf2+0x56>
    7aaa:	89 89       	ldd	r24, Y+17	; 0x11
    7aac:	82 30       	cpi	r24, 0x02	; 2
    7aae:	28 f0       	brcs	.+10     	; 0x7aba <__gesf2+0x56>
    7ab0:	c7 01       	movw	r24, r14
    7ab2:	b8 01       	movw	r22, r16
    7ab4:	0e 94 59 40 	call	0x80b2	; 0x80b2 <__fpcmp_parts_f>
    7ab8:	01 c0       	rjmp	.+2      	; 0x7abc <__gesf2+0x58>
    7aba:	8f ef       	ldi	r24, 0xFF	; 255
    7abc:	68 96       	adiw	r28, 0x18	; 24
    7abe:	e6 e0       	ldi	r30, 0x06	; 6
    7ac0:	0c 94 69 41 	jmp	0x82d2	; 0x82d2 <__epilogue_restores__+0x18>

00007ac4 <__ltsf2>:
    7ac4:	a8 e1       	ldi	r26, 0x18	; 24
    7ac6:	b0 e0       	ldi	r27, 0x00	; 0
    7ac8:	e8 e6       	ldi	r30, 0x68	; 104
    7aca:	fd e3       	ldi	r31, 0x3D	; 61
    7acc:	0c 94 4d 41 	jmp	0x829a	; 0x829a <__prologue_saves__+0x18>
    7ad0:	69 83       	std	Y+1, r22	; 0x01
    7ad2:	7a 83       	std	Y+2, r23	; 0x02
    7ad4:	8b 83       	std	Y+3, r24	; 0x03
    7ad6:	9c 83       	std	Y+4, r25	; 0x04
    7ad8:	2d 83       	std	Y+5, r18	; 0x05
    7ada:	3e 83       	std	Y+6, r19	; 0x06
    7adc:	4f 83       	std	Y+7, r20	; 0x07
    7ade:	58 87       	std	Y+8, r21	; 0x08
    7ae0:	89 e0       	ldi	r24, 0x09	; 9
    7ae2:	e8 2e       	mov	r14, r24
    7ae4:	f1 2c       	mov	r15, r1
    7ae6:	ec 0e       	add	r14, r28
    7ae8:	fd 1e       	adc	r15, r29
    7aea:	ce 01       	movw	r24, r28
    7aec:	01 96       	adiw	r24, 0x01	; 1
    7aee:	b7 01       	movw	r22, r14
    7af0:	0e 94 e1 3f 	call	0x7fc2	; 0x7fc2 <__unpack_f>
    7af4:	8e 01       	movw	r16, r28
    7af6:	0f 5e       	subi	r16, 0xEF	; 239
    7af8:	1f 4f       	sbci	r17, 0xFF	; 255
    7afa:	ce 01       	movw	r24, r28
    7afc:	05 96       	adiw	r24, 0x05	; 5
    7afe:	b8 01       	movw	r22, r16
    7b00:	0e 94 e1 3f 	call	0x7fc2	; 0x7fc2 <__unpack_f>
    7b04:	89 85       	ldd	r24, Y+9	; 0x09
    7b06:	82 30       	cpi	r24, 0x02	; 2
    7b08:	40 f0       	brcs	.+16     	; 0x7b1a <__ltsf2+0x56>
    7b0a:	89 89       	ldd	r24, Y+17	; 0x11
    7b0c:	82 30       	cpi	r24, 0x02	; 2
    7b0e:	28 f0       	brcs	.+10     	; 0x7b1a <__ltsf2+0x56>
    7b10:	c7 01       	movw	r24, r14
    7b12:	b8 01       	movw	r22, r16
    7b14:	0e 94 59 40 	call	0x80b2	; 0x80b2 <__fpcmp_parts_f>
    7b18:	01 c0       	rjmp	.+2      	; 0x7b1c <__ltsf2+0x58>
    7b1a:	81 e0       	ldi	r24, 0x01	; 1
    7b1c:	68 96       	adiw	r28, 0x18	; 24
    7b1e:	e6 e0       	ldi	r30, 0x06	; 6
    7b20:	0c 94 69 41 	jmp	0x82d2	; 0x82d2 <__epilogue_restores__+0x18>

00007b24 <__floatsisf>:
    7b24:	a8 e0       	ldi	r26, 0x08	; 8
    7b26:	b0 e0       	ldi	r27, 0x00	; 0
    7b28:	e8 e9       	ldi	r30, 0x98	; 152
    7b2a:	fd e3       	ldi	r31, 0x3D	; 61
    7b2c:	0c 94 4a 41 	jmp	0x8294	; 0x8294 <__prologue_saves__+0x12>
    7b30:	9b 01       	movw	r18, r22
    7b32:	ac 01       	movw	r20, r24
    7b34:	83 e0       	ldi	r24, 0x03	; 3
    7b36:	89 83       	std	Y+1, r24	; 0x01
    7b38:	da 01       	movw	r26, r20
    7b3a:	c9 01       	movw	r24, r18
    7b3c:	88 27       	eor	r24, r24
    7b3e:	b7 fd       	sbrc	r27, 7
    7b40:	83 95       	inc	r24
    7b42:	99 27       	eor	r25, r25
    7b44:	aa 27       	eor	r26, r26
    7b46:	bb 27       	eor	r27, r27
    7b48:	b8 2e       	mov	r11, r24
    7b4a:	21 15       	cp	r18, r1
    7b4c:	31 05       	cpc	r19, r1
    7b4e:	41 05       	cpc	r20, r1
    7b50:	51 05       	cpc	r21, r1
    7b52:	19 f4       	brne	.+6      	; 0x7b5a <__floatsisf+0x36>
    7b54:	82 e0       	ldi	r24, 0x02	; 2
    7b56:	89 83       	std	Y+1, r24	; 0x01
    7b58:	3a c0       	rjmp	.+116    	; 0x7bce <__floatsisf+0xaa>
    7b5a:	88 23       	and	r24, r24
    7b5c:	a9 f0       	breq	.+42     	; 0x7b88 <__floatsisf+0x64>
    7b5e:	20 30       	cpi	r18, 0x00	; 0
    7b60:	80 e0       	ldi	r24, 0x00	; 0
    7b62:	38 07       	cpc	r19, r24
    7b64:	80 e0       	ldi	r24, 0x00	; 0
    7b66:	48 07       	cpc	r20, r24
    7b68:	80 e8       	ldi	r24, 0x80	; 128
    7b6a:	58 07       	cpc	r21, r24
    7b6c:	29 f4       	brne	.+10     	; 0x7b78 <__floatsisf+0x54>
    7b6e:	60 e0       	ldi	r22, 0x00	; 0
    7b70:	70 e0       	ldi	r23, 0x00	; 0
    7b72:	80 e0       	ldi	r24, 0x00	; 0
    7b74:	9f ec       	ldi	r25, 0xCF	; 207
    7b76:	30 c0       	rjmp	.+96     	; 0x7bd8 <__floatsisf+0xb4>
    7b78:	ee 24       	eor	r14, r14
    7b7a:	ff 24       	eor	r15, r15
    7b7c:	87 01       	movw	r16, r14
    7b7e:	e2 1a       	sub	r14, r18
    7b80:	f3 0a       	sbc	r15, r19
    7b82:	04 0b       	sbc	r16, r20
    7b84:	15 0b       	sbc	r17, r21
    7b86:	02 c0       	rjmp	.+4      	; 0x7b8c <__floatsisf+0x68>
    7b88:	79 01       	movw	r14, r18
    7b8a:	8a 01       	movw	r16, r20
    7b8c:	8e e1       	ldi	r24, 0x1E	; 30
    7b8e:	c8 2e       	mov	r12, r24
    7b90:	d1 2c       	mov	r13, r1
    7b92:	dc 82       	std	Y+4, r13	; 0x04
    7b94:	cb 82       	std	Y+3, r12	; 0x03
    7b96:	ed 82       	std	Y+5, r14	; 0x05
    7b98:	fe 82       	std	Y+6, r15	; 0x06
    7b9a:	0f 83       	std	Y+7, r16	; 0x07
    7b9c:	18 87       	std	Y+8, r17	; 0x08
    7b9e:	c8 01       	movw	r24, r16
    7ba0:	b7 01       	movw	r22, r14
    7ba2:	0e 94 bd 3e 	call	0x7d7a	; 0x7d7a <__clzsi2>
    7ba6:	01 97       	sbiw	r24, 0x01	; 1
    7ba8:	18 16       	cp	r1, r24
    7baa:	19 06       	cpc	r1, r25
    7bac:	84 f4       	brge	.+32     	; 0x7bce <__floatsisf+0xaa>
    7bae:	08 2e       	mov	r0, r24
    7bb0:	04 c0       	rjmp	.+8      	; 0x7bba <__floatsisf+0x96>
    7bb2:	ee 0c       	add	r14, r14
    7bb4:	ff 1c       	adc	r15, r15
    7bb6:	00 1f       	adc	r16, r16
    7bb8:	11 1f       	adc	r17, r17
    7bba:	0a 94       	dec	r0
    7bbc:	d2 f7       	brpl	.-12     	; 0x7bb2 <__floatsisf+0x8e>
    7bbe:	ed 82       	std	Y+5, r14	; 0x05
    7bc0:	fe 82       	std	Y+6, r15	; 0x06
    7bc2:	0f 83       	std	Y+7, r16	; 0x07
    7bc4:	18 87       	std	Y+8, r17	; 0x08
    7bc6:	c8 1a       	sub	r12, r24
    7bc8:	d9 0a       	sbc	r13, r25
    7bca:	dc 82       	std	Y+4, r13	; 0x04
    7bcc:	cb 82       	std	Y+3, r12	; 0x03
    7bce:	ba 82       	std	Y+2, r11	; 0x02
    7bd0:	ce 01       	movw	r24, r28
    7bd2:	01 96       	adiw	r24, 0x01	; 1
    7bd4:	0e 94 0c 3f 	call	0x7e18	; 0x7e18 <__pack_f>
    7bd8:	28 96       	adiw	r28, 0x08	; 8
    7bda:	e9 e0       	ldi	r30, 0x09	; 9
    7bdc:	0c 94 66 41 	jmp	0x82cc	; 0x82cc <__epilogue_restores__+0x12>

00007be0 <__fixsfsi>:
    7be0:	ac e0       	ldi	r26, 0x0C	; 12
    7be2:	b0 e0       	ldi	r27, 0x00	; 0
    7be4:	e6 ef       	ldi	r30, 0xF6	; 246
    7be6:	fd e3       	ldi	r31, 0x3D	; 61
    7be8:	0c 94 51 41 	jmp	0x82a2	; 0x82a2 <__prologue_saves__+0x20>
    7bec:	69 83       	std	Y+1, r22	; 0x01
    7bee:	7a 83       	std	Y+2, r23	; 0x02
    7bf0:	8b 83       	std	Y+3, r24	; 0x03
    7bf2:	9c 83       	std	Y+4, r25	; 0x04
    7bf4:	ce 01       	movw	r24, r28
    7bf6:	01 96       	adiw	r24, 0x01	; 1
    7bf8:	be 01       	movw	r22, r28
    7bfa:	6b 5f       	subi	r22, 0xFB	; 251
    7bfc:	7f 4f       	sbci	r23, 0xFF	; 255
    7bfe:	0e 94 e1 3f 	call	0x7fc2	; 0x7fc2 <__unpack_f>
    7c02:	8d 81       	ldd	r24, Y+5	; 0x05
    7c04:	82 30       	cpi	r24, 0x02	; 2
    7c06:	61 f1       	breq	.+88     	; 0x7c60 <__fixsfsi+0x80>
    7c08:	82 30       	cpi	r24, 0x02	; 2
    7c0a:	50 f1       	brcs	.+84     	; 0x7c60 <__fixsfsi+0x80>
    7c0c:	84 30       	cpi	r24, 0x04	; 4
    7c0e:	21 f4       	brne	.+8      	; 0x7c18 <__fixsfsi+0x38>
    7c10:	8e 81       	ldd	r24, Y+6	; 0x06
    7c12:	88 23       	and	r24, r24
    7c14:	51 f1       	breq	.+84     	; 0x7c6a <__fixsfsi+0x8a>
    7c16:	2e c0       	rjmp	.+92     	; 0x7c74 <__fixsfsi+0x94>
    7c18:	2f 81       	ldd	r18, Y+7	; 0x07
    7c1a:	38 85       	ldd	r19, Y+8	; 0x08
    7c1c:	37 fd       	sbrc	r19, 7
    7c1e:	20 c0       	rjmp	.+64     	; 0x7c60 <__fixsfsi+0x80>
    7c20:	6e 81       	ldd	r22, Y+6	; 0x06
    7c22:	2f 31       	cpi	r18, 0x1F	; 31
    7c24:	31 05       	cpc	r19, r1
    7c26:	1c f0       	brlt	.+6      	; 0x7c2e <__fixsfsi+0x4e>
    7c28:	66 23       	and	r22, r22
    7c2a:	f9 f0       	breq	.+62     	; 0x7c6a <__fixsfsi+0x8a>
    7c2c:	23 c0       	rjmp	.+70     	; 0x7c74 <__fixsfsi+0x94>
    7c2e:	8e e1       	ldi	r24, 0x1E	; 30
    7c30:	90 e0       	ldi	r25, 0x00	; 0
    7c32:	82 1b       	sub	r24, r18
    7c34:	93 0b       	sbc	r25, r19
    7c36:	29 85       	ldd	r18, Y+9	; 0x09
    7c38:	3a 85       	ldd	r19, Y+10	; 0x0a
    7c3a:	4b 85       	ldd	r20, Y+11	; 0x0b
    7c3c:	5c 85       	ldd	r21, Y+12	; 0x0c
    7c3e:	04 c0       	rjmp	.+8      	; 0x7c48 <__fixsfsi+0x68>
    7c40:	56 95       	lsr	r21
    7c42:	47 95       	ror	r20
    7c44:	37 95       	ror	r19
    7c46:	27 95       	ror	r18
    7c48:	8a 95       	dec	r24
    7c4a:	d2 f7       	brpl	.-12     	; 0x7c40 <__fixsfsi+0x60>
    7c4c:	66 23       	and	r22, r22
    7c4e:	b1 f0       	breq	.+44     	; 0x7c7c <__fixsfsi+0x9c>
    7c50:	50 95       	com	r21
    7c52:	40 95       	com	r20
    7c54:	30 95       	com	r19
    7c56:	21 95       	neg	r18
    7c58:	3f 4f       	sbci	r19, 0xFF	; 255
    7c5a:	4f 4f       	sbci	r20, 0xFF	; 255
    7c5c:	5f 4f       	sbci	r21, 0xFF	; 255
    7c5e:	0e c0       	rjmp	.+28     	; 0x7c7c <__fixsfsi+0x9c>
    7c60:	20 e0       	ldi	r18, 0x00	; 0
    7c62:	30 e0       	ldi	r19, 0x00	; 0
    7c64:	40 e0       	ldi	r20, 0x00	; 0
    7c66:	50 e0       	ldi	r21, 0x00	; 0
    7c68:	09 c0       	rjmp	.+18     	; 0x7c7c <__fixsfsi+0x9c>
    7c6a:	2f ef       	ldi	r18, 0xFF	; 255
    7c6c:	3f ef       	ldi	r19, 0xFF	; 255
    7c6e:	4f ef       	ldi	r20, 0xFF	; 255
    7c70:	5f e7       	ldi	r21, 0x7F	; 127
    7c72:	04 c0       	rjmp	.+8      	; 0x7c7c <__fixsfsi+0x9c>
    7c74:	20 e0       	ldi	r18, 0x00	; 0
    7c76:	30 e0       	ldi	r19, 0x00	; 0
    7c78:	40 e0       	ldi	r20, 0x00	; 0
    7c7a:	50 e8       	ldi	r21, 0x80	; 128
    7c7c:	b9 01       	movw	r22, r18
    7c7e:	ca 01       	movw	r24, r20
    7c80:	2c 96       	adiw	r28, 0x0c	; 12
    7c82:	e2 e0       	ldi	r30, 0x02	; 2
    7c84:	0c 94 6d 41 	jmp	0x82da	; 0x82da <__epilogue_restores__+0x20>

00007c88 <__floatunsisf>:
    7c88:	a8 e0       	ldi	r26, 0x08	; 8
    7c8a:	b0 e0       	ldi	r27, 0x00	; 0
    7c8c:	ea e4       	ldi	r30, 0x4A	; 74
    7c8e:	fe e3       	ldi	r31, 0x3E	; 62
    7c90:	0c 94 49 41 	jmp	0x8292	; 0x8292 <__prologue_saves__+0x10>
    7c94:	7b 01       	movw	r14, r22
    7c96:	8c 01       	movw	r16, r24
    7c98:	61 15       	cp	r22, r1
    7c9a:	71 05       	cpc	r23, r1
    7c9c:	81 05       	cpc	r24, r1
    7c9e:	91 05       	cpc	r25, r1
    7ca0:	19 f4       	brne	.+6      	; 0x7ca8 <__floatunsisf+0x20>
    7ca2:	82 e0       	ldi	r24, 0x02	; 2
    7ca4:	89 83       	std	Y+1, r24	; 0x01
    7ca6:	60 c0       	rjmp	.+192    	; 0x7d68 <__floatunsisf+0xe0>
    7ca8:	83 e0       	ldi	r24, 0x03	; 3
    7caa:	89 83       	std	Y+1, r24	; 0x01
    7cac:	8e e1       	ldi	r24, 0x1E	; 30
    7cae:	c8 2e       	mov	r12, r24
    7cb0:	d1 2c       	mov	r13, r1
    7cb2:	dc 82       	std	Y+4, r13	; 0x04
    7cb4:	cb 82       	std	Y+3, r12	; 0x03
    7cb6:	ed 82       	std	Y+5, r14	; 0x05
    7cb8:	fe 82       	std	Y+6, r15	; 0x06
    7cba:	0f 83       	std	Y+7, r16	; 0x07
    7cbc:	18 87       	std	Y+8, r17	; 0x08
    7cbe:	c8 01       	movw	r24, r16
    7cc0:	b7 01       	movw	r22, r14
    7cc2:	0e 94 bd 3e 	call	0x7d7a	; 0x7d7a <__clzsi2>
    7cc6:	fc 01       	movw	r30, r24
    7cc8:	31 97       	sbiw	r30, 0x01	; 1
    7cca:	f7 ff       	sbrs	r31, 7
    7ccc:	3b c0       	rjmp	.+118    	; 0x7d44 <__floatunsisf+0xbc>
    7cce:	22 27       	eor	r18, r18
    7cd0:	33 27       	eor	r19, r19
    7cd2:	2e 1b       	sub	r18, r30
    7cd4:	3f 0b       	sbc	r19, r31
    7cd6:	57 01       	movw	r10, r14
    7cd8:	68 01       	movw	r12, r16
    7cda:	02 2e       	mov	r0, r18
    7cdc:	04 c0       	rjmp	.+8      	; 0x7ce6 <__floatunsisf+0x5e>
    7cde:	d6 94       	lsr	r13
    7ce0:	c7 94       	ror	r12
    7ce2:	b7 94       	ror	r11
    7ce4:	a7 94       	ror	r10
    7ce6:	0a 94       	dec	r0
    7ce8:	d2 f7       	brpl	.-12     	; 0x7cde <__floatunsisf+0x56>
    7cea:	40 e0       	ldi	r20, 0x00	; 0
    7cec:	50 e0       	ldi	r21, 0x00	; 0
    7cee:	60 e0       	ldi	r22, 0x00	; 0
    7cf0:	70 e0       	ldi	r23, 0x00	; 0
    7cf2:	81 e0       	ldi	r24, 0x01	; 1
    7cf4:	90 e0       	ldi	r25, 0x00	; 0
    7cf6:	a0 e0       	ldi	r26, 0x00	; 0
    7cf8:	b0 e0       	ldi	r27, 0x00	; 0
    7cfa:	04 c0       	rjmp	.+8      	; 0x7d04 <__floatunsisf+0x7c>
    7cfc:	88 0f       	add	r24, r24
    7cfe:	99 1f       	adc	r25, r25
    7d00:	aa 1f       	adc	r26, r26
    7d02:	bb 1f       	adc	r27, r27
    7d04:	2a 95       	dec	r18
    7d06:	d2 f7       	brpl	.-12     	; 0x7cfc <__floatunsisf+0x74>
    7d08:	01 97       	sbiw	r24, 0x01	; 1
    7d0a:	a1 09       	sbc	r26, r1
    7d0c:	b1 09       	sbc	r27, r1
    7d0e:	8e 21       	and	r24, r14
    7d10:	9f 21       	and	r25, r15
    7d12:	a0 23       	and	r26, r16
    7d14:	b1 23       	and	r27, r17
    7d16:	00 97       	sbiw	r24, 0x00	; 0
    7d18:	a1 05       	cpc	r26, r1
    7d1a:	b1 05       	cpc	r27, r1
    7d1c:	21 f0       	breq	.+8      	; 0x7d26 <__floatunsisf+0x9e>
    7d1e:	41 e0       	ldi	r20, 0x01	; 1
    7d20:	50 e0       	ldi	r21, 0x00	; 0
    7d22:	60 e0       	ldi	r22, 0x00	; 0
    7d24:	70 e0       	ldi	r23, 0x00	; 0
    7d26:	4a 29       	or	r20, r10
    7d28:	5b 29       	or	r21, r11
    7d2a:	6c 29       	or	r22, r12
    7d2c:	7d 29       	or	r23, r13
    7d2e:	4d 83       	std	Y+5, r20	; 0x05
    7d30:	5e 83       	std	Y+6, r21	; 0x06
    7d32:	6f 83       	std	Y+7, r22	; 0x07
    7d34:	78 87       	std	Y+8, r23	; 0x08
    7d36:	8e e1       	ldi	r24, 0x1E	; 30
    7d38:	90 e0       	ldi	r25, 0x00	; 0
    7d3a:	8e 1b       	sub	r24, r30
    7d3c:	9f 0b       	sbc	r25, r31
    7d3e:	9c 83       	std	Y+4, r25	; 0x04
    7d40:	8b 83       	std	Y+3, r24	; 0x03
    7d42:	12 c0       	rjmp	.+36     	; 0x7d68 <__floatunsisf+0xe0>
    7d44:	30 97       	sbiw	r30, 0x00	; 0
    7d46:	81 f0       	breq	.+32     	; 0x7d68 <__floatunsisf+0xe0>
    7d48:	0e 2e       	mov	r0, r30
    7d4a:	04 c0       	rjmp	.+8      	; 0x7d54 <__floatunsisf+0xcc>
    7d4c:	ee 0c       	add	r14, r14
    7d4e:	ff 1c       	adc	r15, r15
    7d50:	00 1f       	adc	r16, r16
    7d52:	11 1f       	adc	r17, r17
    7d54:	0a 94       	dec	r0
    7d56:	d2 f7       	brpl	.-12     	; 0x7d4c <__floatunsisf+0xc4>
    7d58:	ed 82       	std	Y+5, r14	; 0x05
    7d5a:	fe 82       	std	Y+6, r15	; 0x06
    7d5c:	0f 83       	std	Y+7, r16	; 0x07
    7d5e:	18 87       	std	Y+8, r17	; 0x08
    7d60:	ce 1a       	sub	r12, r30
    7d62:	df 0a       	sbc	r13, r31
    7d64:	dc 82       	std	Y+4, r13	; 0x04
    7d66:	cb 82       	std	Y+3, r12	; 0x03
    7d68:	1a 82       	std	Y+2, r1	; 0x02
    7d6a:	ce 01       	movw	r24, r28
    7d6c:	01 96       	adiw	r24, 0x01	; 1
    7d6e:	0e 94 0c 3f 	call	0x7e18	; 0x7e18 <__pack_f>
    7d72:	28 96       	adiw	r28, 0x08	; 8
    7d74:	ea e0       	ldi	r30, 0x0A	; 10
    7d76:	0c 94 65 41 	jmp	0x82ca	; 0x82ca <__epilogue_restores__+0x10>

00007d7a <__clzsi2>:
    7d7a:	ef 92       	push	r14
    7d7c:	ff 92       	push	r15
    7d7e:	0f 93       	push	r16
    7d80:	1f 93       	push	r17
    7d82:	7b 01       	movw	r14, r22
    7d84:	8c 01       	movw	r16, r24
    7d86:	80 e0       	ldi	r24, 0x00	; 0
    7d88:	e8 16       	cp	r14, r24
    7d8a:	80 e0       	ldi	r24, 0x00	; 0
    7d8c:	f8 06       	cpc	r15, r24
    7d8e:	81 e0       	ldi	r24, 0x01	; 1
    7d90:	08 07       	cpc	r16, r24
    7d92:	80 e0       	ldi	r24, 0x00	; 0
    7d94:	18 07       	cpc	r17, r24
    7d96:	88 f4       	brcc	.+34     	; 0x7dba <__clzsi2+0x40>
    7d98:	8f ef       	ldi	r24, 0xFF	; 255
    7d9a:	e8 16       	cp	r14, r24
    7d9c:	f1 04       	cpc	r15, r1
    7d9e:	01 05       	cpc	r16, r1
    7da0:	11 05       	cpc	r17, r1
    7da2:	31 f0       	breq	.+12     	; 0x7db0 <__clzsi2+0x36>
    7da4:	28 f0       	brcs	.+10     	; 0x7db0 <__clzsi2+0x36>
    7da6:	88 e0       	ldi	r24, 0x08	; 8
    7da8:	90 e0       	ldi	r25, 0x00	; 0
    7daa:	a0 e0       	ldi	r26, 0x00	; 0
    7dac:	b0 e0       	ldi	r27, 0x00	; 0
    7dae:	17 c0       	rjmp	.+46     	; 0x7dde <__clzsi2+0x64>
    7db0:	80 e0       	ldi	r24, 0x00	; 0
    7db2:	90 e0       	ldi	r25, 0x00	; 0
    7db4:	a0 e0       	ldi	r26, 0x00	; 0
    7db6:	b0 e0       	ldi	r27, 0x00	; 0
    7db8:	12 c0       	rjmp	.+36     	; 0x7dde <__clzsi2+0x64>
    7dba:	80 e0       	ldi	r24, 0x00	; 0
    7dbc:	e8 16       	cp	r14, r24
    7dbe:	80 e0       	ldi	r24, 0x00	; 0
    7dc0:	f8 06       	cpc	r15, r24
    7dc2:	80 e0       	ldi	r24, 0x00	; 0
    7dc4:	08 07       	cpc	r16, r24
    7dc6:	81 e0       	ldi	r24, 0x01	; 1
    7dc8:	18 07       	cpc	r17, r24
    7dca:	28 f0       	brcs	.+10     	; 0x7dd6 <__clzsi2+0x5c>
    7dcc:	88 e1       	ldi	r24, 0x18	; 24
    7dce:	90 e0       	ldi	r25, 0x00	; 0
    7dd0:	a0 e0       	ldi	r26, 0x00	; 0
    7dd2:	b0 e0       	ldi	r27, 0x00	; 0
    7dd4:	04 c0       	rjmp	.+8      	; 0x7dde <__clzsi2+0x64>
    7dd6:	80 e1       	ldi	r24, 0x10	; 16
    7dd8:	90 e0       	ldi	r25, 0x00	; 0
    7dda:	a0 e0       	ldi	r26, 0x00	; 0
    7ddc:	b0 e0       	ldi	r27, 0x00	; 0
    7dde:	20 e2       	ldi	r18, 0x20	; 32
    7de0:	30 e0       	ldi	r19, 0x00	; 0
    7de2:	40 e0       	ldi	r20, 0x00	; 0
    7de4:	50 e0       	ldi	r21, 0x00	; 0
    7de6:	28 1b       	sub	r18, r24
    7de8:	39 0b       	sbc	r19, r25
    7dea:	4a 0b       	sbc	r20, r26
    7dec:	5b 0b       	sbc	r21, r27
    7dee:	04 c0       	rjmp	.+8      	; 0x7df8 <__clzsi2+0x7e>
    7df0:	16 95       	lsr	r17
    7df2:	07 95       	ror	r16
    7df4:	f7 94       	ror	r15
    7df6:	e7 94       	ror	r14
    7df8:	8a 95       	dec	r24
    7dfa:	d2 f7       	brpl	.-12     	; 0x7df0 <__clzsi2+0x76>
    7dfc:	f7 01       	movw	r30, r14
    7dfe:	e1 50       	subi	r30, 0x01	; 1
    7e00:	fc 4f       	sbci	r31, 0xFC	; 252
    7e02:	80 81       	ld	r24, Z
    7e04:	28 1b       	sub	r18, r24
    7e06:	31 09       	sbc	r19, r1
    7e08:	41 09       	sbc	r20, r1
    7e0a:	51 09       	sbc	r21, r1
    7e0c:	c9 01       	movw	r24, r18
    7e0e:	1f 91       	pop	r17
    7e10:	0f 91       	pop	r16
    7e12:	ff 90       	pop	r15
    7e14:	ef 90       	pop	r14
    7e16:	08 95       	ret

00007e18 <__pack_f>:
    7e18:	df 92       	push	r13
    7e1a:	ef 92       	push	r14
    7e1c:	ff 92       	push	r15
    7e1e:	0f 93       	push	r16
    7e20:	1f 93       	push	r17
    7e22:	fc 01       	movw	r30, r24
    7e24:	e4 80       	ldd	r14, Z+4	; 0x04
    7e26:	f5 80       	ldd	r15, Z+5	; 0x05
    7e28:	06 81       	ldd	r16, Z+6	; 0x06
    7e2a:	17 81       	ldd	r17, Z+7	; 0x07
    7e2c:	d1 80       	ldd	r13, Z+1	; 0x01
    7e2e:	80 81       	ld	r24, Z
    7e30:	82 30       	cpi	r24, 0x02	; 2
    7e32:	48 f4       	brcc	.+18     	; 0x7e46 <__pack_f+0x2e>
    7e34:	80 e0       	ldi	r24, 0x00	; 0
    7e36:	90 e0       	ldi	r25, 0x00	; 0
    7e38:	a0 e1       	ldi	r26, 0x10	; 16
    7e3a:	b0 e0       	ldi	r27, 0x00	; 0
    7e3c:	e8 2a       	or	r14, r24
    7e3e:	f9 2a       	or	r15, r25
    7e40:	0a 2b       	or	r16, r26
    7e42:	1b 2b       	or	r17, r27
    7e44:	a5 c0       	rjmp	.+330    	; 0x7f90 <__pack_f+0x178>
    7e46:	84 30       	cpi	r24, 0x04	; 4
    7e48:	09 f4       	brne	.+2      	; 0x7e4c <__pack_f+0x34>
    7e4a:	9f c0       	rjmp	.+318    	; 0x7f8a <__pack_f+0x172>
    7e4c:	82 30       	cpi	r24, 0x02	; 2
    7e4e:	21 f4       	brne	.+8      	; 0x7e58 <__pack_f+0x40>
    7e50:	ee 24       	eor	r14, r14
    7e52:	ff 24       	eor	r15, r15
    7e54:	87 01       	movw	r16, r14
    7e56:	05 c0       	rjmp	.+10     	; 0x7e62 <__pack_f+0x4a>
    7e58:	e1 14       	cp	r14, r1
    7e5a:	f1 04       	cpc	r15, r1
    7e5c:	01 05       	cpc	r16, r1
    7e5e:	11 05       	cpc	r17, r1
    7e60:	19 f4       	brne	.+6      	; 0x7e68 <__pack_f+0x50>
    7e62:	e0 e0       	ldi	r30, 0x00	; 0
    7e64:	f0 e0       	ldi	r31, 0x00	; 0
    7e66:	96 c0       	rjmp	.+300    	; 0x7f94 <__pack_f+0x17c>
    7e68:	62 81       	ldd	r22, Z+2	; 0x02
    7e6a:	73 81       	ldd	r23, Z+3	; 0x03
    7e6c:	9f ef       	ldi	r25, 0xFF	; 255
    7e6e:	62 38       	cpi	r22, 0x82	; 130
    7e70:	79 07       	cpc	r23, r25
    7e72:	0c f0       	brlt	.+2      	; 0x7e76 <__pack_f+0x5e>
    7e74:	5b c0       	rjmp	.+182    	; 0x7f2c <__pack_f+0x114>
    7e76:	22 e8       	ldi	r18, 0x82	; 130
    7e78:	3f ef       	ldi	r19, 0xFF	; 255
    7e7a:	26 1b       	sub	r18, r22
    7e7c:	37 0b       	sbc	r19, r23
    7e7e:	2a 31       	cpi	r18, 0x1A	; 26
    7e80:	31 05       	cpc	r19, r1
    7e82:	2c f0       	brlt	.+10     	; 0x7e8e <__pack_f+0x76>
    7e84:	20 e0       	ldi	r18, 0x00	; 0
    7e86:	30 e0       	ldi	r19, 0x00	; 0
    7e88:	40 e0       	ldi	r20, 0x00	; 0
    7e8a:	50 e0       	ldi	r21, 0x00	; 0
    7e8c:	2a c0       	rjmp	.+84     	; 0x7ee2 <__pack_f+0xca>
    7e8e:	b8 01       	movw	r22, r16
    7e90:	a7 01       	movw	r20, r14
    7e92:	02 2e       	mov	r0, r18
    7e94:	04 c0       	rjmp	.+8      	; 0x7e9e <__pack_f+0x86>
    7e96:	76 95       	lsr	r23
    7e98:	67 95       	ror	r22
    7e9a:	57 95       	ror	r21
    7e9c:	47 95       	ror	r20
    7e9e:	0a 94       	dec	r0
    7ea0:	d2 f7       	brpl	.-12     	; 0x7e96 <__pack_f+0x7e>
    7ea2:	81 e0       	ldi	r24, 0x01	; 1
    7ea4:	90 e0       	ldi	r25, 0x00	; 0
    7ea6:	a0 e0       	ldi	r26, 0x00	; 0
    7ea8:	b0 e0       	ldi	r27, 0x00	; 0
    7eaa:	04 c0       	rjmp	.+8      	; 0x7eb4 <__pack_f+0x9c>
    7eac:	88 0f       	add	r24, r24
    7eae:	99 1f       	adc	r25, r25
    7eb0:	aa 1f       	adc	r26, r26
    7eb2:	bb 1f       	adc	r27, r27
    7eb4:	2a 95       	dec	r18
    7eb6:	d2 f7       	brpl	.-12     	; 0x7eac <__pack_f+0x94>
    7eb8:	01 97       	sbiw	r24, 0x01	; 1
    7eba:	a1 09       	sbc	r26, r1
    7ebc:	b1 09       	sbc	r27, r1
    7ebe:	8e 21       	and	r24, r14
    7ec0:	9f 21       	and	r25, r15
    7ec2:	a0 23       	and	r26, r16
    7ec4:	b1 23       	and	r27, r17
    7ec6:	00 97       	sbiw	r24, 0x00	; 0
    7ec8:	a1 05       	cpc	r26, r1
    7eca:	b1 05       	cpc	r27, r1
    7ecc:	21 f0       	breq	.+8      	; 0x7ed6 <__pack_f+0xbe>
    7ece:	81 e0       	ldi	r24, 0x01	; 1
    7ed0:	90 e0       	ldi	r25, 0x00	; 0
    7ed2:	a0 e0       	ldi	r26, 0x00	; 0
    7ed4:	b0 e0       	ldi	r27, 0x00	; 0
    7ed6:	9a 01       	movw	r18, r20
    7ed8:	ab 01       	movw	r20, r22
    7eda:	28 2b       	or	r18, r24
    7edc:	39 2b       	or	r19, r25
    7ede:	4a 2b       	or	r20, r26
    7ee0:	5b 2b       	or	r21, r27
    7ee2:	da 01       	movw	r26, r20
    7ee4:	c9 01       	movw	r24, r18
    7ee6:	8f 77       	andi	r24, 0x7F	; 127
    7ee8:	90 70       	andi	r25, 0x00	; 0
    7eea:	a0 70       	andi	r26, 0x00	; 0
    7eec:	b0 70       	andi	r27, 0x00	; 0
    7eee:	80 34       	cpi	r24, 0x40	; 64
    7ef0:	91 05       	cpc	r25, r1
    7ef2:	a1 05       	cpc	r26, r1
    7ef4:	b1 05       	cpc	r27, r1
    7ef6:	39 f4       	brne	.+14     	; 0x7f06 <__pack_f+0xee>
    7ef8:	27 ff       	sbrs	r18, 7
    7efa:	09 c0       	rjmp	.+18     	; 0x7f0e <__pack_f+0xf6>
    7efc:	20 5c       	subi	r18, 0xC0	; 192
    7efe:	3f 4f       	sbci	r19, 0xFF	; 255
    7f00:	4f 4f       	sbci	r20, 0xFF	; 255
    7f02:	5f 4f       	sbci	r21, 0xFF	; 255
    7f04:	04 c0       	rjmp	.+8      	; 0x7f0e <__pack_f+0xf6>
    7f06:	21 5c       	subi	r18, 0xC1	; 193
    7f08:	3f 4f       	sbci	r19, 0xFF	; 255
    7f0a:	4f 4f       	sbci	r20, 0xFF	; 255
    7f0c:	5f 4f       	sbci	r21, 0xFF	; 255
    7f0e:	e0 e0       	ldi	r30, 0x00	; 0
    7f10:	f0 e0       	ldi	r31, 0x00	; 0
    7f12:	20 30       	cpi	r18, 0x00	; 0
    7f14:	a0 e0       	ldi	r26, 0x00	; 0
    7f16:	3a 07       	cpc	r19, r26
    7f18:	a0 e0       	ldi	r26, 0x00	; 0
    7f1a:	4a 07       	cpc	r20, r26
    7f1c:	a0 e4       	ldi	r26, 0x40	; 64
    7f1e:	5a 07       	cpc	r21, r26
    7f20:	10 f0       	brcs	.+4      	; 0x7f26 <__pack_f+0x10e>
    7f22:	e1 e0       	ldi	r30, 0x01	; 1
    7f24:	f0 e0       	ldi	r31, 0x00	; 0
    7f26:	79 01       	movw	r14, r18
    7f28:	8a 01       	movw	r16, r20
    7f2a:	27 c0       	rjmp	.+78     	; 0x7f7a <__pack_f+0x162>
    7f2c:	60 38       	cpi	r22, 0x80	; 128
    7f2e:	71 05       	cpc	r23, r1
    7f30:	64 f5       	brge	.+88     	; 0x7f8a <__pack_f+0x172>
    7f32:	fb 01       	movw	r30, r22
    7f34:	e1 58       	subi	r30, 0x81	; 129
    7f36:	ff 4f       	sbci	r31, 0xFF	; 255
    7f38:	d8 01       	movw	r26, r16
    7f3a:	c7 01       	movw	r24, r14
    7f3c:	8f 77       	andi	r24, 0x7F	; 127
    7f3e:	90 70       	andi	r25, 0x00	; 0
    7f40:	a0 70       	andi	r26, 0x00	; 0
    7f42:	b0 70       	andi	r27, 0x00	; 0
    7f44:	80 34       	cpi	r24, 0x40	; 64
    7f46:	91 05       	cpc	r25, r1
    7f48:	a1 05       	cpc	r26, r1
    7f4a:	b1 05       	cpc	r27, r1
    7f4c:	39 f4       	brne	.+14     	; 0x7f5c <__pack_f+0x144>
    7f4e:	e7 fe       	sbrs	r14, 7
    7f50:	0d c0       	rjmp	.+26     	; 0x7f6c <__pack_f+0x154>
    7f52:	80 e4       	ldi	r24, 0x40	; 64
    7f54:	90 e0       	ldi	r25, 0x00	; 0
    7f56:	a0 e0       	ldi	r26, 0x00	; 0
    7f58:	b0 e0       	ldi	r27, 0x00	; 0
    7f5a:	04 c0       	rjmp	.+8      	; 0x7f64 <__pack_f+0x14c>
    7f5c:	8f e3       	ldi	r24, 0x3F	; 63
    7f5e:	90 e0       	ldi	r25, 0x00	; 0
    7f60:	a0 e0       	ldi	r26, 0x00	; 0
    7f62:	b0 e0       	ldi	r27, 0x00	; 0
    7f64:	e8 0e       	add	r14, r24
    7f66:	f9 1e       	adc	r15, r25
    7f68:	0a 1f       	adc	r16, r26
    7f6a:	1b 1f       	adc	r17, r27
    7f6c:	17 ff       	sbrs	r17, 7
    7f6e:	05 c0       	rjmp	.+10     	; 0x7f7a <__pack_f+0x162>
    7f70:	16 95       	lsr	r17
    7f72:	07 95       	ror	r16
    7f74:	f7 94       	ror	r15
    7f76:	e7 94       	ror	r14
    7f78:	31 96       	adiw	r30, 0x01	; 1
    7f7a:	87 e0       	ldi	r24, 0x07	; 7
    7f7c:	16 95       	lsr	r17
    7f7e:	07 95       	ror	r16
    7f80:	f7 94       	ror	r15
    7f82:	e7 94       	ror	r14
    7f84:	8a 95       	dec	r24
    7f86:	d1 f7       	brne	.-12     	; 0x7f7c <__pack_f+0x164>
    7f88:	05 c0       	rjmp	.+10     	; 0x7f94 <__pack_f+0x17c>
    7f8a:	ee 24       	eor	r14, r14
    7f8c:	ff 24       	eor	r15, r15
    7f8e:	87 01       	movw	r16, r14
    7f90:	ef ef       	ldi	r30, 0xFF	; 255
    7f92:	f0 e0       	ldi	r31, 0x00	; 0
    7f94:	6e 2f       	mov	r22, r30
    7f96:	67 95       	ror	r22
    7f98:	66 27       	eor	r22, r22
    7f9a:	67 95       	ror	r22
    7f9c:	90 2f       	mov	r25, r16
    7f9e:	9f 77       	andi	r25, 0x7F	; 127
    7fa0:	d7 94       	ror	r13
    7fa2:	dd 24       	eor	r13, r13
    7fa4:	d7 94       	ror	r13
    7fa6:	8e 2f       	mov	r24, r30
    7fa8:	86 95       	lsr	r24
    7faa:	49 2f       	mov	r20, r25
    7fac:	46 2b       	or	r20, r22
    7fae:	58 2f       	mov	r21, r24
    7fb0:	5d 29       	or	r21, r13
    7fb2:	b7 01       	movw	r22, r14
    7fb4:	ca 01       	movw	r24, r20
    7fb6:	1f 91       	pop	r17
    7fb8:	0f 91       	pop	r16
    7fba:	ff 90       	pop	r15
    7fbc:	ef 90       	pop	r14
    7fbe:	df 90       	pop	r13
    7fc0:	08 95       	ret

00007fc2 <__unpack_f>:
    7fc2:	fc 01       	movw	r30, r24
    7fc4:	db 01       	movw	r26, r22
    7fc6:	40 81       	ld	r20, Z
    7fc8:	51 81       	ldd	r21, Z+1	; 0x01
    7fca:	22 81       	ldd	r18, Z+2	; 0x02
    7fcc:	62 2f       	mov	r22, r18
    7fce:	6f 77       	andi	r22, 0x7F	; 127
    7fd0:	70 e0       	ldi	r23, 0x00	; 0
    7fd2:	22 1f       	adc	r18, r18
    7fd4:	22 27       	eor	r18, r18
    7fd6:	22 1f       	adc	r18, r18
    7fd8:	93 81       	ldd	r25, Z+3	; 0x03
    7fda:	89 2f       	mov	r24, r25
    7fdc:	88 0f       	add	r24, r24
    7fde:	82 2b       	or	r24, r18
    7fe0:	28 2f       	mov	r18, r24
    7fe2:	30 e0       	ldi	r19, 0x00	; 0
    7fe4:	99 1f       	adc	r25, r25
    7fe6:	99 27       	eor	r25, r25
    7fe8:	99 1f       	adc	r25, r25
    7fea:	11 96       	adiw	r26, 0x01	; 1
    7fec:	9c 93       	st	X, r25
    7fee:	11 97       	sbiw	r26, 0x01	; 1
    7ff0:	21 15       	cp	r18, r1
    7ff2:	31 05       	cpc	r19, r1
    7ff4:	a9 f5       	brne	.+106    	; 0x8060 <__unpack_f+0x9e>
    7ff6:	41 15       	cp	r20, r1
    7ff8:	51 05       	cpc	r21, r1
    7ffa:	61 05       	cpc	r22, r1
    7ffc:	71 05       	cpc	r23, r1
    7ffe:	11 f4       	brne	.+4      	; 0x8004 <__unpack_f+0x42>
    8000:	82 e0       	ldi	r24, 0x02	; 2
    8002:	37 c0       	rjmp	.+110    	; 0x8072 <__unpack_f+0xb0>
    8004:	82 e8       	ldi	r24, 0x82	; 130
    8006:	9f ef       	ldi	r25, 0xFF	; 255
    8008:	13 96       	adiw	r26, 0x03	; 3
    800a:	9c 93       	st	X, r25
    800c:	8e 93       	st	-X, r24
    800e:	12 97       	sbiw	r26, 0x02	; 2
    8010:	9a 01       	movw	r18, r20
    8012:	ab 01       	movw	r20, r22
    8014:	67 e0       	ldi	r22, 0x07	; 7
    8016:	22 0f       	add	r18, r18
    8018:	33 1f       	adc	r19, r19
    801a:	44 1f       	adc	r20, r20
    801c:	55 1f       	adc	r21, r21
    801e:	6a 95       	dec	r22
    8020:	d1 f7       	brne	.-12     	; 0x8016 <__unpack_f+0x54>
    8022:	83 e0       	ldi	r24, 0x03	; 3
    8024:	8c 93       	st	X, r24
    8026:	0d c0       	rjmp	.+26     	; 0x8042 <__unpack_f+0x80>
    8028:	22 0f       	add	r18, r18
    802a:	33 1f       	adc	r19, r19
    802c:	44 1f       	adc	r20, r20
    802e:	55 1f       	adc	r21, r21
    8030:	12 96       	adiw	r26, 0x02	; 2
    8032:	8d 91       	ld	r24, X+
    8034:	9c 91       	ld	r25, X
    8036:	13 97       	sbiw	r26, 0x03	; 3
    8038:	01 97       	sbiw	r24, 0x01	; 1
    803a:	13 96       	adiw	r26, 0x03	; 3
    803c:	9c 93       	st	X, r25
    803e:	8e 93       	st	-X, r24
    8040:	12 97       	sbiw	r26, 0x02	; 2
    8042:	20 30       	cpi	r18, 0x00	; 0
    8044:	80 e0       	ldi	r24, 0x00	; 0
    8046:	38 07       	cpc	r19, r24
    8048:	80 e0       	ldi	r24, 0x00	; 0
    804a:	48 07       	cpc	r20, r24
    804c:	80 e4       	ldi	r24, 0x40	; 64
    804e:	58 07       	cpc	r21, r24
    8050:	58 f3       	brcs	.-42     	; 0x8028 <__unpack_f+0x66>
    8052:	14 96       	adiw	r26, 0x04	; 4
    8054:	2d 93       	st	X+, r18
    8056:	3d 93       	st	X+, r19
    8058:	4d 93       	st	X+, r20
    805a:	5c 93       	st	X, r21
    805c:	17 97       	sbiw	r26, 0x07	; 7
    805e:	08 95       	ret
    8060:	2f 3f       	cpi	r18, 0xFF	; 255
    8062:	31 05       	cpc	r19, r1
    8064:	79 f4       	brne	.+30     	; 0x8084 <__unpack_f+0xc2>
    8066:	41 15       	cp	r20, r1
    8068:	51 05       	cpc	r21, r1
    806a:	61 05       	cpc	r22, r1
    806c:	71 05       	cpc	r23, r1
    806e:	19 f4       	brne	.+6      	; 0x8076 <__unpack_f+0xb4>
    8070:	84 e0       	ldi	r24, 0x04	; 4
    8072:	8c 93       	st	X, r24
    8074:	08 95       	ret
    8076:	64 ff       	sbrs	r22, 4
    8078:	03 c0       	rjmp	.+6      	; 0x8080 <__unpack_f+0xbe>
    807a:	81 e0       	ldi	r24, 0x01	; 1
    807c:	8c 93       	st	X, r24
    807e:	12 c0       	rjmp	.+36     	; 0x80a4 <__unpack_f+0xe2>
    8080:	1c 92       	st	X, r1
    8082:	10 c0       	rjmp	.+32     	; 0x80a4 <__unpack_f+0xe2>
    8084:	2f 57       	subi	r18, 0x7F	; 127
    8086:	30 40       	sbci	r19, 0x00	; 0
    8088:	13 96       	adiw	r26, 0x03	; 3
    808a:	3c 93       	st	X, r19
    808c:	2e 93       	st	-X, r18
    808e:	12 97       	sbiw	r26, 0x02	; 2
    8090:	83 e0       	ldi	r24, 0x03	; 3
    8092:	8c 93       	st	X, r24
    8094:	87 e0       	ldi	r24, 0x07	; 7
    8096:	44 0f       	add	r20, r20
    8098:	55 1f       	adc	r21, r21
    809a:	66 1f       	adc	r22, r22
    809c:	77 1f       	adc	r23, r23
    809e:	8a 95       	dec	r24
    80a0:	d1 f7       	brne	.-12     	; 0x8096 <__unpack_f+0xd4>
    80a2:	70 64       	ori	r23, 0x40	; 64
    80a4:	14 96       	adiw	r26, 0x04	; 4
    80a6:	4d 93       	st	X+, r20
    80a8:	5d 93       	st	X+, r21
    80aa:	6d 93       	st	X+, r22
    80ac:	7c 93       	st	X, r23
    80ae:	17 97       	sbiw	r26, 0x07	; 7
    80b0:	08 95       	ret

000080b2 <__fpcmp_parts_f>:
    80b2:	1f 93       	push	r17
    80b4:	dc 01       	movw	r26, r24
    80b6:	fb 01       	movw	r30, r22
    80b8:	9c 91       	ld	r25, X
    80ba:	92 30       	cpi	r25, 0x02	; 2
    80bc:	08 f4       	brcc	.+2      	; 0x80c0 <__fpcmp_parts_f+0xe>
    80be:	47 c0       	rjmp	.+142    	; 0x814e <__fpcmp_parts_f+0x9c>
    80c0:	80 81       	ld	r24, Z
    80c2:	82 30       	cpi	r24, 0x02	; 2
    80c4:	08 f4       	brcc	.+2      	; 0x80c8 <__fpcmp_parts_f+0x16>
    80c6:	43 c0       	rjmp	.+134    	; 0x814e <__fpcmp_parts_f+0x9c>
    80c8:	94 30       	cpi	r25, 0x04	; 4
    80ca:	51 f4       	brne	.+20     	; 0x80e0 <__fpcmp_parts_f+0x2e>
    80cc:	11 96       	adiw	r26, 0x01	; 1
    80ce:	1c 91       	ld	r17, X
    80d0:	84 30       	cpi	r24, 0x04	; 4
    80d2:	99 f5       	brne	.+102    	; 0x813a <__fpcmp_parts_f+0x88>
    80d4:	81 81       	ldd	r24, Z+1	; 0x01
    80d6:	68 2f       	mov	r22, r24
    80d8:	70 e0       	ldi	r23, 0x00	; 0
    80da:	61 1b       	sub	r22, r17
    80dc:	71 09       	sbc	r23, r1
    80de:	3f c0       	rjmp	.+126    	; 0x815e <__fpcmp_parts_f+0xac>
    80e0:	84 30       	cpi	r24, 0x04	; 4
    80e2:	21 f0       	breq	.+8      	; 0x80ec <__fpcmp_parts_f+0x3a>
    80e4:	92 30       	cpi	r25, 0x02	; 2
    80e6:	31 f4       	brne	.+12     	; 0x80f4 <__fpcmp_parts_f+0x42>
    80e8:	82 30       	cpi	r24, 0x02	; 2
    80ea:	b9 f1       	breq	.+110    	; 0x815a <__fpcmp_parts_f+0xa8>
    80ec:	81 81       	ldd	r24, Z+1	; 0x01
    80ee:	88 23       	and	r24, r24
    80f0:	89 f1       	breq	.+98     	; 0x8154 <__fpcmp_parts_f+0xa2>
    80f2:	2d c0       	rjmp	.+90     	; 0x814e <__fpcmp_parts_f+0x9c>
    80f4:	11 96       	adiw	r26, 0x01	; 1
    80f6:	1c 91       	ld	r17, X
    80f8:	11 97       	sbiw	r26, 0x01	; 1
    80fa:	82 30       	cpi	r24, 0x02	; 2
    80fc:	f1 f0       	breq	.+60     	; 0x813a <__fpcmp_parts_f+0x88>
    80fe:	81 81       	ldd	r24, Z+1	; 0x01
    8100:	18 17       	cp	r17, r24
    8102:	d9 f4       	brne	.+54     	; 0x813a <__fpcmp_parts_f+0x88>
    8104:	12 96       	adiw	r26, 0x02	; 2
    8106:	2d 91       	ld	r18, X+
    8108:	3c 91       	ld	r19, X
    810a:	13 97       	sbiw	r26, 0x03	; 3
    810c:	82 81       	ldd	r24, Z+2	; 0x02
    810e:	93 81       	ldd	r25, Z+3	; 0x03
    8110:	82 17       	cp	r24, r18
    8112:	93 07       	cpc	r25, r19
    8114:	94 f0       	brlt	.+36     	; 0x813a <__fpcmp_parts_f+0x88>
    8116:	28 17       	cp	r18, r24
    8118:	39 07       	cpc	r19, r25
    811a:	bc f0       	brlt	.+46     	; 0x814a <__fpcmp_parts_f+0x98>
    811c:	14 96       	adiw	r26, 0x04	; 4
    811e:	8d 91       	ld	r24, X+
    8120:	9d 91       	ld	r25, X+
    8122:	0d 90       	ld	r0, X+
    8124:	bc 91       	ld	r27, X
    8126:	a0 2d       	mov	r26, r0
    8128:	24 81       	ldd	r18, Z+4	; 0x04
    812a:	35 81       	ldd	r19, Z+5	; 0x05
    812c:	46 81       	ldd	r20, Z+6	; 0x06
    812e:	57 81       	ldd	r21, Z+7	; 0x07
    8130:	28 17       	cp	r18, r24
    8132:	39 07       	cpc	r19, r25
    8134:	4a 07       	cpc	r20, r26
    8136:	5b 07       	cpc	r21, r27
    8138:	18 f4       	brcc	.+6      	; 0x8140 <__fpcmp_parts_f+0x8e>
    813a:	11 23       	and	r17, r17
    813c:	41 f0       	breq	.+16     	; 0x814e <__fpcmp_parts_f+0x9c>
    813e:	0a c0       	rjmp	.+20     	; 0x8154 <__fpcmp_parts_f+0xa2>
    8140:	82 17       	cp	r24, r18
    8142:	93 07       	cpc	r25, r19
    8144:	a4 07       	cpc	r26, r20
    8146:	b5 07       	cpc	r27, r21
    8148:	40 f4       	brcc	.+16     	; 0x815a <__fpcmp_parts_f+0xa8>
    814a:	11 23       	and	r17, r17
    814c:	19 f0       	breq	.+6      	; 0x8154 <__fpcmp_parts_f+0xa2>
    814e:	61 e0       	ldi	r22, 0x01	; 1
    8150:	70 e0       	ldi	r23, 0x00	; 0
    8152:	05 c0       	rjmp	.+10     	; 0x815e <__fpcmp_parts_f+0xac>
    8154:	6f ef       	ldi	r22, 0xFF	; 255
    8156:	7f ef       	ldi	r23, 0xFF	; 255
    8158:	02 c0       	rjmp	.+4      	; 0x815e <__fpcmp_parts_f+0xac>
    815a:	60 e0       	ldi	r22, 0x00	; 0
    815c:	70 e0       	ldi	r23, 0x00	; 0
    815e:	cb 01       	movw	r24, r22
    8160:	1f 91       	pop	r17
    8162:	08 95       	ret

00008164 <__mulsi3>:
    8164:	62 9f       	mul	r22, r18
    8166:	d0 01       	movw	r26, r0
    8168:	73 9f       	mul	r23, r19
    816a:	f0 01       	movw	r30, r0
    816c:	82 9f       	mul	r24, r18
    816e:	e0 0d       	add	r30, r0
    8170:	f1 1d       	adc	r31, r1
    8172:	64 9f       	mul	r22, r20
    8174:	e0 0d       	add	r30, r0
    8176:	f1 1d       	adc	r31, r1
    8178:	92 9f       	mul	r25, r18
    817a:	f0 0d       	add	r31, r0
    817c:	83 9f       	mul	r24, r19
    817e:	f0 0d       	add	r31, r0
    8180:	74 9f       	mul	r23, r20
    8182:	f0 0d       	add	r31, r0
    8184:	65 9f       	mul	r22, r21
    8186:	f0 0d       	add	r31, r0
    8188:	99 27       	eor	r25, r25
    818a:	72 9f       	mul	r23, r18
    818c:	b0 0d       	add	r27, r0
    818e:	e1 1d       	adc	r30, r1
    8190:	f9 1f       	adc	r31, r25
    8192:	63 9f       	mul	r22, r19
    8194:	b0 0d       	add	r27, r0
    8196:	e1 1d       	adc	r30, r1
    8198:	f9 1f       	adc	r31, r25
    819a:	bd 01       	movw	r22, r26
    819c:	cf 01       	movw	r24, r30
    819e:	11 24       	eor	r1, r1
    81a0:	08 95       	ret

000081a2 <__udivmodqi4>:
    81a2:	99 1b       	sub	r25, r25
    81a4:	79 e0       	ldi	r23, 0x09	; 9
    81a6:	04 c0       	rjmp	.+8      	; 0x81b0 <__udivmodqi4_ep>

000081a8 <__udivmodqi4_loop>:
    81a8:	99 1f       	adc	r25, r25
    81aa:	96 17       	cp	r25, r22
    81ac:	08 f0       	brcs	.+2      	; 0x81b0 <__udivmodqi4_ep>
    81ae:	96 1b       	sub	r25, r22

000081b0 <__udivmodqi4_ep>:
    81b0:	88 1f       	adc	r24, r24
    81b2:	7a 95       	dec	r23
    81b4:	c9 f7       	brne	.-14     	; 0x81a8 <__udivmodqi4_loop>
    81b6:	80 95       	com	r24
    81b8:	08 95       	ret

000081ba <__udivmodhi4>:
    81ba:	aa 1b       	sub	r26, r26
    81bc:	bb 1b       	sub	r27, r27
    81be:	51 e1       	ldi	r21, 0x11	; 17
    81c0:	07 c0       	rjmp	.+14     	; 0x81d0 <__udivmodhi4_ep>

000081c2 <__udivmodhi4_loop>:
    81c2:	aa 1f       	adc	r26, r26
    81c4:	bb 1f       	adc	r27, r27
    81c6:	a6 17       	cp	r26, r22
    81c8:	b7 07       	cpc	r27, r23
    81ca:	10 f0       	brcs	.+4      	; 0x81d0 <__udivmodhi4_ep>
    81cc:	a6 1b       	sub	r26, r22
    81ce:	b7 0b       	sbc	r27, r23

000081d0 <__udivmodhi4_ep>:
    81d0:	88 1f       	adc	r24, r24
    81d2:	99 1f       	adc	r25, r25
    81d4:	5a 95       	dec	r21
    81d6:	a9 f7       	brne	.-22     	; 0x81c2 <__udivmodhi4_loop>
    81d8:	80 95       	com	r24
    81da:	90 95       	com	r25
    81dc:	bc 01       	movw	r22, r24
    81de:	cd 01       	movw	r24, r26
    81e0:	08 95       	ret

000081e2 <__divmodhi4>:
    81e2:	97 fb       	bst	r25, 7
    81e4:	09 2e       	mov	r0, r25
    81e6:	07 26       	eor	r0, r23
    81e8:	0a d0       	rcall	.+20     	; 0x81fe <__divmodhi4_neg1>
    81ea:	77 fd       	sbrc	r23, 7
    81ec:	04 d0       	rcall	.+8      	; 0x81f6 <__divmodhi4_neg2>
    81ee:	e5 df       	rcall	.-54     	; 0x81ba <__udivmodhi4>
    81f0:	06 d0       	rcall	.+12     	; 0x81fe <__divmodhi4_neg1>
    81f2:	00 20       	and	r0, r0
    81f4:	1a f4       	brpl	.+6      	; 0x81fc <__divmodhi4_exit>

000081f6 <__divmodhi4_neg2>:
    81f6:	70 95       	com	r23
    81f8:	61 95       	neg	r22
    81fa:	7f 4f       	sbci	r23, 0xFF	; 255

000081fc <__divmodhi4_exit>:
    81fc:	08 95       	ret

000081fe <__divmodhi4_neg1>:
    81fe:	f6 f7       	brtc	.-4      	; 0x81fc <__divmodhi4_exit>
    8200:	90 95       	com	r25
    8202:	81 95       	neg	r24
    8204:	9f 4f       	sbci	r25, 0xFF	; 255
    8206:	08 95       	ret

00008208 <__udivmodsi4>:
    8208:	a1 e2       	ldi	r26, 0x21	; 33
    820a:	1a 2e       	mov	r1, r26
    820c:	aa 1b       	sub	r26, r26
    820e:	bb 1b       	sub	r27, r27
    8210:	fd 01       	movw	r30, r26
    8212:	0d c0       	rjmp	.+26     	; 0x822e <__udivmodsi4_ep>

00008214 <__udivmodsi4_loop>:
    8214:	aa 1f       	adc	r26, r26
    8216:	bb 1f       	adc	r27, r27
    8218:	ee 1f       	adc	r30, r30
    821a:	ff 1f       	adc	r31, r31
    821c:	a2 17       	cp	r26, r18
    821e:	b3 07       	cpc	r27, r19
    8220:	e4 07       	cpc	r30, r20
    8222:	f5 07       	cpc	r31, r21
    8224:	20 f0       	brcs	.+8      	; 0x822e <__udivmodsi4_ep>
    8226:	a2 1b       	sub	r26, r18
    8228:	b3 0b       	sbc	r27, r19
    822a:	e4 0b       	sbc	r30, r20
    822c:	f5 0b       	sbc	r31, r21

0000822e <__udivmodsi4_ep>:
    822e:	66 1f       	adc	r22, r22
    8230:	77 1f       	adc	r23, r23
    8232:	88 1f       	adc	r24, r24
    8234:	99 1f       	adc	r25, r25
    8236:	1a 94       	dec	r1
    8238:	69 f7       	brne	.-38     	; 0x8214 <__udivmodsi4_loop>
    823a:	60 95       	com	r22
    823c:	70 95       	com	r23
    823e:	80 95       	com	r24
    8240:	90 95       	com	r25
    8242:	9b 01       	movw	r18, r22
    8244:	ac 01       	movw	r20, r24
    8246:	bd 01       	movw	r22, r26
    8248:	cf 01       	movw	r24, r30
    824a:	08 95       	ret

0000824c <__divmodsi4>:
    824c:	97 fb       	bst	r25, 7
    824e:	09 2e       	mov	r0, r25
    8250:	05 26       	eor	r0, r21
    8252:	0e d0       	rcall	.+28     	; 0x8270 <__divmodsi4_neg1>
    8254:	57 fd       	sbrc	r21, 7
    8256:	04 d0       	rcall	.+8      	; 0x8260 <__divmodsi4_neg2>
    8258:	d7 df       	rcall	.-82     	; 0x8208 <__udivmodsi4>
    825a:	0a d0       	rcall	.+20     	; 0x8270 <__divmodsi4_neg1>
    825c:	00 1c       	adc	r0, r0
    825e:	38 f4       	brcc	.+14     	; 0x826e <__divmodsi4_exit>

00008260 <__divmodsi4_neg2>:
    8260:	50 95       	com	r21
    8262:	40 95       	com	r20
    8264:	30 95       	com	r19
    8266:	21 95       	neg	r18
    8268:	3f 4f       	sbci	r19, 0xFF	; 255
    826a:	4f 4f       	sbci	r20, 0xFF	; 255
    826c:	5f 4f       	sbci	r21, 0xFF	; 255

0000826e <__divmodsi4_exit>:
    826e:	08 95       	ret

00008270 <__divmodsi4_neg1>:
    8270:	f6 f7       	brtc	.-4      	; 0x826e <__divmodsi4_exit>
    8272:	90 95       	com	r25
    8274:	80 95       	com	r24
    8276:	70 95       	com	r23
    8278:	61 95       	neg	r22
    827a:	7f 4f       	sbci	r23, 0xFF	; 255
    827c:	8f 4f       	sbci	r24, 0xFF	; 255
    827e:	9f 4f       	sbci	r25, 0xFF	; 255
    8280:	08 95       	ret

00008282 <__prologue_saves__>:
    8282:	2f 92       	push	r2
    8284:	3f 92       	push	r3
    8286:	4f 92       	push	r4
    8288:	5f 92       	push	r5
    828a:	6f 92       	push	r6
    828c:	7f 92       	push	r7
    828e:	8f 92       	push	r8
    8290:	9f 92       	push	r9
    8292:	af 92       	push	r10
    8294:	bf 92       	push	r11
    8296:	cf 92       	push	r12
    8298:	df 92       	push	r13
    829a:	ef 92       	push	r14
    829c:	ff 92       	push	r15
    829e:	0f 93       	push	r16
    82a0:	1f 93       	push	r17
    82a2:	cf 93       	push	r28
    82a4:	df 93       	push	r29
    82a6:	cd b7       	in	r28, 0x3d	; 61
    82a8:	de b7       	in	r29, 0x3e	; 62
    82aa:	ca 1b       	sub	r28, r26
    82ac:	db 0b       	sbc	r29, r27
    82ae:	0f b6       	in	r0, 0x3f	; 63
    82b0:	f8 94       	cli
    82b2:	de bf       	out	0x3e, r29	; 62
    82b4:	0f be       	out	0x3f, r0	; 63
    82b6:	cd bf       	out	0x3d, r28	; 61
    82b8:	09 94       	ijmp

000082ba <__epilogue_restores__>:
    82ba:	2a 88       	ldd	r2, Y+18	; 0x12
    82bc:	39 88       	ldd	r3, Y+17	; 0x11
    82be:	48 88       	ldd	r4, Y+16	; 0x10
    82c0:	5f 84       	ldd	r5, Y+15	; 0x0f
    82c2:	6e 84       	ldd	r6, Y+14	; 0x0e
    82c4:	7d 84       	ldd	r7, Y+13	; 0x0d
    82c6:	8c 84       	ldd	r8, Y+12	; 0x0c
    82c8:	9b 84       	ldd	r9, Y+11	; 0x0b
    82ca:	aa 84       	ldd	r10, Y+10	; 0x0a
    82cc:	b9 84       	ldd	r11, Y+9	; 0x09
    82ce:	c8 84       	ldd	r12, Y+8	; 0x08
    82d0:	df 80       	ldd	r13, Y+7	; 0x07
    82d2:	ee 80       	ldd	r14, Y+6	; 0x06
    82d4:	fd 80       	ldd	r15, Y+5	; 0x05
    82d6:	0c 81       	ldd	r16, Y+4	; 0x04
    82d8:	1b 81       	ldd	r17, Y+3	; 0x03
    82da:	aa 81       	ldd	r26, Y+2	; 0x02
    82dc:	b9 81       	ldd	r27, Y+1	; 0x01
    82de:	ce 0f       	add	r28, r30
    82e0:	d1 1d       	adc	r29, r1
    82e2:	0f b6       	in	r0, 0x3f	; 63
    82e4:	f8 94       	cli
    82e6:	de bf       	out	0x3e, r29	; 62
    82e8:	0f be       	out	0x3f, r0	; 63
    82ea:	cd bf       	out	0x3d, r28	; 61
    82ec:	ed 01       	movw	r28, r26
    82ee:	08 95       	ret

000082f0 <malloc>:
    82f0:	cf 93       	push	r28
    82f2:	df 93       	push	r29
    82f4:	bc 01       	movw	r22, r24
    82f6:	82 30       	cpi	r24, 0x02	; 2
    82f8:	91 05       	cpc	r25, r1
    82fa:	10 f4       	brcc	.+4      	; 0x8300 <malloc+0x10>
    82fc:	62 e0       	ldi	r22, 0x02	; 2
    82fe:	70 e0       	ldi	r23, 0x00	; 0
    8300:	a0 91 c1 09 	lds	r26, 0x09C1
    8304:	b0 91 c2 09 	lds	r27, 0x09C2
    8308:	ed 01       	movw	r28, r26
    830a:	e0 e0       	ldi	r30, 0x00	; 0
    830c:	f0 e0       	ldi	r31, 0x00	; 0
    830e:	40 e0       	ldi	r20, 0x00	; 0
    8310:	50 e0       	ldi	r21, 0x00	; 0
    8312:	21 c0       	rjmp	.+66     	; 0x8356 <malloc+0x66>
    8314:	88 81       	ld	r24, Y
    8316:	99 81       	ldd	r25, Y+1	; 0x01
    8318:	86 17       	cp	r24, r22
    831a:	97 07       	cpc	r25, r23
    831c:	69 f4       	brne	.+26     	; 0x8338 <malloc+0x48>
    831e:	8a 81       	ldd	r24, Y+2	; 0x02
    8320:	9b 81       	ldd	r25, Y+3	; 0x03
    8322:	30 97       	sbiw	r30, 0x00	; 0
    8324:	19 f0       	breq	.+6      	; 0x832c <malloc+0x3c>
    8326:	93 83       	std	Z+3, r25	; 0x03
    8328:	82 83       	std	Z+2, r24	; 0x02
    832a:	04 c0       	rjmp	.+8      	; 0x8334 <malloc+0x44>
    832c:	90 93 c2 09 	sts	0x09C2, r25
    8330:	80 93 c1 09 	sts	0x09C1, r24
    8334:	fe 01       	movw	r30, r28
    8336:	34 c0       	rjmp	.+104    	; 0x83a0 <malloc+0xb0>
    8338:	68 17       	cp	r22, r24
    833a:	79 07       	cpc	r23, r25
    833c:	38 f4       	brcc	.+14     	; 0x834c <malloc+0x5c>
    833e:	41 15       	cp	r20, r1
    8340:	51 05       	cpc	r21, r1
    8342:	19 f0       	breq	.+6      	; 0x834a <malloc+0x5a>
    8344:	84 17       	cp	r24, r20
    8346:	95 07       	cpc	r25, r21
    8348:	08 f4       	brcc	.+2      	; 0x834c <malloc+0x5c>
    834a:	ac 01       	movw	r20, r24
    834c:	fe 01       	movw	r30, r28
    834e:	8a 81       	ldd	r24, Y+2	; 0x02
    8350:	9b 81       	ldd	r25, Y+3	; 0x03
    8352:	9c 01       	movw	r18, r24
    8354:	e9 01       	movw	r28, r18
    8356:	20 97       	sbiw	r28, 0x00	; 0
    8358:	e9 f6       	brne	.-70     	; 0x8314 <malloc+0x24>
    835a:	41 15       	cp	r20, r1
    835c:	51 05       	cpc	r21, r1
    835e:	a9 f1       	breq	.+106    	; 0x83ca <malloc+0xda>
    8360:	ca 01       	movw	r24, r20
    8362:	86 1b       	sub	r24, r22
    8364:	97 0b       	sbc	r25, r23
    8366:	04 97       	sbiw	r24, 0x04	; 4
    8368:	08 f4       	brcc	.+2      	; 0x836c <malloc+0x7c>
    836a:	ba 01       	movw	r22, r20
    836c:	e0 e0       	ldi	r30, 0x00	; 0
    836e:	f0 e0       	ldi	r31, 0x00	; 0
    8370:	2a c0       	rjmp	.+84     	; 0x83c6 <malloc+0xd6>
    8372:	8d 91       	ld	r24, X+
    8374:	9c 91       	ld	r25, X
    8376:	11 97       	sbiw	r26, 0x01	; 1
    8378:	84 17       	cp	r24, r20
    837a:	95 07       	cpc	r25, r21
    837c:	f9 f4       	brne	.+62     	; 0x83bc <malloc+0xcc>
    837e:	64 17       	cp	r22, r20
    8380:	75 07       	cpc	r23, r21
    8382:	81 f4       	brne	.+32     	; 0x83a4 <malloc+0xb4>
    8384:	12 96       	adiw	r26, 0x02	; 2
    8386:	8d 91       	ld	r24, X+
    8388:	9c 91       	ld	r25, X
    838a:	13 97       	sbiw	r26, 0x03	; 3
    838c:	30 97       	sbiw	r30, 0x00	; 0
    838e:	19 f0       	breq	.+6      	; 0x8396 <malloc+0xa6>
    8390:	93 83       	std	Z+3, r25	; 0x03
    8392:	82 83       	std	Z+2, r24	; 0x02
    8394:	04 c0       	rjmp	.+8      	; 0x839e <malloc+0xae>
    8396:	90 93 c2 09 	sts	0x09C2, r25
    839a:	80 93 c1 09 	sts	0x09C1, r24
    839e:	fd 01       	movw	r30, r26
    83a0:	32 96       	adiw	r30, 0x02	; 2
    83a2:	4f c0       	rjmp	.+158    	; 0x8442 <malloc+0x152>
    83a4:	ca 01       	movw	r24, r20
    83a6:	86 1b       	sub	r24, r22
    83a8:	97 0b       	sbc	r25, r23
    83aa:	fd 01       	movw	r30, r26
    83ac:	e8 0f       	add	r30, r24
    83ae:	f9 1f       	adc	r31, r25
    83b0:	61 93       	st	Z+, r22
    83b2:	71 93       	st	Z+, r23
    83b4:	02 97       	sbiw	r24, 0x02	; 2
    83b6:	8d 93       	st	X+, r24
    83b8:	9c 93       	st	X, r25
    83ba:	43 c0       	rjmp	.+134    	; 0x8442 <malloc+0x152>
    83bc:	fd 01       	movw	r30, r26
    83be:	82 81       	ldd	r24, Z+2	; 0x02
    83c0:	93 81       	ldd	r25, Z+3	; 0x03
    83c2:	9c 01       	movw	r18, r24
    83c4:	d9 01       	movw	r26, r18
    83c6:	10 97       	sbiw	r26, 0x00	; 0
    83c8:	a1 f6       	brne	.-88     	; 0x8372 <malloc+0x82>
    83ca:	80 91 bf 09 	lds	r24, 0x09BF
    83ce:	90 91 c0 09 	lds	r25, 0x09C0
    83d2:	89 2b       	or	r24, r25
    83d4:	41 f4       	brne	.+16     	; 0x83e6 <malloc+0xf6>
    83d6:	80 91 01 05 	lds	r24, 0x0501
    83da:	90 91 02 05 	lds	r25, 0x0502
    83de:	90 93 c0 09 	sts	0x09C0, r25
    83e2:	80 93 bf 09 	sts	0x09BF, r24
    83e6:	40 91 03 05 	lds	r20, 0x0503
    83ea:	50 91 04 05 	lds	r21, 0x0504
    83ee:	41 15       	cp	r20, r1
    83f0:	51 05       	cpc	r21, r1
    83f2:	41 f4       	brne	.+16     	; 0x8404 <malloc+0x114>
    83f4:	4d b7       	in	r20, 0x3d	; 61
    83f6:	5e b7       	in	r21, 0x3e	; 62
    83f8:	80 91 ff 04 	lds	r24, 0x04FF
    83fc:	90 91 00 05 	lds	r25, 0x0500
    8400:	48 1b       	sub	r20, r24
    8402:	59 0b       	sbc	r21, r25
    8404:	20 91 bf 09 	lds	r18, 0x09BF
    8408:	30 91 c0 09 	lds	r19, 0x09C0
    840c:	24 17       	cp	r18, r20
    840e:	35 07       	cpc	r19, r21
    8410:	b0 f4       	brcc	.+44     	; 0x843e <malloc+0x14e>
    8412:	ca 01       	movw	r24, r20
    8414:	82 1b       	sub	r24, r18
    8416:	93 0b       	sbc	r25, r19
    8418:	86 17       	cp	r24, r22
    841a:	97 07       	cpc	r25, r23
    841c:	80 f0       	brcs	.+32     	; 0x843e <malloc+0x14e>
    841e:	ab 01       	movw	r20, r22
    8420:	4e 5f       	subi	r20, 0xFE	; 254
    8422:	5f 4f       	sbci	r21, 0xFF	; 255
    8424:	84 17       	cp	r24, r20
    8426:	95 07       	cpc	r25, r21
    8428:	50 f0       	brcs	.+20     	; 0x843e <malloc+0x14e>
    842a:	42 0f       	add	r20, r18
    842c:	53 1f       	adc	r21, r19
    842e:	50 93 c0 09 	sts	0x09C0, r21
    8432:	40 93 bf 09 	sts	0x09BF, r20
    8436:	f9 01       	movw	r30, r18
    8438:	61 93       	st	Z+, r22
    843a:	71 93       	st	Z+, r23
    843c:	02 c0       	rjmp	.+4      	; 0x8442 <malloc+0x152>
    843e:	e0 e0       	ldi	r30, 0x00	; 0
    8440:	f0 e0       	ldi	r31, 0x00	; 0
    8442:	cf 01       	movw	r24, r30
    8444:	df 91       	pop	r29
    8446:	cf 91       	pop	r28
    8448:	08 95       	ret

0000844a <free>:
    844a:	cf 93       	push	r28
    844c:	df 93       	push	r29
    844e:	00 97       	sbiw	r24, 0x00	; 0
    8450:	09 f4       	brne	.+2      	; 0x8454 <free+0xa>
    8452:	50 c0       	rjmp	.+160    	; 0x84f4 <free+0xaa>
    8454:	ec 01       	movw	r28, r24
    8456:	22 97       	sbiw	r28, 0x02	; 2
    8458:	1b 82       	std	Y+3, r1	; 0x03
    845a:	1a 82       	std	Y+2, r1	; 0x02
    845c:	a0 91 c1 09 	lds	r26, 0x09C1
    8460:	b0 91 c2 09 	lds	r27, 0x09C2
    8464:	10 97       	sbiw	r26, 0x00	; 0
    8466:	09 f1       	breq	.+66     	; 0x84aa <free+0x60>
    8468:	40 e0       	ldi	r20, 0x00	; 0
    846a:	50 e0       	ldi	r21, 0x00	; 0
    846c:	ac 17       	cp	r26, r28
    846e:	bd 07       	cpc	r27, r29
    8470:	08 f1       	brcs	.+66     	; 0x84b4 <free+0x6a>
    8472:	bb 83       	std	Y+3, r27	; 0x03
    8474:	aa 83       	std	Y+2, r26	; 0x02
    8476:	fe 01       	movw	r30, r28
    8478:	21 91       	ld	r18, Z+
    847a:	31 91       	ld	r19, Z+
    847c:	e2 0f       	add	r30, r18
    847e:	f3 1f       	adc	r31, r19
    8480:	ae 17       	cp	r26, r30
    8482:	bf 07       	cpc	r27, r31
    8484:	79 f4       	brne	.+30     	; 0x84a4 <free+0x5a>
    8486:	8d 91       	ld	r24, X+
    8488:	9c 91       	ld	r25, X
    848a:	11 97       	sbiw	r26, 0x01	; 1
    848c:	28 0f       	add	r18, r24
    848e:	39 1f       	adc	r19, r25
    8490:	2e 5f       	subi	r18, 0xFE	; 254
    8492:	3f 4f       	sbci	r19, 0xFF	; 255
    8494:	39 83       	std	Y+1, r19	; 0x01
    8496:	28 83       	st	Y, r18
    8498:	12 96       	adiw	r26, 0x02	; 2
    849a:	8d 91       	ld	r24, X+
    849c:	9c 91       	ld	r25, X
    849e:	13 97       	sbiw	r26, 0x03	; 3
    84a0:	9b 83       	std	Y+3, r25	; 0x03
    84a2:	8a 83       	std	Y+2, r24	; 0x02
    84a4:	41 15       	cp	r20, r1
    84a6:	51 05       	cpc	r21, r1
    84a8:	71 f4       	brne	.+28     	; 0x84c6 <free+0x7c>
    84aa:	d0 93 c2 09 	sts	0x09C2, r29
    84ae:	c0 93 c1 09 	sts	0x09C1, r28
    84b2:	20 c0       	rjmp	.+64     	; 0x84f4 <free+0xaa>
    84b4:	12 96       	adiw	r26, 0x02	; 2
    84b6:	8d 91       	ld	r24, X+
    84b8:	9c 91       	ld	r25, X
    84ba:	13 97       	sbiw	r26, 0x03	; 3
    84bc:	ad 01       	movw	r20, r26
    84be:	00 97       	sbiw	r24, 0x00	; 0
    84c0:	11 f0       	breq	.+4      	; 0x84c6 <free+0x7c>
    84c2:	dc 01       	movw	r26, r24
    84c4:	d3 cf       	rjmp	.-90     	; 0x846c <free+0x22>
    84c6:	fa 01       	movw	r30, r20
    84c8:	d3 83       	std	Z+3, r29	; 0x03
    84ca:	c2 83       	std	Z+2, r28	; 0x02
    84cc:	21 91       	ld	r18, Z+
    84ce:	31 91       	ld	r19, Z+
    84d0:	e2 0f       	add	r30, r18
    84d2:	f3 1f       	adc	r31, r19
    84d4:	ce 17       	cp	r28, r30
    84d6:	df 07       	cpc	r29, r31
    84d8:	69 f4       	brne	.+26     	; 0x84f4 <free+0xaa>
    84da:	88 81       	ld	r24, Y
    84dc:	99 81       	ldd	r25, Y+1	; 0x01
    84de:	28 0f       	add	r18, r24
    84e0:	39 1f       	adc	r19, r25
    84e2:	2e 5f       	subi	r18, 0xFE	; 254
    84e4:	3f 4f       	sbci	r19, 0xFF	; 255
    84e6:	fa 01       	movw	r30, r20
    84e8:	31 83       	std	Z+1, r19	; 0x01
    84ea:	20 83       	st	Z, r18
    84ec:	8a 81       	ldd	r24, Y+2	; 0x02
    84ee:	9b 81       	ldd	r25, Y+3	; 0x03
    84f0:	93 83       	std	Z+3, r25	; 0x03
    84f2:	82 83       	std	Z+2, r24	; 0x02
    84f4:	df 91       	pop	r29
    84f6:	cf 91       	pop	r28
    84f8:	08 95       	ret

000084fa <strcpy>:
    84fa:	fb 01       	movw	r30, r22
    84fc:	dc 01       	movw	r26, r24
    84fe:	01 90       	ld	r0, Z+
    8500:	0d 92       	st	X+, r0
    8502:	00 20       	and	r0, r0
    8504:	e1 f7       	brne	.-8      	; 0x84fe <strcpy+0x4>
    8506:	08 95       	ret

00008508 <sprintf>:
    8508:	0f 93       	push	r16
    850a:	1f 93       	push	r17
    850c:	df 93       	push	r29
    850e:	cf 93       	push	r28
    8510:	cd b7       	in	r28, 0x3d	; 61
    8512:	de b7       	in	r29, 0x3e	; 62
    8514:	2e 97       	sbiw	r28, 0x0e	; 14
    8516:	0f b6       	in	r0, 0x3f	; 63
    8518:	f8 94       	cli
    851a:	de bf       	out	0x3e, r29	; 62
    851c:	0f be       	out	0x3f, r0	; 63
    851e:	cd bf       	out	0x3d, r28	; 61
    8520:	0d 89       	ldd	r16, Y+21	; 0x15
    8522:	1e 89       	ldd	r17, Y+22	; 0x16
    8524:	86 e0       	ldi	r24, 0x06	; 6
    8526:	8c 83       	std	Y+4, r24	; 0x04
    8528:	1a 83       	std	Y+2, r17	; 0x02
    852a:	09 83       	std	Y+1, r16	; 0x01
    852c:	8f ef       	ldi	r24, 0xFF	; 255
    852e:	9f e7       	ldi	r25, 0x7F	; 127
    8530:	9e 83       	std	Y+6, r25	; 0x06
    8532:	8d 83       	std	Y+5, r24	; 0x05
    8534:	9e 01       	movw	r18, r28
    8536:	27 5e       	subi	r18, 0xE7	; 231
    8538:	3f 4f       	sbci	r19, 0xFF	; 255
    853a:	ce 01       	movw	r24, r28
    853c:	01 96       	adiw	r24, 0x01	; 1
    853e:	6f 89       	ldd	r22, Y+23	; 0x17
    8540:	78 8d       	ldd	r23, Y+24	; 0x18
    8542:	a9 01       	movw	r20, r18
    8544:	0e 94 b5 42 	call	0x856a	; 0x856a <vfprintf>
    8548:	2f 81       	ldd	r18, Y+7	; 0x07
    854a:	38 85       	ldd	r19, Y+8	; 0x08
    854c:	02 0f       	add	r16, r18
    854e:	13 1f       	adc	r17, r19
    8550:	f8 01       	movw	r30, r16
    8552:	10 82       	st	Z, r1
    8554:	2e 96       	adiw	r28, 0x0e	; 14
    8556:	0f b6       	in	r0, 0x3f	; 63
    8558:	f8 94       	cli
    855a:	de bf       	out	0x3e, r29	; 62
    855c:	0f be       	out	0x3f, r0	; 63
    855e:	cd bf       	out	0x3d, r28	; 61
    8560:	cf 91       	pop	r28
    8562:	df 91       	pop	r29
    8564:	1f 91       	pop	r17
    8566:	0f 91       	pop	r16
    8568:	08 95       	ret

0000856a <vfprintf>:
    856a:	2f 92       	push	r2
    856c:	3f 92       	push	r3
    856e:	4f 92       	push	r4
    8570:	5f 92       	push	r5
    8572:	6f 92       	push	r6
    8574:	7f 92       	push	r7
    8576:	8f 92       	push	r8
    8578:	9f 92       	push	r9
    857a:	af 92       	push	r10
    857c:	bf 92       	push	r11
    857e:	cf 92       	push	r12
    8580:	df 92       	push	r13
    8582:	ef 92       	push	r14
    8584:	ff 92       	push	r15
    8586:	0f 93       	push	r16
    8588:	1f 93       	push	r17
    858a:	df 93       	push	r29
    858c:	cf 93       	push	r28
    858e:	cd b7       	in	r28, 0x3d	; 61
    8590:	de b7       	in	r29, 0x3e	; 62
    8592:	2b 97       	sbiw	r28, 0x0b	; 11
    8594:	0f b6       	in	r0, 0x3f	; 63
    8596:	f8 94       	cli
    8598:	de bf       	out	0x3e, r29	; 62
    859a:	0f be       	out	0x3f, r0	; 63
    859c:	cd bf       	out	0x3d, r28	; 61
    859e:	3c 01       	movw	r6, r24
    85a0:	2b 01       	movw	r4, r22
    85a2:	5a 01       	movw	r10, r20
    85a4:	fc 01       	movw	r30, r24
    85a6:	17 82       	std	Z+7, r1	; 0x07
    85a8:	16 82       	std	Z+6, r1	; 0x06
    85aa:	83 81       	ldd	r24, Z+3	; 0x03
    85ac:	81 fd       	sbrc	r24, 1
    85ae:	03 c0       	rjmp	.+6      	; 0x85b6 <vfprintf+0x4c>
    85b0:	6f ef       	ldi	r22, 0xFF	; 255
    85b2:	7f ef       	ldi	r23, 0xFF	; 255
    85b4:	c6 c1       	rjmp	.+908    	; 0x8942 <vfprintf+0x3d8>
    85b6:	9a e0       	ldi	r25, 0x0A	; 10
    85b8:	89 2e       	mov	r8, r25
    85ba:	1e 01       	movw	r2, r28
    85bc:	08 94       	sec
    85be:	21 1c       	adc	r2, r1
    85c0:	31 1c       	adc	r3, r1
    85c2:	f3 01       	movw	r30, r6
    85c4:	23 81       	ldd	r18, Z+3	; 0x03
    85c6:	f2 01       	movw	r30, r4
    85c8:	23 fd       	sbrc	r18, 3
    85ca:	85 91       	lpm	r24, Z+
    85cc:	23 ff       	sbrs	r18, 3
    85ce:	81 91       	ld	r24, Z+
    85d0:	2f 01       	movw	r4, r30
    85d2:	88 23       	and	r24, r24
    85d4:	09 f4       	brne	.+2      	; 0x85d8 <vfprintf+0x6e>
    85d6:	b2 c1       	rjmp	.+868    	; 0x893c <vfprintf+0x3d2>
    85d8:	85 32       	cpi	r24, 0x25	; 37
    85da:	39 f4       	brne	.+14     	; 0x85ea <vfprintf+0x80>
    85dc:	23 fd       	sbrc	r18, 3
    85de:	85 91       	lpm	r24, Z+
    85e0:	23 ff       	sbrs	r18, 3
    85e2:	81 91       	ld	r24, Z+
    85e4:	2f 01       	movw	r4, r30
    85e6:	85 32       	cpi	r24, 0x25	; 37
    85e8:	29 f4       	brne	.+10     	; 0x85f4 <vfprintf+0x8a>
    85ea:	90 e0       	ldi	r25, 0x00	; 0
    85ec:	b3 01       	movw	r22, r6
    85ee:	0e 94 d1 44 	call	0x89a2	; 0x89a2 <fputc>
    85f2:	e7 cf       	rjmp	.-50     	; 0x85c2 <vfprintf+0x58>
    85f4:	98 2f       	mov	r25, r24
    85f6:	ff 24       	eor	r15, r15
    85f8:	ee 24       	eor	r14, r14
    85fa:	99 24       	eor	r9, r9
    85fc:	ff e1       	ldi	r31, 0x1F	; 31
    85fe:	ff 15       	cp	r31, r15
    8600:	d0 f0       	brcs	.+52     	; 0x8636 <vfprintf+0xcc>
    8602:	9b 32       	cpi	r25, 0x2B	; 43
    8604:	69 f0       	breq	.+26     	; 0x8620 <vfprintf+0xb6>
    8606:	9c 32       	cpi	r25, 0x2C	; 44
    8608:	28 f4       	brcc	.+10     	; 0x8614 <vfprintf+0xaa>
    860a:	90 32       	cpi	r25, 0x20	; 32
    860c:	59 f0       	breq	.+22     	; 0x8624 <vfprintf+0xba>
    860e:	93 32       	cpi	r25, 0x23	; 35
    8610:	91 f4       	brne	.+36     	; 0x8636 <vfprintf+0xcc>
    8612:	0e c0       	rjmp	.+28     	; 0x8630 <vfprintf+0xc6>
    8614:	9d 32       	cpi	r25, 0x2D	; 45
    8616:	49 f0       	breq	.+18     	; 0x862a <vfprintf+0xc0>
    8618:	90 33       	cpi	r25, 0x30	; 48
    861a:	69 f4       	brne	.+26     	; 0x8636 <vfprintf+0xcc>
    861c:	41 e0       	ldi	r20, 0x01	; 1
    861e:	24 c0       	rjmp	.+72     	; 0x8668 <vfprintf+0xfe>
    8620:	52 e0       	ldi	r21, 0x02	; 2
    8622:	f5 2a       	or	r15, r21
    8624:	84 e0       	ldi	r24, 0x04	; 4
    8626:	f8 2a       	or	r15, r24
    8628:	28 c0       	rjmp	.+80     	; 0x867a <vfprintf+0x110>
    862a:	98 e0       	ldi	r25, 0x08	; 8
    862c:	f9 2a       	or	r15, r25
    862e:	25 c0       	rjmp	.+74     	; 0x867a <vfprintf+0x110>
    8630:	e0 e1       	ldi	r30, 0x10	; 16
    8632:	fe 2a       	or	r15, r30
    8634:	22 c0       	rjmp	.+68     	; 0x867a <vfprintf+0x110>
    8636:	f7 fc       	sbrc	r15, 7
    8638:	29 c0       	rjmp	.+82     	; 0x868c <vfprintf+0x122>
    863a:	89 2f       	mov	r24, r25
    863c:	80 53       	subi	r24, 0x30	; 48
    863e:	8a 30       	cpi	r24, 0x0A	; 10
    8640:	70 f4       	brcc	.+28     	; 0x865e <vfprintf+0xf4>
    8642:	f6 fe       	sbrs	r15, 6
    8644:	05 c0       	rjmp	.+10     	; 0x8650 <vfprintf+0xe6>
    8646:	98 9c       	mul	r9, r8
    8648:	90 2c       	mov	r9, r0
    864a:	11 24       	eor	r1, r1
    864c:	98 0e       	add	r9, r24
    864e:	15 c0       	rjmp	.+42     	; 0x867a <vfprintf+0x110>
    8650:	e8 9c       	mul	r14, r8
    8652:	e0 2c       	mov	r14, r0
    8654:	11 24       	eor	r1, r1
    8656:	e8 0e       	add	r14, r24
    8658:	f0 e2       	ldi	r31, 0x20	; 32
    865a:	ff 2a       	or	r15, r31
    865c:	0e c0       	rjmp	.+28     	; 0x867a <vfprintf+0x110>
    865e:	9e 32       	cpi	r25, 0x2E	; 46
    8660:	29 f4       	brne	.+10     	; 0x866c <vfprintf+0x102>
    8662:	f6 fc       	sbrc	r15, 6
    8664:	6b c1       	rjmp	.+726    	; 0x893c <vfprintf+0x3d2>
    8666:	40 e4       	ldi	r20, 0x40	; 64
    8668:	f4 2a       	or	r15, r20
    866a:	07 c0       	rjmp	.+14     	; 0x867a <vfprintf+0x110>
    866c:	9c 36       	cpi	r25, 0x6C	; 108
    866e:	19 f4       	brne	.+6      	; 0x8676 <vfprintf+0x10c>
    8670:	50 e8       	ldi	r21, 0x80	; 128
    8672:	f5 2a       	or	r15, r21
    8674:	02 c0       	rjmp	.+4      	; 0x867a <vfprintf+0x110>
    8676:	98 36       	cpi	r25, 0x68	; 104
    8678:	49 f4       	brne	.+18     	; 0x868c <vfprintf+0x122>
    867a:	f2 01       	movw	r30, r4
    867c:	23 fd       	sbrc	r18, 3
    867e:	95 91       	lpm	r25, Z+
    8680:	23 ff       	sbrs	r18, 3
    8682:	91 91       	ld	r25, Z+
    8684:	2f 01       	movw	r4, r30
    8686:	99 23       	and	r25, r25
    8688:	09 f0       	breq	.+2      	; 0x868c <vfprintf+0x122>
    868a:	b8 cf       	rjmp	.-144    	; 0x85fc <vfprintf+0x92>
    868c:	89 2f       	mov	r24, r25
    868e:	85 54       	subi	r24, 0x45	; 69
    8690:	83 30       	cpi	r24, 0x03	; 3
    8692:	18 f0       	brcs	.+6      	; 0x869a <vfprintf+0x130>
    8694:	80 52       	subi	r24, 0x20	; 32
    8696:	83 30       	cpi	r24, 0x03	; 3
    8698:	38 f4       	brcc	.+14     	; 0x86a8 <vfprintf+0x13e>
    869a:	44 e0       	ldi	r20, 0x04	; 4
    869c:	50 e0       	ldi	r21, 0x00	; 0
    869e:	a4 0e       	add	r10, r20
    86a0:	b5 1e       	adc	r11, r21
    86a2:	5f e3       	ldi	r21, 0x3F	; 63
    86a4:	59 83       	std	Y+1, r21	; 0x01
    86a6:	0f c0       	rjmp	.+30     	; 0x86c6 <vfprintf+0x15c>
    86a8:	93 36       	cpi	r25, 0x63	; 99
    86aa:	31 f0       	breq	.+12     	; 0x86b8 <vfprintf+0x14e>
    86ac:	93 37       	cpi	r25, 0x73	; 115
    86ae:	79 f0       	breq	.+30     	; 0x86ce <vfprintf+0x164>
    86b0:	93 35       	cpi	r25, 0x53	; 83
    86b2:	09 f0       	breq	.+2      	; 0x86b6 <vfprintf+0x14c>
    86b4:	56 c0       	rjmp	.+172    	; 0x8762 <vfprintf+0x1f8>
    86b6:	20 c0       	rjmp	.+64     	; 0x86f8 <vfprintf+0x18e>
    86b8:	f5 01       	movw	r30, r10
    86ba:	80 81       	ld	r24, Z
    86bc:	89 83       	std	Y+1, r24	; 0x01
    86be:	42 e0       	ldi	r20, 0x02	; 2
    86c0:	50 e0       	ldi	r21, 0x00	; 0
    86c2:	a4 0e       	add	r10, r20
    86c4:	b5 1e       	adc	r11, r21
    86c6:	61 01       	movw	r12, r2
    86c8:	01 e0       	ldi	r16, 0x01	; 1
    86ca:	10 e0       	ldi	r17, 0x00	; 0
    86cc:	12 c0       	rjmp	.+36     	; 0x86f2 <vfprintf+0x188>
    86ce:	f5 01       	movw	r30, r10
    86d0:	c0 80       	ld	r12, Z
    86d2:	d1 80       	ldd	r13, Z+1	; 0x01
    86d4:	f6 fc       	sbrc	r15, 6
    86d6:	03 c0       	rjmp	.+6      	; 0x86de <vfprintf+0x174>
    86d8:	6f ef       	ldi	r22, 0xFF	; 255
    86da:	7f ef       	ldi	r23, 0xFF	; 255
    86dc:	02 c0       	rjmp	.+4      	; 0x86e2 <vfprintf+0x178>
    86de:	69 2d       	mov	r22, r9
    86e0:	70 e0       	ldi	r23, 0x00	; 0
    86e2:	42 e0       	ldi	r20, 0x02	; 2
    86e4:	50 e0       	ldi	r21, 0x00	; 0
    86e6:	a4 0e       	add	r10, r20
    86e8:	b5 1e       	adc	r11, r21
    86ea:	c6 01       	movw	r24, r12
    86ec:	0e 94 c6 44 	call	0x898c	; 0x898c <strnlen>
    86f0:	8c 01       	movw	r16, r24
    86f2:	5f e7       	ldi	r21, 0x7F	; 127
    86f4:	f5 22       	and	r15, r21
    86f6:	14 c0       	rjmp	.+40     	; 0x8720 <vfprintf+0x1b6>
    86f8:	f5 01       	movw	r30, r10
    86fa:	c0 80       	ld	r12, Z
    86fc:	d1 80       	ldd	r13, Z+1	; 0x01
    86fe:	f6 fc       	sbrc	r15, 6
    8700:	03 c0       	rjmp	.+6      	; 0x8708 <vfprintf+0x19e>
    8702:	6f ef       	ldi	r22, 0xFF	; 255
    8704:	7f ef       	ldi	r23, 0xFF	; 255
    8706:	02 c0       	rjmp	.+4      	; 0x870c <vfprintf+0x1a2>
    8708:	69 2d       	mov	r22, r9
    870a:	70 e0       	ldi	r23, 0x00	; 0
    870c:	42 e0       	ldi	r20, 0x02	; 2
    870e:	50 e0       	ldi	r21, 0x00	; 0
    8710:	a4 0e       	add	r10, r20
    8712:	b5 1e       	adc	r11, r21
    8714:	c6 01       	movw	r24, r12
    8716:	0e 94 bb 44 	call	0x8976	; 0x8976 <strnlen_P>
    871a:	8c 01       	movw	r16, r24
    871c:	50 e8       	ldi	r21, 0x80	; 128
    871e:	f5 2a       	or	r15, r21
    8720:	f3 fe       	sbrs	r15, 3
    8722:	07 c0       	rjmp	.+14     	; 0x8732 <vfprintf+0x1c8>
    8724:	1a c0       	rjmp	.+52     	; 0x875a <vfprintf+0x1f0>
    8726:	80 e2       	ldi	r24, 0x20	; 32
    8728:	90 e0       	ldi	r25, 0x00	; 0
    872a:	b3 01       	movw	r22, r6
    872c:	0e 94 d1 44 	call	0x89a2	; 0x89a2 <fputc>
    8730:	ea 94       	dec	r14
    8732:	8e 2d       	mov	r24, r14
    8734:	90 e0       	ldi	r25, 0x00	; 0
    8736:	08 17       	cp	r16, r24
    8738:	19 07       	cpc	r17, r25
    873a:	a8 f3       	brcs	.-22     	; 0x8726 <vfprintf+0x1bc>
    873c:	0e c0       	rjmp	.+28     	; 0x875a <vfprintf+0x1f0>
    873e:	f6 01       	movw	r30, r12
    8740:	f7 fc       	sbrc	r15, 7
    8742:	85 91       	lpm	r24, Z+
    8744:	f7 fe       	sbrs	r15, 7
    8746:	81 91       	ld	r24, Z+
    8748:	6f 01       	movw	r12, r30
    874a:	90 e0       	ldi	r25, 0x00	; 0
    874c:	b3 01       	movw	r22, r6
    874e:	0e 94 d1 44 	call	0x89a2	; 0x89a2 <fputc>
    8752:	e1 10       	cpse	r14, r1
    8754:	ea 94       	dec	r14
    8756:	01 50       	subi	r16, 0x01	; 1
    8758:	10 40       	sbci	r17, 0x00	; 0
    875a:	01 15       	cp	r16, r1
    875c:	11 05       	cpc	r17, r1
    875e:	79 f7       	brne	.-34     	; 0x873e <vfprintf+0x1d4>
    8760:	ea c0       	rjmp	.+468    	; 0x8936 <vfprintf+0x3cc>
    8762:	94 36       	cpi	r25, 0x64	; 100
    8764:	11 f0       	breq	.+4      	; 0x876a <vfprintf+0x200>
    8766:	99 36       	cpi	r25, 0x69	; 105
    8768:	69 f5       	brne	.+90     	; 0x87c4 <vfprintf+0x25a>
    876a:	f7 fe       	sbrs	r15, 7
    876c:	08 c0       	rjmp	.+16     	; 0x877e <vfprintf+0x214>
    876e:	f5 01       	movw	r30, r10
    8770:	20 81       	ld	r18, Z
    8772:	31 81       	ldd	r19, Z+1	; 0x01
    8774:	42 81       	ldd	r20, Z+2	; 0x02
    8776:	53 81       	ldd	r21, Z+3	; 0x03
    8778:	84 e0       	ldi	r24, 0x04	; 4
    877a:	90 e0       	ldi	r25, 0x00	; 0
    877c:	0a c0       	rjmp	.+20     	; 0x8792 <vfprintf+0x228>
    877e:	f5 01       	movw	r30, r10
    8780:	80 81       	ld	r24, Z
    8782:	91 81       	ldd	r25, Z+1	; 0x01
    8784:	9c 01       	movw	r18, r24
    8786:	44 27       	eor	r20, r20
    8788:	37 fd       	sbrc	r19, 7
    878a:	40 95       	com	r20
    878c:	54 2f       	mov	r21, r20
    878e:	82 e0       	ldi	r24, 0x02	; 2
    8790:	90 e0       	ldi	r25, 0x00	; 0
    8792:	a8 0e       	add	r10, r24
    8794:	b9 1e       	adc	r11, r25
    8796:	9f e6       	ldi	r25, 0x6F	; 111
    8798:	f9 22       	and	r15, r25
    879a:	57 ff       	sbrs	r21, 7
    879c:	09 c0       	rjmp	.+18     	; 0x87b0 <vfprintf+0x246>
    879e:	50 95       	com	r21
    87a0:	40 95       	com	r20
    87a2:	30 95       	com	r19
    87a4:	21 95       	neg	r18
    87a6:	3f 4f       	sbci	r19, 0xFF	; 255
    87a8:	4f 4f       	sbci	r20, 0xFF	; 255
    87aa:	5f 4f       	sbci	r21, 0xFF	; 255
    87ac:	e0 e8       	ldi	r30, 0x80	; 128
    87ae:	fe 2a       	or	r15, r30
    87b0:	ca 01       	movw	r24, r20
    87b2:	b9 01       	movw	r22, r18
    87b4:	a1 01       	movw	r20, r2
    87b6:	2a e0       	ldi	r18, 0x0A	; 10
    87b8:	30 e0       	ldi	r19, 0x00	; 0
    87ba:	0e 94 fd 44 	call	0x89fa	; 0x89fa <__ultoa_invert>
    87be:	d8 2e       	mov	r13, r24
    87c0:	d2 18       	sub	r13, r2
    87c2:	40 c0       	rjmp	.+128    	; 0x8844 <vfprintf+0x2da>
    87c4:	95 37       	cpi	r25, 0x75	; 117
    87c6:	29 f4       	brne	.+10     	; 0x87d2 <vfprintf+0x268>
    87c8:	1f 2d       	mov	r17, r15
    87ca:	1f 7e       	andi	r17, 0xEF	; 239
    87cc:	2a e0       	ldi	r18, 0x0A	; 10
    87ce:	30 e0       	ldi	r19, 0x00	; 0
    87d0:	1d c0       	rjmp	.+58     	; 0x880c <vfprintf+0x2a2>
    87d2:	1f 2d       	mov	r17, r15
    87d4:	19 7f       	andi	r17, 0xF9	; 249
    87d6:	9f 36       	cpi	r25, 0x6F	; 111
    87d8:	61 f0       	breq	.+24     	; 0x87f2 <vfprintf+0x288>
    87da:	90 37       	cpi	r25, 0x70	; 112
    87dc:	20 f4       	brcc	.+8      	; 0x87e6 <vfprintf+0x27c>
    87de:	98 35       	cpi	r25, 0x58	; 88
    87e0:	09 f0       	breq	.+2      	; 0x87e4 <vfprintf+0x27a>
    87e2:	ac c0       	rjmp	.+344    	; 0x893c <vfprintf+0x3d2>
    87e4:	0f c0       	rjmp	.+30     	; 0x8804 <vfprintf+0x29a>
    87e6:	90 37       	cpi	r25, 0x70	; 112
    87e8:	39 f0       	breq	.+14     	; 0x87f8 <vfprintf+0x28e>
    87ea:	98 37       	cpi	r25, 0x78	; 120
    87ec:	09 f0       	breq	.+2      	; 0x87f0 <vfprintf+0x286>
    87ee:	a6 c0       	rjmp	.+332    	; 0x893c <vfprintf+0x3d2>
    87f0:	04 c0       	rjmp	.+8      	; 0x87fa <vfprintf+0x290>
    87f2:	28 e0       	ldi	r18, 0x08	; 8
    87f4:	30 e0       	ldi	r19, 0x00	; 0
    87f6:	0a c0       	rjmp	.+20     	; 0x880c <vfprintf+0x2a2>
    87f8:	10 61       	ori	r17, 0x10	; 16
    87fa:	14 fd       	sbrc	r17, 4
    87fc:	14 60       	ori	r17, 0x04	; 4
    87fe:	20 e1       	ldi	r18, 0x10	; 16
    8800:	30 e0       	ldi	r19, 0x00	; 0
    8802:	04 c0       	rjmp	.+8      	; 0x880c <vfprintf+0x2a2>
    8804:	14 fd       	sbrc	r17, 4
    8806:	16 60       	ori	r17, 0x06	; 6
    8808:	20 e1       	ldi	r18, 0x10	; 16
    880a:	32 e0       	ldi	r19, 0x02	; 2
    880c:	17 ff       	sbrs	r17, 7
    880e:	08 c0       	rjmp	.+16     	; 0x8820 <vfprintf+0x2b6>
    8810:	f5 01       	movw	r30, r10
    8812:	60 81       	ld	r22, Z
    8814:	71 81       	ldd	r23, Z+1	; 0x01
    8816:	82 81       	ldd	r24, Z+2	; 0x02
    8818:	93 81       	ldd	r25, Z+3	; 0x03
    881a:	44 e0       	ldi	r20, 0x04	; 4
    881c:	50 e0       	ldi	r21, 0x00	; 0
    881e:	08 c0       	rjmp	.+16     	; 0x8830 <vfprintf+0x2c6>
    8820:	f5 01       	movw	r30, r10
    8822:	80 81       	ld	r24, Z
    8824:	91 81       	ldd	r25, Z+1	; 0x01
    8826:	bc 01       	movw	r22, r24
    8828:	80 e0       	ldi	r24, 0x00	; 0
    882a:	90 e0       	ldi	r25, 0x00	; 0
    882c:	42 e0       	ldi	r20, 0x02	; 2
    882e:	50 e0       	ldi	r21, 0x00	; 0
    8830:	a4 0e       	add	r10, r20
    8832:	b5 1e       	adc	r11, r21
    8834:	a1 01       	movw	r20, r2
    8836:	0e 94 fd 44 	call	0x89fa	; 0x89fa <__ultoa_invert>
    883a:	d8 2e       	mov	r13, r24
    883c:	d2 18       	sub	r13, r2
    883e:	8f e7       	ldi	r24, 0x7F	; 127
    8840:	f8 2e       	mov	r15, r24
    8842:	f1 22       	and	r15, r17
    8844:	f6 fe       	sbrs	r15, 6
    8846:	0b c0       	rjmp	.+22     	; 0x885e <vfprintf+0x2f4>
    8848:	5e ef       	ldi	r21, 0xFE	; 254
    884a:	f5 22       	and	r15, r21
    884c:	d9 14       	cp	r13, r9
    884e:	38 f4       	brcc	.+14     	; 0x885e <vfprintf+0x2f4>
    8850:	f4 fe       	sbrs	r15, 4
    8852:	07 c0       	rjmp	.+14     	; 0x8862 <vfprintf+0x2f8>
    8854:	f2 fc       	sbrc	r15, 2
    8856:	05 c0       	rjmp	.+10     	; 0x8862 <vfprintf+0x2f8>
    8858:	8f ee       	ldi	r24, 0xEF	; 239
    885a:	f8 22       	and	r15, r24
    885c:	02 c0       	rjmp	.+4      	; 0x8862 <vfprintf+0x2f8>
    885e:	1d 2d       	mov	r17, r13
    8860:	01 c0       	rjmp	.+2      	; 0x8864 <vfprintf+0x2fa>
    8862:	19 2d       	mov	r17, r9
    8864:	f4 fe       	sbrs	r15, 4
    8866:	0d c0       	rjmp	.+26     	; 0x8882 <vfprintf+0x318>
    8868:	fe 01       	movw	r30, r28
    886a:	ed 0d       	add	r30, r13
    886c:	f1 1d       	adc	r31, r1
    886e:	80 81       	ld	r24, Z
    8870:	80 33       	cpi	r24, 0x30	; 48
    8872:	19 f4       	brne	.+6      	; 0x887a <vfprintf+0x310>
    8874:	99 ee       	ldi	r25, 0xE9	; 233
    8876:	f9 22       	and	r15, r25
    8878:	08 c0       	rjmp	.+16     	; 0x888a <vfprintf+0x320>
    887a:	1f 5f       	subi	r17, 0xFF	; 255
    887c:	f2 fe       	sbrs	r15, 2
    887e:	05 c0       	rjmp	.+10     	; 0x888a <vfprintf+0x320>
    8880:	03 c0       	rjmp	.+6      	; 0x8888 <vfprintf+0x31e>
    8882:	8f 2d       	mov	r24, r15
    8884:	86 78       	andi	r24, 0x86	; 134
    8886:	09 f0       	breq	.+2      	; 0x888a <vfprintf+0x320>
    8888:	1f 5f       	subi	r17, 0xFF	; 255
    888a:	0f 2d       	mov	r16, r15
    888c:	f3 fc       	sbrc	r15, 3
    888e:	14 c0       	rjmp	.+40     	; 0x88b8 <vfprintf+0x34e>
    8890:	f0 fe       	sbrs	r15, 0
    8892:	0f c0       	rjmp	.+30     	; 0x88b2 <vfprintf+0x348>
    8894:	1e 15       	cp	r17, r14
    8896:	10 f0       	brcs	.+4      	; 0x889c <vfprintf+0x332>
    8898:	9d 2c       	mov	r9, r13
    889a:	0b c0       	rjmp	.+22     	; 0x88b2 <vfprintf+0x348>
    889c:	9d 2c       	mov	r9, r13
    889e:	9e 0c       	add	r9, r14
    88a0:	91 1a       	sub	r9, r17
    88a2:	1e 2d       	mov	r17, r14
    88a4:	06 c0       	rjmp	.+12     	; 0x88b2 <vfprintf+0x348>
    88a6:	80 e2       	ldi	r24, 0x20	; 32
    88a8:	90 e0       	ldi	r25, 0x00	; 0
    88aa:	b3 01       	movw	r22, r6
    88ac:	0e 94 d1 44 	call	0x89a2	; 0x89a2 <fputc>
    88b0:	1f 5f       	subi	r17, 0xFF	; 255
    88b2:	1e 15       	cp	r17, r14
    88b4:	c0 f3       	brcs	.-16     	; 0x88a6 <vfprintf+0x33c>
    88b6:	04 c0       	rjmp	.+8      	; 0x88c0 <vfprintf+0x356>
    88b8:	1e 15       	cp	r17, r14
    88ba:	10 f4       	brcc	.+4      	; 0x88c0 <vfprintf+0x356>
    88bc:	e1 1a       	sub	r14, r17
    88be:	01 c0       	rjmp	.+2      	; 0x88c2 <vfprintf+0x358>
    88c0:	ee 24       	eor	r14, r14
    88c2:	04 ff       	sbrs	r16, 4
    88c4:	0f c0       	rjmp	.+30     	; 0x88e4 <vfprintf+0x37a>
    88c6:	80 e3       	ldi	r24, 0x30	; 48
    88c8:	90 e0       	ldi	r25, 0x00	; 0
    88ca:	b3 01       	movw	r22, r6
    88cc:	0e 94 d1 44 	call	0x89a2	; 0x89a2 <fputc>
    88d0:	02 ff       	sbrs	r16, 2
    88d2:	1d c0       	rjmp	.+58     	; 0x890e <vfprintf+0x3a4>
    88d4:	01 fd       	sbrc	r16, 1
    88d6:	03 c0       	rjmp	.+6      	; 0x88de <vfprintf+0x374>
    88d8:	88 e7       	ldi	r24, 0x78	; 120
    88da:	90 e0       	ldi	r25, 0x00	; 0
    88dc:	0e c0       	rjmp	.+28     	; 0x88fa <vfprintf+0x390>
    88de:	88 e5       	ldi	r24, 0x58	; 88
    88e0:	90 e0       	ldi	r25, 0x00	; 0
    88e2:	0b c0       	rjmp	.+22     	; 0x88fa <vfprintf+0x390>
    88e4:	80 2f       	mov	r24, r16
    88e6:	86 78       	andi	r24, 0x86	; 134
    88e8:	91 f0       	breq	.+36     	; 0x890e <vfprintf+0x3a4>
    88ea:	01 ff       	sbrs	r16, 1
    88ec:	02 c0       	rjmp	.+4      	; 0x88f2 <vfprintf+0x388>
    88ee:	8b e2       	ldi	r24, 0x2B	; 43
    88f0:	01 c0       	rjmp	.+2      	; 0x88f4 <vfprintf+0x38a>
    88f2:	80 e2       	ldi	r24, 0x20	; 32
    88f4:	f7 fc       	sbrc	r15, 7
    88f6:	8d e2       	ldi	r24, 0x2D	; 45
    88f8:	90 e0       	ldi	r25, 0x00	; 0
    88fa:	b3 01       	movw	r22, r6
    88fc:	0e 94 d1 44 	call	0x89a2	; 0x89a2 <fputc>
    8900:	06 c0       	rjmp	.+12     	; 0x890e <vfprintf+0x3a4>
    8902:	80 e3       	ldi	r24, 0x30	; 48
    8904:	90 e0       	ldi	r25, 0x00	; 0
    8906:	b3 01       	movw	r22, r6
    8908:	0e 94 d1 44 	call	0x89a2	; 0x89a2 <fputc>
    890c:	9a 94       	dec	r9
    890e:	d9 14       	cp	r13, r9
    8910:	c0 f3       	brcs	.-16     	; 0x8902 <vfprintf+0x398>
    8912:	da 94       	dec	r13
    8914:	f1 01       	movw	r30, r2
    8916:	ed 0d       	add	r30, r13
    8918:	f1 1d       	adc	r31, r1
    891a:	80 81       	ld	r24, Z
    891c:	90 e0       	ldi	r25, 0x00	; 0
    891e:	b3 01       	movw	r22, r6
    8920:	0e 94 d1 44 	call	0x89a2	; 0x89a2 <fputc>
    8924:	dd 20       	and	r13, r13
    8926:	a9 f7       	brne	.-22     	; 0x8912 <vfprintf+0x3a8>
    8928:	06 c0       	rjmp	.+12     	; 0x8936 <vfprintf+0x3cc>
    892a:	80 e2       	ldi	r24, 0x20	; 32
    892c:	90 e0       	ldi	r25, 0x00	; 0
    892e:	b3 01       	movw	r22, r6
    8930:	0e 94 d1 44 	call	0x89a2	; 0x89a2 <fputc>
    8934:	ea 94       	dec	r14
    8936:	ee 20       	and	r14, r14
    8938:	c1 f7       	brne	.-16     	; 0x892a <vfprintf+0x3c0>
    893a:	43 ce       	rjmp	.-890    	; 0x85c2 <vfprintf+0x58>
    893c:	f3 01       	movw	r30, r6
    893e:	66 81       	ldd	r22, Z+6	; 0x06
    8940:	77 81       	ldd	r23, Z+7	; 0x07
    8942:	cb 01       	movw	r24, r22
    8944:	2b 96       	adiw	r28, 0x0b	; 11
    8946:	0f b6       	in	r0, 0x3f	; 63
    8948:	f8 94       	cli
    894a:	de bf       	out	0x3e, r29	; 62
    894c:	0f be       	out	0x3f, r0	; 63
    894e:	cd bf       	out	0x3d, r28	; 61
    8950:	cf 91       	pop	r28
    8952:	df 91       	pop	r29
    8954:	1f 91       	pop	r17
    8956:	0f 91       	pop	r16
    8958:	ff 90       	pop	r15
    895a:	ef 90       	pop	r14
    895c:	df 90       	pop	r13
    895e:	cf 90       	pop	r12
    8960:	bf 90       	pop	r11
    8962:	af 90       	pop	r10
    8964:	9f 90       	pop	r9
    8966:	8f 90       	pop	r8
    8968:	7f 90       	pop	r7
    896a:	6f 90       	pop	r6
    896c:	5f 90       	pop	r5
    896e:	4f 90       	pop	r4
    8970:	3f 90       	pop	r3
    8972:	2f 90       	pop	r2
    8974:	08 95       	ret

00008976 <strnlen_P>:
    8976:	fc 01       	movw	r30, r24
    8978:	05 90       	lpm	r0, Z+
    897a:	61 50       	subi	r22, 0x01	; 1
    897c:	70 40       	sbci	r23, 0x00	; 0
    897e:	01 10       	cpse	r0, r1
    8980:	d8 f7       	brcc	.-10     	; 0x8978 <strnlen_P+0x2>
    8982:	80 95       	com	r24
    8984:	90 95       	com	r25
    8986:	8e 0f       	add	r24, r30
    8988:	9f 1f       	adc	r25, r31
    898a:	08 95       	ret

0000898c <strnlen>:
    898c:	fc 01       	movw	r30, r24
    898e:	61 50       	subi	r22, 0x01	; 1
    8990:	70 40       	sbci	r23, 0x00	; 0
    8992:	01 90       	ld	r0, Z+
    8994:	01 10       	cpse	r0, r1
    8996:	d8 f7       	brcc	.-10     	; 0x898e <strnlen+0x2>
    8998:	80 95       	com	r24
    899a:	90 95       	com	r25
    899c:	8e 0f       	add	r24, r30
    899e:	9f 1f       	adc	r25, r31
    89a0:	08 95       	ret

000089a2 <fputc>:
    89a2:	0f 93       	push	r16
    89a4:	1f 93       	push	r17
    89a6:	cf 93       	push	r28
    89a8:	df 93       	push	r29
    89aa:	8c 01       	movw	r16, r24
    89ac:	eb 01       	movw	r28, r22
    89ae:	8b 81       	ldd	r24, Y+3	; 0x03
    89b0:	81 ff       	sbrs	r24, 1
    89b2:	1b c0       	rjmp	.+54     	; 0x89ea <fputc+0x48>
    89b4:	82 ff       	sbrs	r24, 2
    89b6:	0d c0       	rjmp	.+26     	; 0x89d2 <fputc+0x30>
    89b8:	2e 81       	ldd	r18, Y+6	; 0x06
    89ba:	3f 81       	ldd	r19, Y+7	; 0x07
    89bc:	8c 81       	ldd	r24, Y+4	; 0x04
    89be:	9d 81       	ldd	r25, Y+5	; 0x05
    89c0:	28 17       	cp	r18, r24
    89c2:	39 07       	cpc	r19, r25
    89c4:	64 f4       	brge	.+24     	; 0x89de <fputc+0x3c>
    89c6:	e8 81       	ld	r30, Y
    89c8:	f9 81       	ldd	r31, Y+1	; 0x01
    89ca:	01 93       	st	Z+, r16
    89cc:	f9 83       	std	Y+1, r31	; 0x01
    89ce:	e8 83       	st	Y, r30
    89d0:	06 c0       	rjmp	.+12     	; 0x89de <fputc+0x3c>
    89d2:	e8 85       	ldd	r30, Y+8	; 0x08
    89d4:	f9 85       	ldd	r31, Y+9	; 0x09
    89d6:	80 2f       	mov	r24, r16
    89d8:	09 95       	icall
    89da:	89 2b       	or	r24, r25
    89dc:	31 f4       	brne	.+12     	; 0x89ea <fputc+0x48>
    89de:	8e 81       	ldd	r24, Y+6	; 0x06
    89e0:	9f 81       	ldd	r25, Y+7	; 0x07
    89e2:	01 96       	adiw	r24, 0x01	; 1
    89e4:	9f 83       	std	Y+7, r25	; 0x07
    89e6:	8e 83       	std	Y+6, r24	; 0x06
    89e8:	02 c0       	rjmp	.+4      	; 0x89ee <fputc+0x4c>
    89ea:	0f ef       	ldi	r16, 0xFF	; 255
    89ec:	1f ef       	ldi	r17, 0xFF	; 255
    89ee:	c8 01       	movw	r24, r16
    89f0:	df 91       	pop	r29
    89f2:	cf 91       	pop	r28
    89f4:	1f 91       	pop	r17
    89f6:	0f 91       	pop	r16
    89f8:	08 95       	ret

000089fa <__ultoa_invert>:
    89fa:	fa 01       	movw	r30, r20
    89fc:	aa 27       	eor	r26, r26
    89fe:	28 30       	cpi	r18, 0x08	; 8
    8a00:	51 f1       	breq	.+84     	; 0x8a56 <__ultoa_invert+0x5c>
    8a02:	20 31       	cpi	r18, 0x10	; 16
    8a04:	81 f1       	breq	.+96     	; 0x8a66 <__ultoa_invert+0x6c>
    8a06:	e8 94       	clt
    8a08:	6f 93       	push	r22
    8a0a:	6e 7f       	andi	r22, 0xFE	; 254
    8a0c:	6e 5f       	subi	r22, 0xFE	; 254
    8a0e:	7f 4f       	sbci	r23, 0xFF	; 255
    8a10:	8f 4f       	sbci	r24, 0xFF	; 255
    8a12:	9f 4f       	sbci	r25, 0xFF	; 255
    8a14:	af 4f       	sbci	r26, 0xFF	; 255
    8a16:	b1 e0       	ldi	r27, 0x01	; 1
    8a18:	3e d0       	rcall	.+124    	; 0x8a96 <__ultoa_invert+0x9c>
    8a1a:	b4 e0       	ldi	r27, 0x04	; 4
    8a1c:	3c d0       	rcall	.+120    	; 0x8a96 <__ultoa_invert+0x9c>
    8a1e:	67 0f       	add	r22, r23
    8a20:	78 1f       	adc	r23, r24
    8a22:	89 1f       	adc	r24, r25
    8a24:	9a 1f       	adc	r25, r26
    8a26:	a1 1d       	adc	r26, r1
    8a28:	68 0f       	add	r22, r24
    8a2a:	79 1f       	adc	r23, r25
    8a2c:	8a 1f       	adc	r24, r26
    8a2e:	91 1d       	adc	r25, r1
    8a30:	a1 1d       	adc	r26, r1
    8a32:	6a 0f       	add	r22, r26
    8a34:	71 1d       	adc	r23, r1
    8a36:	81 1d       	adc	r24, r1
    8a38:	91 1d       	adc	r25, r1
    8a3a:	a1 1d       	adc	r26, r1
    8a3c:	20 d0       	rcall	.+64     	; 0x8a7e <__ultoa_invert+0x84>
    8a3e:	09 f4       	brne	.+2      	; 0x8a42 <__ultoa_invert+0x48>
    8a40:	68 94       	set
    8a42:	3f 91       	pop	r19
    8a44:	2a e0       	ldi	r18, 0x0A	; 10
    8a46:	26 9f       	mul	r18, r22
    8a48:	11 24       	eor	r1, r1
    8a4a:	30 19       	sub	r19, r0
    8a4c:	30 5d       	subi	r19, 0xD0	; 208
    8a4e:	31 93       	st	Z+, r19
    8a50:	de f6       	brtc	.-74     	; 0x8a08 <__ultoa_invert+0xe>
    8a52:	cf 01       	movw	r24, r30
    8a54:	08 95       	ret
    8a56:	46 2f       	mov	r20, r22
    8a58:	47 70       	andi	r20, 0x07	; 7
    8a5a:	40 5d       	subi	r20, 0xD0	; 208
    8a5c:	41 93       	st	Z+, r20
    8a5e:	b3 e0       	ldi	r27, 0x03	; 3
    8a60:	0f d0       	rcall	.+30     	; 0x8a80 <__ultoa_invert+0x86>
    8a62:	c9 f7       	brne	.-14     	; 0x8a56 <__ultoa_invert+0x5c>
    8a64:	f6 cf       	rjmp	.-20     	; 0x8a52 <__ultoa_invert+0x58>
    8a66:	46 2f       	mov	r20, r22
    8a68:	4f 70       	andi	r20, 0x0F	; 15
    8a6a:	40 5d       	subi	r20, 0xD0	; 208
    8a6c:	4a 33       	cpi	r20, 0x3A	; 58
    8a6e:	18 f0       	brcs	.+6      	; 0x8a76 <__ultoa_invert+0x7c>
    8a70:	49 5d       	subi	r20, 0xD9	; 217
    8a72:	31 fd       	sbrc	r19, 1
    8a74:	40 52       	subi	r20, 0x20	; 32
    8a76:	41 93       	st	Z+, r20
    8a78:	02 d0       	rcall	.+4      	; 0x8a7e <__ultoa_invert+0x84>
    8a7a:	a9 f7       	brne	.-22     	; 0x8a66 <__ultoa_invert+0x6c>
    8a7c:	ea cf       	rjmp	.-44     	; 0x8a52 <__ultoa_invert+0x58>
    8a7e:	b4 e0       	ldi	r27, 0x04	; 4
    8a80:	a6 95       	lsr	r26
    8a82:	97 95       	ror	r25
    8a84:	87 95       	ror	r24
    8a86:	77 95       	ror	r23
    8a88:	67 95       	ror	r22
    8a8a:	ba 95       	dec	r27
    8a8c:	c9 f7       	brne	.-14     	; 0x8a80 <__ultoa_invert+0x86>
    8a8e:	00 97       	sbiw	r24, 0x00	; 0
    8a90:	61 05       	cpc	r22, r1
    8a92:	71 05       	cpc	r23, r1
    8a94:	08 95       	ret
    8a96:	9b 01       	movw	r18, r22
    8a98:	ac 01       	movw	r20, r24
    8a9a:	0a 2e       	mov	r0, r26
    8a9c:	06 94       	lsr	r0
    8a9e:	57 95       	ror	r21
    8aa0:	47 95       	ror	r20
    8aa2:	37 95       	ror	r19
    8aa4:	27 95       	ror	r18
    8aa6:	ba 95       	dec	r27
    8aa8:	c9 f7       	brne	.-14     	; 0x8a9c <__ultoa_invert+0xa2>
    8aaa:	62 0f       	add	r22, r18
    8aac:	73 1f       	adc	r23, r19
    8aae:	84 1f       	adc	r24, r20
    8ab0:	95 1f       	adc	r25, r21
    8ab2:	a0 1d       	adc	r26, r0
    8ab4:	08 95       	ret

00008ab6 <_exit>:
    8ab6:	f8 94       	cli

00008ab8 <__stop_program>:
    8ab8:	ff cf       	rjmp	.-2      	; 0x8ab8 <__stop_program>
